0001   0000             	device zxspectrum128
0002   0000              DEFINE	MAIN 1
0003   0000             ;Color settings
0004   0000             C_CMD	equ	6	;цвет команды
0005   0000             C_NORM	equ	7	;цвет нормального текста
0006   0000             C_WARN	equ	2	;цвет предупреждения
0007   0000             C_VAL	equ	5	;цвет значения
0008   0000             C_PRI	equ	4	;цвет первичных разделов
0009   0000             C_SEC	equ	3	;цвет вторичных разделов
0010   0000             C_EXT	equ	1	;Цвет расширенного раздела
0011   0000             C_DMP	equ	4	;цвет дампа
0012   0000             
0013   0000             	include "fdisk_equs.inc"
0001+  0000             _SPRINTER	equ	1
0002+  0000             _ZX128	equ	2
0003+  0000             _PROFI	equ	3
0004+  0000             _ATM	equ	4
0005+  0000             
0006+  0000             CR	equ	13
0007+  0000             LF	equ	10
0008+  0000             EN	equ	0
0009+  0000             COL	equ	16
0014   0000             	include "target.inc"
0001+  0000             _TARGET	equ	_ZX128
0002+  0000             
0015   0000             	include	"fdisk_macro.inc"
0001+  0000             
0002+  0000             	MACRO INITCONSOLE
0003+  0000~            	call	InitConsole
0004+  0000             	ENDM
0005+  0000             
0006+  0000             
0007+  0000             	MACRO CLS
0008+  0000~            	call	ClearScr
0009+  0000             	ENDM
0010+  0000             	
0011+  0000             	MACRO PCHARS
0012+  0000~            	call	Print
0013+  0000             	ENDM
0014+  0000             
0015+  0000             	MACRO _ANYKEY
0016+  0000~            	ld	hl,msgAnyKey
0017+  0000~            	PCHARS
0018+  0000~            	ld	hl,0
0019+  0000~            	call	Prompt
0020+  0000             	ENDM
0021+  0000             
0016   0000             
0017   0000             IMVector	EQU	#BE00
0018   0000             MAXMBRFIELDS	EQU	15	;максимальное количество записей MBR
0019   0000             MBRFIELDSIZE	equ	32	;размер записи
0020   0000             MBRUSFIELDSIZE	equ	8	;размер записи в таблице неиспользуемого пространства 4б - старт, 4б - длина
0021   0000             MAXMBRUS	equ	8	;макс.количество записей в MBRSUTable
0022   0000              IF _TARGET=_ATM | _TARGET = _SPRINTER
0023   0000~            MAXSHORTSNSHOW	equ	20	;максимальное количество знаков с/н, отображаемого в краткой инфе
0024   0000~            MAXSHORTMODELSHOW	equ	30;максимальное количество знаков модели в краткой инфе !!!Кратно 2!!!
0025   0000              ELSE
0026   0000             MAXSHORTSNSHOW	equ	12	;максимальное количество знаков с/н, отображаемого в краткой инфе
0027   0000             MAXSHORTMODELSHOW	equ	24;максимальное количество знаков модели в краткой инфе !!!Кратно 2!!! 
0028   0000              ENDIF
0029   0000             	include "build.inc"
0001+  0000             BUILD_COUNT	EQU	357
0002+  0000              define	BUILD_COUNT_T	"357"
0003+  0000             
0004+  0000             BUILD_DAY	EQU	11
0005+  0000              define	BUILD_DAY_T	"11"
0006+  0000             
0007+  0000             BUILD_MONTH	EQU	10
0008+  0000              define	BUILD_MONTH_T	"10"
0009+  0000             
0010+  0000             BUILD_YEAR	EQU	2013
0011+  0000              define	BUILD_YEAR_T	"2013"
0012+  0000             
0013+  0000              define	BUILD_DATE_T	"11.10.13"
0014+  0000              define	BUILD_DATE_NS_T	"111013"
0015+  0000             
0016+  0000              define	BUILD_TIME_T	"23:27"
0017+  0000             
0030   0000              define VERSION "0.2"
0031   0000             ;Для сборки релиз-версии версии раскоментировать следующую строку
0032   0000              ;DEFINE RELEASE 1
0033   0000              IFNDEF RELEASE
0034   0000               DEFINE DEBUG 1
0035   0000              ENDIF
0036   0000             
0037   0000              IF _TARGET = _PROFI
0038   0000~             	DEFINE _TARGET_T "Profi"
0039   0000~            _IM	EQU	1
0040   0000              ENDIF
0041   0000              IF _TARGET = _ATM
0042   0000~             	DEFINE _TARGET_T "ATM-Turbo2"
0043   0000~            _IM	EQU	1
0044   0000~            0045   0000              ENDIF
0046   0000              IF _TARGET = _ZX128
0047   0000               	DEFINE _TARGET_T "ZX-Spectrum128K"
0048   0000             _IM	EQU	1
0049   0000              ENDIF
0050   0000              IF _TARGET = _SPRINTER
0051   0000~             	DEFINE _TARGET_T "Sprinter"
0052   0000~            _IM	EQU	0
0053   0000              ENDIF
0054   0000             
0055   0000             ;Для кросс-платформенности
0056   0000              IF _TARGET=_ZX128 | _TARGET=_PROFI | _TARGET=_ATM
0057   0000             _ORG	equ	#6000
0058   0000              ENDIF
0059   0000              IF _TARGET=_SPRINTER
0060   0000~            _ORG	equ	#8100
0061   0000              ENDIF
0062   0000             	org	_ORG
0063   6000             FDISKSTART
0064   6000             
0065   6000             ;Драйвер контроллера жесткого диска
0066   6000             hDrvSign
0067   6000             	IF _TARGET=_PROFI
0068   6000~            	include "drv\profi_drv.asm"
0069   6000             	ELSE
0070   6000             	 IF  _TARGET=_ATM
0071   6000~            	include "drv\atm_drv.asm"
0072   6000             	 ELSE
0073   6000             	  IF _TARGET=_SPRINTER
0074   6000~            	include "drv\sprinter_drv.asm"
0075   6000             	  ELSE
0076   6000             	;По-умолчанию включаем NemoIDE
0077   6000             	include "drv\nemo_drv.asm"
0001+  6000              IFNDEF MAIN
0002+  6000~            	device	zxspectrum128
0003+  6000~            	include "..\fdisk_exp.inc"
0004+  6000~            	include "..\fdisk_equs.inc"
0005+  6000~            	include	"..\target.inc"
0006+  6000~            	org	_DRVORG
0007+  6000              ENDIF
0008+  6000             ;LAST UPDATE: 09.02.2010 savelij
0009+  6000             ;LAST UPDATE: 29.08.2013 HARD - ПОФИКСИЛ РАБОТУ СО SLAVE-УСТРОЙСТВАМИ
0010+  6000             DRVSTART
0011+  6000             Hddinit		EQU 0
0012+  6000             Hddoff		EQU 1
0013+  6000             Hddrds		EQU 2
0014+  6000             Hddrdm		EQU 3
0015+  6000             NemoIDE
0016+  6000              ;IF _TARGET=_PROFI
0017+  6000             ;		db "hdrp0" ; сигнатура для Профи-версии
0018+  6000              ;ELSE
0019+  6000 6864727630  		db "hdrv0" ; сигнатура для универсального драйвера
0020+  6005              ;ENDIF
0021+  6005             .str		db "NemoIDE v.0.2"
0021+  6005 4E656D6F49444520762E302E32
0022+  6012 20          		ds 27-($-.str),32
0023+  6020             ;ОБЩАЯ ТОЧКА ВХОДА ДЛЯ РАБОТЫ С HDD NEMO
0024+  6020 08          		EX AF,AF'
0025+  6021 E3          		EX (SP),HL
0026+  6022 7E          		LD A,(HL)
0027+  6023 23          		INC HL
0028+  6024 E3          		EX (SP),HL
0029+  6025 87          		ADD A,A
0030+  6026 E5          		PUSH HL
0031+  6027 21 37 60    		LD HL,TBLHDDN
0032+  602A 85          		ADD A,L
0033+  602B 6F          		LD L,A
0034+  602C 7C          		LD A,H
0035+  602D CE 00       		ADC A,0
0036+  602F 67          		LD H,A
0037+  6030 7E          		LD A,(HL)
0038+  6031 23          		INC HL
0039+  6032 66          		LD H,(HL)
0040+  6033 6F          		LD L,A
0041+  6034 08          		EX AF,AF'
0042+  6035 E3          		EX (SP),HL
0043+  6036 C9          		RET
0044+  6037             
0045+  6037 48 60       TBLHDDN		DW HDDINIT
0046+  6039 77 60       		DW HDDSETMASTER
0047+  603B 83 60       		DW HDDSETSLAVE		
0048+  603D 76 60       		DW HDDOFF
0049+  603F C4 60       		DW HDDRDS			;READ SINGLE
0050+  6041 EA 60       		DW HDDWTS			;Write single
0051+  6043 C6 60       		DW HDDRDM			;READ MULTI
0052+  6045 EC 60       		DW HDDWTM			;Write multi
0053+  6047             
0054+  6047 00          MS		DB	0
0055+  6048             ;Входные параметры общие:
0056+  6048             ;HL-адрес загрузки в память
0057+  6048             ;BCDE-32-х битный номер сектора
0058+  6048             ;A-количество блоков (блок=512 байт)
0059+  6048             ;только для многоблочной записи/чтении
0060+  6048             
0061+  6048             P_1F7		EQU 0XF0			;РЕГИСТР СОСТОЯНИЯ/РЕГИСТР КОМАНД
0062+  6048             P_1F6		EQU 0XD0			;CHS-НОМЕР ГОЛОВЫ И УСТР/LBA АДРЕС 24-27
0063+  6048             P_1F5		EQU 0XB0			;CHS-ЦИЛИНДР 8-15/LBA АДРЕС 16-23
0064+  6048             P_1F4		EQU 0X90			;CHS-ЦИЛИНДР 0-7/LBA АДРЕС 8-15
0065+  6048             P_1F3		EQU 0X70			;CHS-НОМЕР СЕКТОРА/LBA АДРЕС 0-7
0066+  6048             P_1F2		EQU 0X50			;СЧЕТЧИК СЕКТОРОВ
0067+  6048             P_1F1		EQU 0X30			;ПОРТ ОШИБОК/СВОЙСТВ
0068+  6048             P_1F0		EQU 0X10			;ПОРТ ДАННЫХ
0069+  6048             P_3F6		EQU 0XC8			;РЕГИСТР СОСТОЯНИЯ/УПРАВЛЕНИЯ
0070+  6048             P_HI		EQU 0X11			;СТАРШИЕ 8 БИТ
0071+  6048             PRT_RW		EQU P_1F0*256+P_HI	;ПОРТЫ ЧТЕНИЯ/ЗАПИСИ ОДНИМ СЛОВОМ
0072+  6048             
0073+  6048             ;НА ВЫХОДЕ:
0074+  6048             ;H-ДЛЯ MASTER 0-HDD, 1-CDROM, 0XFF-NONE
0075+  6048             ;L-ДЛЯ SLAVE  0-HDD, 1-CDROM, 0XFF-NONE
0076+  6048 AF          HDDINIT		xor	a
0077+  6049 32 78 60    		ld	(hddmaster_exist),a
0078+  604C 32 84 60    		ld	(hddslave_exist),a
0079+  604F CD 77 60    		CALL	HDDSETMASTER
0080+  6052 E5          		PUSH HL
0081+  6053 CD 9C 61    		CALL ID_DEV
0082+  6056 E1          		POP HL
0083+  6057 A7          		AND A
0084+  6058 CC 8C 60    		CALL Z,INIT_91
0085+  605B 32 78 60    		ld	(hddmaster_exist),a
0086+  605E 57          		LD D,A
0087+  605F D5          		PUSH DE
0088+  6060 CD 83 60    		CALL	HDDSETSLAVE
0089+  6063 11 00 02    		LD DE,512
0090+  6066 19          		ADD HL,DE
0091+  6067 E5          		PUSH HL
0092+  6068 CD 9C 61    		CALL ID_DEV
0093+  606B E1          		POP HL
0094+  606C A7          		AND A
0095+  606D CC 8C 60    		CALL Z,INIT_91
0096+  6070 E1          		POP HL
0097+  6071 6F          		LD L,A;0xff
0098+  6072 32 84 60    		ld	(hddslave_exist),a
0099+  6075 AF          		XOR A
0100+  6076             
0101+  6076 C9          HDDOFF		RET
0102+  6077             ;установка мастера текущим для всех последующих операций
0103+  6077 3E 00       HDDSETMASTER	ld	a,0
0104+  6079             hddmaster_exist	equ	$-1
0105+  6079 A7          		and	a
0106+  607A 37          		scf
0107+  607B C0          		ret	nz
0108+  607C 3E E0       		LD	A,0XE0	;LBA+MASTER
0109+  607E 32 47 60    HDDSET1		ld	(MS),A
0110+  6081 A7          		AND	A
0111+  6082 C9          		RET
0112+  6083             ;установка слейва текущим для всех последующих операций
0113+  6083 3E 00       HDDSETSLAVE	ld	a,0
0114+  6085             hddslave_exist	equ	$-1
0115+  6085 A7          		and	a
0116+  6086 37          		scf
0117+  6087 C0          		ret	nz
0118+  6088 3E F0       		LD	A,0XF0
0119+  608A 18 F2       		JR	HDDSET1
0120+  608C             
0121+  608C E5          INIT_91		PUSH HL
0122+  608D 2E 63       		LD L,49*2+1
0123+  608F 7E          		LD A,(HL)
0124+  6090 E6 02       		AND 2
0125+  6092 28 2C       		JR Z,INI_912
0126+  6094 01 50 FF    		LD BC,0XFF00+P_1F2
0127+  6097 2E 0C       		LD L,0X0C
0128+  6099 7E          		LD A,(HL)
0129+  609A ED 79        		OUT (C),A
0130+  609C 2E 06        		LD L,6
0131+  609E 0E D0        		LD C,P_1F6
0132+  60A0 3A 47 60    		LD	A,(MS)
0133+  60A3 E6 B0       		AND	%10110000
0134+  60A5 56           		LD D,(HL)
0135+  60A6 15          		DEC D
0136+  60A7 B2          		OR	D
0137+  60A8 ED 79       		OUT (C),A
0138+  60AA 0E F0       		LD C,P_1F7
0139+  60AC 3E 91       		LD A,0X91
0140+  60AE ED 79       		OUT (C),A
0141+  60B0 11 00 10    		LD DE,0X1000
0142+  60B3 1B          INI_911		DEC DE
0143+  60B4 7A          		LD A,D
0144+  60B5 B3          		OR E
0145+  60B6 28 08       		JR Z,INI_912
0146+  60B8 ED 78       		IN A,(C)
0147+  60BA E6 80       		AND 0X80
0148+  60BC 20 F5       		JR NZ,INI_911
0149+  60BE E1          		POP HL
0150+  60BF C9          		RET
0151+  60C0             
0152+  60C0 3E FF       INI_912		LD A,0XFF
0153+  60C2 E1          		POP HL
0154+  60C3 C9          		RET
0155+  60C4             
0156+  60C4 3E 01       HDDRDS		LD A,1
0157+  60C6 C5          HDDRDM		PUSH BC
0158+  60C7 D5          		PUSH DE
0159+  60C8 CD 71 61    		CALL SETHREG
0160+  60CB 08          		EX AF,AF'
0161+  60CC 0E F0       		LD C,P_1F7
0162+  60CE 3E 20       		LD A,0X20
0163+  60D0 ED 79       		OUT (C),A
0164+  60D2 CD 0B 61    		call W_DRQ
0165+  60D5 08          		EX AF,AF'
0166+  60D6 08          HDDRD2		EX AF,AF'
0167+  60D7 CD 21 61    		CALL READSEC
0168+  60DA 0E F0       		LD C,P_1F7
0169+  60DC ED 78       HDDRD3		IN A,(C)
0170+  60DE E6 80       		AND 0X80
0171+  60E0 20 FA       		JR NZ,HDDRD3
0172+  60E2 08          		EX AF,AF'
0173+  60E3 3D          		DEC A
0174+  60E4 20 F0       		JR NZ,HDDRD2
0175+  60E6 D1          		POP DE
0176+  60E7 C1          		POP BC
0177+  60E8 AF          		XOR A
0178+  60E9 C9          		RET
0179+  60EA             
0180+  60EA 3E 01       HDDWTS		LD A,1
0181+  60EC C5          HDDWTM	  	PUSH BC
0182+  60ED D5          		PUSH DE
0183+  60EE CD 71 61    		CALL SETHREG
0184+  60F1 08          		EX AF,AF'
0185+  60F2 0E F0       		LD C,P_1F7
0186+  60F4 3E 30       	        LD A,#30
0187+  60F6 ED 79       	        OUT (C),A
0188+  60F8 CD 0B 61    	        call W_DRQ
0189+  60FB 08          	        ex af,af'
0190+  60FC 08          .w1		ex af,af'
0191+  60FD CD 41 61    	        CALL WRITESEC
0192+  6100 CD 17 61    	        CALL W_BSY
0193+  6103 08          	        ex af,af'
0194+  6104 3D          	        dec a
0195+  6105 20 F5       	        jr nz,.w1
0196+  6107 D1          	        pop de
0197+  6108 C1          	        pop BC
0198+  6109 AF          	        xor a
0199+  610A C9          	        RET
0200+  610B 01 F0 FF    W_DRQ		LD BC,0XFF00+P_1F7
0201+  610E ED 78       .drq		IN A,(C)
0202+  6110 E6 88       		AND 0X88
0203+  6112 FE 08       		CP 8
0204+  6114 20 F8       		JR NZ,.drq
0205+  6116 C9          		RET
0206+  6117 01 F0 FF    W_BSY		LD BC,0xFF00+P_1F7
0207+  611A ED 78       .bsy		IN A,(C)
0208+  611C E6 80       		AND 0X80
0209+  611E 20 FA       		JR NZ,.bsy
0210+  6120 C9          		ret
0211+  6121             ;чтение 512б данных
0212+  6121 0E 10       READSEC		LD C,P_1F0
0213+  6123 3E 40       		ld a,#40
0214+  6125             .rs1		dup	4
0215+  6125 ED A2       >		INI
0216+  6127 0C          >		INC C
0217+  6128 ED A2       >		INI
0218+  612A 0D          >		DEC C
0215+  612B ED A2       >		INI
0216+  612D 0C          >		INC C
0217+  612E ED A2       >		INI
0218+  6130 0D          >		DEC C
0215+  6131 ED A2       >		INI
0216+  6133 0C          >		INC C
0217+  6134 ED A2       >		INI
0218+  6136 0D          >		DEC C
0215+  6137 ED A2       >		INI
0216+  6139 0C          >		INC C
0217+  613A ED A2       >		INI
0218+  613C 0D          >		DEC C
0219+  613D 3D                  	DEC A
0220+  613E 20 E5        JR NZ,.rs1
0221+  6140 C9                  	RET
0222+  6141              ;запись 512б данных на HDD
0223+  6141 0E 11       WRITESEC   	LD C,P_HI
0224+  6143 3E 40       		LD a,#40
0225+  6145             .ss1     	dup	4
0226+  6145 23          >		INC HL
0227+  6146 ED A3       >		OUTI
0228+  6148 0D          >		DEC C
0229+  6149 2B          >		dec HL
0230+  614A 2B          >	        DEC HL
0232+  614B ED A3       >	        OUTI
0233+  614D 0C          >	        INC C
0234+  614E 23          >	        INC HL
0226+  614F 23          >		INC HL
0227+  6150 ED A3       >		OUTI
0228+  6152 0D          >		DEC C
0229+  6153 2B          >		dec HL
0230+  6154 2B          >	        DEC HL
0232+  6155 ED A3       >	        OUTI
0233+  6157 0C          >	        INC C
0234+  6158 23          >	        INC HL
0226+  6159 23          >		INC HL
0227+  615A ED A3       >		OUTI
0228+  615C 0D          >		DEC C
0229+  615D 2B          >		dec HL
0230+  615E 2B          >	        DEC HL
0232+  615F ED A3       >	        OUTI
0233+  6161 0C          >	        INC C
0234+  6162 23          >	        INC HL
0226+  6163 23          >		INC HL
0227+  6164 ED A3       >		OUTI
0228+  6166 0D          >		DEC C
0229+  6167 2B          >		dec HL
0230+  6168 2B          >	        DEC HL
0232+  6169 ED A3       >	        OUTI
0233+  616B 0C          >	        INC C
0234+  616C 23          >	        INC HL
0236+  616D 3D          	        DEC a
0237+  616E 20 D5       	        JR NZ,.ss1
0238+  6170 C9          	        RET 
0239+  6171             
0240+  6171 D5          SETHREG		PUSH DE
0241+  6172 08          		EX AF,AF'
0242+  6173 78          		ld	a,b	;LBA28 - отсекаем биты 4-7, т.к. в этой адресации они не поддерживаются
0243+  6174 E6 0F       		and	15	
0244+  6176 57          		LD D,a
0245+  6177 59          		LD E,C
0246+  6178 01 D0 FF    		LD BC,0XFF00+P_1F6
0247+  617B 3A 47 60    		LD	A,(MS)
0248+  617E B2          		OR	D
0249+  617F ED 79       		OUT (C),A
0250+  6181 0E F0       		LD C,P_1F7
0251+  6183 ED 78       SETHRE1		IN A,(C)
0252+  6185 E6 80       		AND 0X80
0253+  6187 20 FA       		JR NZ,SETHRE1
0254+  6189 0E B0       		LD C,P_1F5
0255+  618B ED 59       		OUT (C),E
0256+  618D D1          		POP DE
0257+  618E 0E 90       		LD C,P_1F4
0258+  6190 ED 51       		OUT (C),D
0259+  6192 0E 70       		LD C,P_1F3
0260+  6194 ED 59       		OUT (C),E
0261+  6196 0E 50       		LD C,P_1F2
0262+  6198 08          		EX AF,AF'
0263+  6199 ED 79       		OUT (C),A
0264+  619B C9          		RET
0265+  619C             
0266+  619C             ;HL-АДРЕС БУФЕРА СЕКТОРА ИДЕНТИФИКАЦИИ
0267+  619C             ;A=E0-ДЛЯ MASTER, A=F0-ДЛЯ SLAVE
0268+  619C 01 D0 FF    ID_DEV		LD BC,0XFF00+P_1F6
0269+  619F 3A 47 60    		LD	A,(MS)
0270+  61A2 ED 79       		OUT (C),A
0271+  61A4 0E F0       		LD C,P_1F7
0272+  61A6 ED 78       		IN A,(C)
0273+  61A8 A7          		AND A
0274+  61A9 28 3C       		JR Z,NO_DEV
0275+  61AB 3C          		INC A
0276+  61AC 28 39       		JR Z,NO_DEV
0277+  61AE AF          		XOR A
0278+  61AF 0E B0       		LD C,P_1F5
0279+  61B1 ED 79       		OUT (C),A
0280+  61B3 0E 90       		LD C,P_1F4
0281+  61B5 ED 79       		OUT (C),A
0282+  61B7 3E EC       		LD A,0XEC
0283+  61B9 0E F0       		LD C,P_1F7
0284+  61BB ED 79       		OUT (C),A
0285+  61BD 0E F0       		LD C,P_1F7
0286+  61BF ED 78       ID_DEV1		IN A,(C)
0287+  61C1 A7          		AND A
0288+  61C2 28 23       		JR Z,NO_DEV
0289+  61C4 3C          		INC A
0290+  61C5 28 20       		JR Z,NO_DEV
0291+  61C7 3D          		DEC A
0292+  61C8 0F          		RRCA
0293+  61C9 38 07       		JR C,ID_DEV2
0294+  61CB 07          		RLCA
0295+  61CC E6 88       		AND 0X88
0296+  61CE FE 08       		CP 8
0297+  61D0 20 ED       		JR NZ,ID_DEV1
0298+  61D2 0E 90       ID_DEV2		LD C,P_1F4
0299+  61D4 ED 58       		IN E,(C)
0300+  61D6 0E B0       		LD C,P_1F5
0301+  61D8 ED 50       		IN D,(C)
0302+  61DA 7A          		LD A,D
0303+  61DB B3          		OR E
0304+  61DC CA 21 61    		JP Z,READSEC
0305+  61DF 21 14 EB    		LD HL,0XEB14
0306+  61E2 ED 52       		SBC HL,DE
0307+  61E4 3E 01       		LD A,1
0308+  61E6 C8          		RET Z
0309+  61E7 3E FF       NO_DEV		LD A,0XFF
0310+  61E9 C9          		RET
0311+  61EA             DRVEND
0312+  61EA              IFNDEF	MAIN
0313+  61EA~            	SAVEBIN	"..\out\nemoide.drv",DRVSTART,DRVEND-DRVSTART
0314+  61EA              ENDIF
0315+  61EA             
0078   61EA             	  ENDIF
0079   61EA             	 ENDIF
0080   61EA             	ENDIF
0081   61EA             
0082   61EA             hDrvVersion=hDrvSign+5
0083   61EA             hDrvEntry=hDrvSign+32
0084   61EA             _DRVORG=hDrvSign
0085   61EA              IF $-hDrvSign>=1024
0086   61EA~            	Display "WARNING! Driver size too big!!!"
0087   61EA              ENDIF
0088   61EA             
0089   61EA             ;выравниваем адрес по границе в 1кб (размер драйвера не должен превышать 1кб)
0090   61EA             
0091   61EA              IF _TARGET=_ZX128 | _TARGET=_PROFI | _TARGET=_ATM
0092   61EA 00          	align	1024
0093   6400              ENDIF
0094   6400             
0095   6400              IF _TARGET=_ZX128
0096   6400             font	insert "bins\64qua+.fnt"
0097   6C00              ELSE
0098   6C00~            	IF _TARGET =_PROFI
0099   6C00~            font	insert "bins\866_code_H.fnt"	
0100   6C00~            	ENDIF
0101   6C00              ENDIF
0102   6C00             
0103   6C00             ;------------------------------------------------------
0104   6C00             ;	***   Старт   ***
0105   6C00             ;------------------------------------------------------
0106   6C00             MainStart
0107   6C00 F3          	di
0108   6C01 31 FF 5F    	ld	sp,_ORG-1
0109   6C04 21 58 9D    	ld	hl,JMP_Table
0110   6C07 11 02 BF    	ld	de,#bf02
0111   6C0A 01 4E 00    	ld	bc,JMP_TableEnd-JMP_Table
0112   6C0D ED B0       	ldir
0113   6C0F              IF _TARGET = _SPRINTER
0114   6C0F~            	ld	(idMem),a
0115   6C0F~            	ld	(arrPages),hl
0116   6C0F~            	ld	(ARGV),ix
0117   6C0F              ENDIF
0118   6C0F             	INITCONSOLE
0118   6C0F CD CC 7A    >	call	InitConsole
0119   6C12              IF _TARGET=_ZX128 | _TARGET=_PROFI | _TARGET=_ATM
0120   6C12 AF          	xor	a
0121   6C13 32 BC 7D    	ld	(curShow),a 	
0122   6C16 CD C3 7D     	call	OpenPG
0123   6C19 CD 2D 71    	call	IM2Init
0124   6C1C              ENDIF
0125   6C1C             MainLoop
0126   6C1C             ;добавить диалог выбора драйвера и загрузку его в ОЗУ
0127   6C1C             
0128   6C1C              IF _TARGET=_ZX128 | _TARGET=_PROFI | _TARGET=_ATM
0129   6C1C 21 09 72    	ld	hl,msgHello
0130   6C1F             	PCHARS
0130   6C1F CD F7 7A    >	call	Print
0131   6C22             
0132   6C22 CD D0 7D    	call	LoadDriver
0133   6C25             ;Проверка сигнатуры драйвера
0134   6C25 21 AF 71    	ld	hl,msgSign
0135   6C28 11 00 60    	ld	de,hDrvSign
0136   6C2B 06 04       	ld	b,4
0137   6C2D             .signchk
0138   6C2D 1A          	ld	a,(de)
0139   6C2E BE          	cp	(hl)
0140   6C2F C2 EC 6C    	jp	nz,wrong
0141   6C32 13          	inc	de
0142   6C33 23          	inc	hl
0143   6C34 10 F7       	djnz	.signchk
0144   6C36             
0145   6C36             ;Драйвер наш - успокаиваемся!
0146   6C36             ;Печатаем информацию о драйвере
0147   6C36 3A 68 7E    	ld	a,(DrvLoaded)
0148   6C39 21 BD 71    	ld	hl,strDrvFileName
0149   6C3C A7          	and	a
0150   6C3D 28 03       	jr	z,.ne1
0151   6C3F 21 BE 7E    	ld	hl,msgDrvLoad.name
0152   6C42             .ne1
0153   6C42              ELSE
0154   6C42~            	ld	hl,strDrvFileName
0155   6C42              ENDIF
0156   6C42 11 B4 72    	ld	de,msgDriver.fn
0157   6C45 01 0C 00    	ld	bc,12
0158   6C48 ED B0       	ldir
0159   6C4A 21 05 60    	ld	hl,hDrvVersion
0160   6C4D 11 D7 72    	ld	de,msgDriver.str
0161   6C50 01 1B 00    	ld	bc,27
0162   6C53 ED B0       	ldir
0163   6C55             	CLS
0163   6C55 CD CF 7A    >	call	ClearScr
0164   6C58             MainNoDrvLoad
0165   6C58             
0166   6C58 21 09 72    	ld	hl,msgHello
0167   6C5B             	PCHARS
0167   6C5B CD F7 7A    >	call	Print
0168   6C5E             
0169   6C5E 21 A2 72    	ld	hl,msgDriver
0170   6C61             	PCHARS
0170   6C61 CD F7 7A    >	call	Print
0171   6C64             
0172   6C64 21 08 73    	ld	hl,msgFindDrives
0173   6C67             	PCHARS
0173   6C67 CD F7 7A    >	call	Print
0174   6C6A             ;Обнуляем список операций
0175   6C6A AF          	xor	a
0176   6C6B 32 AD 71    	ld	(cntOperations),a
0177   6C6E             
0178   6C6E             
0179   6C6E             ;Инициируем приводы
0180   6C6E             	IF _IM = 1
0181   6C6E CD 52 71    	call	IM1SET
0182   6C71             	ENDIF
0183   6C71 F3          	di
0184   6C72 21 00 C0    	ld	hl,Buffer
0185   6C75              IF _TARGET = _ZX128
0186   6C75 AF          	xor	a
0187   6C76              ENDIF
0188   6C76              IF _TARGET = _PROFI
0189   6C76~            	ld	a,#80
0190   6C76              ENDIF
0191   6C76              IF _TARGET = _ATM
0192   6C76~            	ld	a,%10101110
0193   6C76              ENDIF
0194   6C76 CD 20 60    	call	hDrvEntry
0195   6C79 00          	db	0	;HDDInit
0196   6C7A 22 AB 71    	ld	(statDrv),hl
0197   6C7D             	IF _IM = 1
0198   6C7D CD 49 71    	call	IM2SET
0199   6C80             	ENDIF
0200   6C80 AF          	xor	a
0201   6C81 CD DF 6F    	call	ShowStat
0202   6C84 3E 01       	ld	a,1
0203   6C86 CD DF 6F    	call	ShowStat
0204   6C89 2A AB 71    	ld	hl,(statDrv)
0205   6C8C 11 01 01    	ld	de,#0101
0206   6C8F A7          	and	a
0207   6C90 ED 52       	sbc	hl,de
0208   6C92 20 08       	jr	nz,.l1
0209   6C94             ;нет ни одного винта - предупреждаем и возвращаемся к выбору драйвера
0210   6C94 21 51 74    .l4	ld	hl,msgHDDNotFound
0211   6C97             	PCHARS
0211   6C97 CD F7 7A    >	call	Print
0212   6C9A 18 56       	jr	wr1
0213   6C9C             .l1	
0214   6C9C 19          	add	hl,de
0215   6C9D 11 FF FF    	ld	de,#ffff
0216   6CA0 A7          	and	a
0217   6CA1 ED 52       	sbc	hl,de
0218   6CA3 28 EF       	jr	z,.l4
0219   6CA5             ;Найдено 1 или 2 устройства
0220   6CA5 19          	add	hl,de
0221   6CA6 7D          	ld	a,l	;Есть оба устройства?
0222   6CA7 B4          	or	h
0223   6CA8 28 36       	jr	z,.l3
0224   6CAA E5          	push	hl
0225   6CAB 21 6F 74    	ld	hl,msgSelected
0226   6CAE             	PCHARS
0226   6CAE CD F7 7A    >	call	Print
0227   6CB1 E1          	pop	hl
0228   6CB2 7C          	ld	a,h
0229   6CB3 21 30 73    	ld	hl,msgMaster
0230   6CB6 A7          	and	a
0231   6CB7 28 05       	jr	z,.l2
0232   6CB9             ;Выбор мастера
0233   6CB9 3E 01       	ld	a,1
0234   6CBB 21 38 73    	ld	hl,msgSlave
0235   6CBE 32 A2 71    .l2	ld	(devSelected),a
0236   6CC1             	PCHARS
0236   6CC1 CD F7 7A    >	call	Print
0237   6CC4 21 3F 73    	ld	hl,msgDevice
0238   6CC7             	PCHARS
0238   6CC7 CD F7 7A    >	call	Print
0239   6CCA 21 9C 74    	ld	hl,msgAnyKeyQuit
0240   6CCD             	PCHARS
0240   6CCD CD F7 7A    >	call	Print
0241   6CD0 21 00 00    	ld	hl,0
0242   6CD3 CD A9 7F    	call	Prompt
0243   6CD6 FE 71       	cp	"q"
0244   6CD8 CA 57 6E    	jp	z,dlgAppQuit
0245   6CDB 3A A2 71    	ld	a,(devSelected)
0246   6CDE 18 40       	jr	selHDD
0247   6CE0             .l3
0248   6CE0             ;Найдено 2 устройства, доверим выбор пользователю
0249   6CE0 21 1A 74    	ld	hl,msgSelectDrive
0250   6CE3             	PCHARS
0250   6CE3 CD F7 7A    >	call	Print
0251   6CE6 21 0A 6D    	ld	hl,tblMasterSlave
0252   6CE9 C3 A9 7F    	jp	Prompt
0253   6CEC             	
0254   6CEC             ;Сигнатура в драйвере не правильная
0255   6CEC 21 F8 72    wrong	ld	hl,msgSignFail
0256   6CEF             	PCHARS
0256   6CEF CD F7 7A    >	call	Print
0257   6CF2             wr1	
0258   6CF2 21 7B 74    	ld	hl,msgAnyKey
0259   6CF5             	PCHARS
0259   6CF5 CD F7 7A    >	call	Print
0260   6CF8             
0261   6CF8 21 00 00    	ld	hl,0
0262   6CFB CD A9 7F    	call	Prompt
0263   6CFE             	CLS
0263   6CFE CD CF 7A    >	call	ClearScr
0264   6D01 C3 1C 6C    	jp	MainLoop
0265   6D04             jpMain	CLS		;Очистка экрана и возврат к началу
0265   6D04 CD CF 7A    >	call	ClearScr
0266   6D07 C3 58 6C    	jp	MainNoDrvLoad
0267   6D0A             tblMasterSlave
0268   6D0A 31          	db	"1"
0269   6D0B 1B 6D       	dw	hddMaster
0270   6D0D 32          	db	"2"
0271   6D0E 1E 6D       	dw	hddSlave
0272   6D10 71          	db	"q"
0273   6D11 57 6E       	dw	dlgAppQuit
0274   6D13 00          	db	0
0275   6D14             tblLarge
0276   6D14 79          	db	"y"
0277   6D15 54 6D       	dw	ShowPartition
0278   6D17 6E          	db	"n"
0279   6D18 04 6D       	dw	jpMain
0280   6D1A 00          	db	0
0281   6D1B             
0282   6D1B             ;---------------------------------------------------------
0283   6D1B             ;	Выбор пользователем привода
0284   6D1B             ;---------------------------------------------------------
0285   6D1B             hddMaster
0286   6D1B AF          	xor	a
0287   6D1C 18 02       	jr	selHDD
0288   6D1E             
0289   6D1E             hddSlave
0290   6D1E 3E 01       	ld	a,1
0291   6D20 32 A2 71    selHDD	ld	(devSelected),a
0292   6D23             ;Проверка размера жесткого диска
0293   6D23 26 C0       	ld	h,high Buffer
0294   6D25 A7          	and	a
0295   6D26 28 02       	jr	z,.s1
0296   6D28 26 C2       	ld	h,high (Buffer+512)
0297   6D2A 2E A7       .s1	ld	l,83*2+1	;83 word of Device Identify data
0298   6D2C 7E          	ld	a,(hl)
0299   6D2D E6 04       	and	4	;Support LBA48?	w83 10bit==1 is supported
0300   6D2F 28 23       	jr	z,ShowPartition	;no - okay
0301   6D31 2E 78       	ld	l,60*2		;при lba48 должно присутствовать #0fffffff
0302   6D33 7E          	ld	a,(hl)
0303   6D34 23          	inc	hl
0304   6D35 A6          	and	(hl)
0305   6D36 23          	inc	hl
0306   6D37 A6          	and	(hl)
0307   6D38 3C          	inc	a
0308   6D39 20 19       	jr	nz,ShowPartition
0309   6D3B 23          	inc	hl
0310   6D3C 7E          	ld	a,(hl)
0311   6D3D FE 0F       	cp	15
0312   6D3F 20 13       	jr	nz,ShowPartition
0313   6D41 3A 04 60    	ld	a,(hDrvSign+4)
0314   6D44 E6 01       	and	1		;Поддерживается LBA48?
0315   6D46 20 0C       	jr	nz,ShowPartition
0316   6D48 21 5F 78    	ld	hl,msgLarge
0317   6D4B             	PCHARS
0317   6D4B CD F7 7A    >	call	Print
0318   6D4E 21 14 6D    	ld	hl,tblLarge
0319   6D51 C3 A9 7F    	jp	Prompt
0320   6D54             ;---------------------------------------------------------
0321   6D54             ;	Отображение партиций на винте
0322   6D54             ;---------------------------------------------------------
0323   6D54             ShowPartition
0324   6D54 3A A2 71    	ld	a,(devSelected)
0325   6D57 F5          	push	af
0326   6D58 3C          	inc	a
0327   6D59 32 62 6D    	ld	(.s1),a
0328   6D5C             	IF _IM = 1
0329   6D5C CD 52 71    	call	IM1SET
0330   6D5F             	ENDIF
0331   6D5F CD 20 60    	call	hDrvEntry
0332   6D62 00          .s1	db	0	;Установка текущим для операций Master или Slave
0333   6D63             	IF _IM = 1
0334   6D63 CD 49 71    	call	IM2SET
0335   6D66             	ENDIF
0336   6D66 CD 34 85    	call	CreateMBRTable	;анализ диска и построение таблицы BR в ОЗУ	
0337   6D69 F1          	pop	af
0338   6D6A CD 7D 70    	call	GetHDDPar
0339   6D6D AF          	xor	a
0340   6D6E 32 AD 71    	ld	(cntOperations),a
0341   6D71             
0342   6D71             .continue
0343   6D71             	CLS
0343   6D71 CD CF 7A    >	call	ClearScr
0344   6D74 3A A2 71    	ld	a,(devSelected)
0345   6D77 21 30 73    	ld	hl,msgMaster
0346   6D7A 3D          	dec	a
0347   6D7B 20 03       	jr	nz,.n1
0348   6D7D 21 38 73    	ld	hl,msgSlave
0349   6D80             .n1	PCHARS
0349   6D80 CD F7 7A    >	call	Print
0350   6D83 21 3F 73    	ld	hl,msgDevice
0351   6D86             	PCHARS
0351   6D86 CD F7 7A    >	call	Print
0352   6D89 21 E1 74    	ld	hl,msgHDDShortInfo
0353   6D8C             	PCHARS
0353   6D8C CD F7 7A    >	call	Print
0354   6D8F 3A A1 71    	ld	a,(partCount)
0355   6D92 A7          	and	a
0356   6D93 20 08       	jr	nz,.s2
0357   6D95             ;Ошибка в МБР
0358   6D95 21 1B 75    	ld	hl,msgMBRNotFound
0359   6D98             	PCHARS
0359   6D98 CD F7 7A    >	call	Print
0360   6D9B 18 10       	jr	.s0
0361   6D9D 21 35 75    .s2	ld	hl,msgMBRHead
0362   6DA0             	PCHARS
0362   6DA0 CD F7 7A    >	call	Print
0363   6DA3 DD 21 00 9E 	ld	ix,MBRTable
0364   6DA7 3A A1 71    	ld	a,(partCount)
0365   6DAA CD 15 8C    	call	ShowPartitions
0366   6DAD             ;	ld	ix,MBRTable
0367   6DAD             ;	ld	b,0
0368   6DAD             ;	ld	a,(partCount)
0369   6DAD             ;	ld	c,a
0370   6DAD             ;.s3	call	ShowPartInfo
0371   6DAD             ;	ld	de,MBRFIELDSIZE
0372   6DAD             ;	add	ix,de
0373   6DAD             ;	dec	c
0374   6DAD             ;	jr	nz,.s3
0375   6DAD 3A A1 71    .s0	ld	a,(partCount)
0376   6DB0 6F          	ld	l,a
0377   6DB1 01 F4 75    	ld	bc,msgPartCount.cnt
0378   6DB4 CD AC 80    	call	PRNUM
0379   6DB7              IFDEF RELEASE
0380   6DB7~             	ld	bc,(hddTotalSector+2)
0381   6DB7~             	ld	de,(hddTotalSector)
0382   6DB7~             	ld	hl,msgPartCount.total
0383   6DB7~             	xor	a
0384   6DB7~             	CALL	PRNUMSEC
0385   6DB7              ELSE
0386   6DB7             ;Вывод всего секторов
0387   6DB7 ED 5B A9 71 	ld	de,(hddTotalSector+2)
0388   6DBB 21 11 76    	ld	hl,msgPartCount.total
0389   6DBE 7A          	ld	a,d
0390   6DBF CD 88 81    	call	ByteToHEX
0391   6DC2 23          	inc	hl
0392   6DC3 7B          	ld	a,e
0393   6DC4 CD 88 81    	call	ByteToHEX
0394   6DC7 23          	inc	hl
0395   6DC8 ED 5B A7 71 	ld	de,(hddTotalSector)
0396   6DCC 7A          	ld	a,d
0397   6DCD CD 88 81    	call	ByteToHEX
0398   6DD0 23          	inc	hl
0399   6DD1 7B          	ld	a,e
0400   6DD2 CD 88 81    	call	ByteToHEX
0401   6DD5              ENDIF
0402   6DD5             ;Вывод неиспользуемых секторов	
0403   6DD5 CD 29 89    	call	CreateMBRUS
0404   6DD8             ;	call	CalcUnused
0405   6DD8 C5          	push	bc
0406   6DD9              IFDEF RELEASE
0407   6DD9~            ; 	ld	bc,(hddTotalSector+2)
0408   6DD9~             ;	ld	de,(hddTotalSector)
0409   6DD9~             	ld	hl,msgPartCount.unused
0410   6DD9~             	xor	a
0411   6DD9~             	CALL	PRNUMSEC
0412   6DD9              ELSE
0413   6DD9             
0414   6DD9 21 2C 76    	ld	hl,msgPartCount.unused+4
0415   6DDC 7A          	ld	a,d
0416   6DDD CD 88 81    	call	ByteToHEX
0417   6DE0 23          	inc	hl
0418   6DE1 7B          	ld	a,e
0419   6DE2 CD 88 81    	call	ByteToHEX
0420   6DE5 D1          	pop	de
0421   6DE6 21 28 76    	ld	hl,msgPartCount.unused
0422   6DE9 7A          	ld	a,d
0423   6DEA CD 88 81    	call	ByteToHEX
0424   6DED 23          	inc	hl
0425   6DEE 7B          	ld	a,e
0426   6DEF CD 88 81    	call	ByteToHEX
0427   6DF2              ENDIF
0428   6DF2 21 E9 75    	ld	hl,msgPartCount
0429   6DF5             	PCHARS
0429   6DF5 CD F7 7A    >	call	Print
0430   6DF8 3A AD 71    	ld	a,(cntOperations)
0431   6DFB A7          	and	a
0432   6DFC 28 0D       	jr	z,hddCMD
0433   6DFE 6F          	ld	l,a
0434   6DFF 01 38 79    	ld	bc,msgPending.cnt
0435   6E02 CD AC 80    	call	PRNUM
0436   6E05 21 21 79    	ld	hl,msgPending
0437   6E08             	PCHARS
0437   6E08 CD F7 7A    >	call	Print
0438   6E0B 21 83 76    hddCMD	ld	hl,msgMBRCommands
0439   6E0E             	PCHARS
0439   6E0E CD F7 7A    >	call	Print
0440   6E11 21 17 6E    	ld	hl,tabMBRCmd
0441   6E14 C3 A9 7F    	JP	Prompt
0442   6E17             ;	jp	wr1
0443   6E17             tabMBRCmd
0444   6E17 71          	db	"q"
0445   6E18 4E 6E       	dw	partQuit
0446   6E1A 75          	db	"u"
0447   6E1B 94 6E       	dw	DSector
0448   6E1D 69          	db	"i"
0449   6E1E 3C 8D       	dw	ChangeTypeFS
0450   6E20 61          	db	"a"
0451   6E21 BF 8E       	dw	SetBootable
0452   6E23 62          	db	"b"
0453   6E24 FA 8F       	dw	BackupPartitions
0454   6E26 64          	db	"d"
0455   6E27 8F 96       	dw	DeletePart
0456   6E29 73          	db	"s"
0457   6E2A 7F 6E       	dw	notImplemented
0458   6E2C 72          	db	"r"
0459   6E2D 54 91       	dw	RestorePartition
0460   6E2F 63          	db	"c"
0461   6E30 F6 96       	dw	CreatePartition
0462   6E32 79          	db	"y"
0463   6E33 7F 6E       	dw	notImplemented
0464   6E35 66          	db	"f"
0465   6E36 FE 9B       	dw	FormatPartition
0466   6E38 00          	db	0
0467   6E39             
0468   6E39             ;--------------------------------------
0469   6E39             ;	Запрос на отмену совершенных операций
0470   6E39             ;	на выходе CY==1, если есть незавершенные операции и на запрос "отменить операции" дан отказ
0471   6E39             ;	cy==0, если нет незавершенных операций или дан утвердительный ответ на их отмену 
0472   6E39             ;--------------------------------------
0473   6E39             dlgPending
0474   6E39 3A AD 71    	ld	a,(cntOperations)
0475   6E3C A7          	and	a		;нет отложенных операций
0476   6E3D C8          	ret	z
0477   6E3E 21 41 79    	ld	hl,msgPendingOps
0478   6E41             	PCHARS
0478   6E41 CD F7 7A    >	call	Print
0479   6E44             dlgYesNo
0480   6E44 21 78 6E    	ld	hl,tabYesNo
0481   6E47 C3 A9 7F    	jp	Prompt
0482   6E4A             dlgPendYes
0483   6E4A A7          	and	a
0484   6E4B C9          	ret
0485   6E4C             dlgPendNo
0486   6E4C 37          	scf
0487   6E4D C9          	ret
0488   6E4E             
0489   6E4E             ;--------------------------------------
0490   6E4E             ;	Отработка выхода из менеджера партиций
0491   6E4E             ;--------------------------------------
0492   6E4E             partQuit
0493   6E4E CD 39 6E    	call	dlgPending
0494   6E51 DA 71 6D    	jp	c,ShowPartition.continue
0495   6E54 C3 04 6D    	jp	jpMain
0496   6E57             
0497   6E57             dlgAppQuit
0498   6E57              ;IF _TARGET = _SPRINTER
0499   6E57             ;	jr	.exit
0500   6E57              ;ELSE
0501   6E57             ;	jp	jpMain
0502   6E57              ;ENDIF
0503   6E57               IF _IM = 1
0504   6E57 CD 52 71      	call	IM1SET
0505   6E5A               ENDIF
0506   6E5A              IF _TARGET = _SPRINTER
0507   6E5A~            .exit	ld	a,(idMem)
0508   6E5A~            	ld	c,0x3e
0509   6E5A~            	rst	16
0510   6E5A~            	ld	bc,0x0041
0511   6E5A~            	rst	16
0512   6E5A              ELSE
0513   6E5A             .exit
0514   6E5A              IF _TARGET = _PROFI | _TARGET=_ATM
0515   6E5A~             	call	ReturnConsole
0516   6E5A              ENDIF
0517   6E5A              ;Проверка наличия в 7й папке резидента RC
0518   6E5A 3E 17               LD      A,#17     ;тестирование
0519   6E5C 01 FD 7F            LD      BC,#7FFD  ;7-го банка на
0520   6E5F ED 79               OUT     (C),A     ;наличие в нем
0521   6E61 2A 00 C0            LD      HL,(#C000);COMMANDER'а.
0522   6E64 11 31 FF            LD      DE,#FF31
0523   6E67 AF                  XOR     A
0524   6E68 ED 52               SBC     HL,DE     ;если найден,
0525   6E6A CA 00 C0            JP      Z,#C000   ;то запуск
0526   6E6D 3E 10               LD      A,#10
0527   6E6F ED 79               OUT     (C),A
0528   6E71 A7                  AND     A
0529   6E72 ED 62               SBC     HL,HL
0530   6E74 E5                  PUSH    HL        ;иначе рестарт
0531   6E75 C3 21 3D            JP      15649     ;TR-DOS 
0532   6E78              ENDIF
0533   6E78             
0534   6E78             tabYesNo
0535   6E78 79          	db	"y"
0536   6E79 4A 6E       	dw	dlgPendYes
0537   6E7B 6E          	db	"n"
0538   6E7C 4C 6E       	dw	dlgPendNo
0539   6E7E 00          	db	0
0540   6E7F             
0541   6E7F              IFUSED notImplemented
0542   6E7F             notImplemented
0543   6E7F 21 DB 79    	ld	hl,msgNotImplemented
0544   6E82             	PCHARS
0544   6E82 CD F7 7A    >	call	Print
0545   6E85 21 7B 74    	ld	hl,msgAnyKey
0546   6E88             	PCHARS
0546   6E88 CD F7 7A    >	call	Print
0547   6E8B 21 00 00    	ld	hl,0
0548   6E8E CD A9 7F    	call	Prompt
0549   6E91 C3 71 6D    	jp	ShowPartition.continue
0550   6E94              ENDIF
0551   6E94             
0552   6E94             ;--------------------------------------
0553   6E94             ;	Вызов Dump Sector
0554   6E94             ;--------------------------------------
0555   6E94             
0556   6E94             DSector
0557   6E94 21 F5 77    	ld	hl,msgDumpSector
0558   6E97             	PCHARS
0558   6E97 CD F7 7A    >	call	Print
0559   6E9A 21 96 77    	ld	hl,msgPromptNumber0
0560   6E9D             	PCHARS
0560   6E9D CD F7 7A    >	call	Print
0561   6EA0 21 C9 71    	ld	hl,bufStr
0562   6EA3 3E 02       	ld	a,2
0563   6EA5 CD F9 7F    	call	EditString
0564   6EA8 21 C9 71    	ld	hl,bufStr
0565   6EAB CD 06 81    	call	MRNUM
0566   6EAE 38 16       	jr	c,.inval
0567   6EB0 3A A1 71    	ld	a,(partCount)
0568   6EB3 47          	ld	b,a	
0569   6EB4 79          	ld	a,c
0570   6EB5 A7          	and	a
0571   6EB6 20 09       	jr	nz,.ds1
0572   6EB8             ;показываем нулевой сектор
0573   6EB8 11 00 00    	ld	de,0
0574   6EBB 01 00 00    	ld	bc,0
0575   6EBE C3 44 83    	jp	dumpSector
0576   6EC1             
0577   6EC1 B8          .ds1	cp	b
0578   6EC2 28 0B       	jr	z,.ds2
0579   6EC4 38 09       	jr	c,.ds2
0580   6EC6 21 13 78    .inval	ld	hl,msgInvalidParameter
0581   6EC9             	PCHARS
0581   6EC9 CD F7 7A    >	call	Print
0582   6ECC C3 0B 6E    	jp	hddCMD
0583   6ECF             
0584   6ECF             .ds2
0585   6ECF C5          	push	bc
0586   6ED0 21 F3 77    	ld	hl,msgDumpSectorCR
0587   6ED3             	PCHARS
0587   6ED3 CD F7 7A    >	call	Print
0588   6ED6 DD 21 00 9E 	ld	ix,MBRTable	;SectorBuffer+0x01be+8
0589   6EDA             .dmaster
0590   6EDA C1          	pop	bc
0591   6EDB 11 20 00    	ld	de,MBRFIELDSIZE
0592   6EDE 18 02       	jr	.ds4
0593   6EE0 DD 19       .ds3	add	ix,de
0594   6EE2 0D          .ds4	dec	c
0595   6EE3 20 FB       	jr	nz,.ds3
0596   6EE5             ;Номер первого сектора раздела
0597   6EE5 DD 6E 00    	ld	l,(ix)
0598   6EE8 DD 66 01    	ld	h,(ix+1)
0599   6EEB             	
0600   6EEB DD 5E 0D    	ld	e,(ix+13)
0601   6EEE DD 56 0E    	ld	d,(ix+14)
0602   6EF1 A7          	and	a
0603   6EF2 19          	add	hl,de
0604   6EF3 EB          	ex	de,hl
0605   6EF4 DD 6E 02    	ld	l,(ix+2)
0606   6EF7 DD 66 03    	ld	h,(ix+3)
0607   6EFA DD 4E 0F    	ld	c,(ix+15)
0608   6EFD DD 46 10    	ld	b,(ix+16)
0609   6F00 ED 4A       	adc	hl,bc
0610   6F02 E5          	push	hl
0611   6F03 C1          	pop	bc
0612   6F04             	;ld	e,(hl)
0613   6F04             ;	inc	l
0614   6F04             ;	ld	d,(hl)
0615   6F04             ;	inc	l
0616   6F04             ;	ld	c,(hl)
0617   6F04             ;	inc	l
0618   6F04             ;	ld	b,(hl)
0619   6F04 C3 44 83    	jp	dumpSector
0620   6F07             		
0621   6F07             
0622   6F07             ;--------------------------------------
0623   6F07             ;	Вывод информации о партиции	
0624   6F07             ;--------------------------------------
0625   6F07             ;в IX - адрес описателя
0626   6F07             ;B - логический номер партиции
0627   6F07             ShowPartInfo
0628   6F07 C5          	push	bc
0629   6F08 68          	ld	l,b
0630   6F09 2C          	inc	l
0631   6F0A 01 AC 75    	ld	bc,msgMBRRow.num
0632   6F0D CD AC 80    	call	PRNUM
0633   6F10 DD 7E 00    	ld	a,(ix)
0634   6F13 DD B6 01    	or	(ix+1)
0635   6F16 DD B6 02    	or	(ix+2)
0636   6F19 DD B6 03    	or	(ix+3)
0637   6F1C 06 04       	ld	b,C_PRI
0638   6F1E 3E 50       	ld	a,"P"	;Primary
0639   6F20 28 15       	jr	z,.s1
0640   6F22 DD 7E 09    	ld	a,(ix+9)
0641   6F25 FE 05       	cp	5
0642   6F27 28 0A       	jr	z,.ext1
0643   6F29 FE 0F       	cp	15
0644   6F2B 28 06       	jr	z,.ext1
0645   6F2D 06 03       	ld	b,C_SEC
0646   6F2F 3E 53       	ld	a,"S"	;Secondary
0647   6F31 18 04       	jr	.s1
0648   6F33 3E 45       .ext1	ld	a,"E"	;Extended
0649   6F35 06 01       	ld	b,C_EXT
0650   6F37 32 B0 75    .s1	ld	(msgMBRRow.num+4),a
0651   6F3A 78          	ld	a,b
0652   6F3B 32 AB 75    	ld	(msgMBRRow+1),a
0653   6F3E DD 7E 05    	ld	a,(ix+5)
0654   6F41 FE 80       	cp	#80
0655   6F43 3E 2A       	ld	a,"*"	;Bootable
0656   6F45 28 02       	jr	z,.s2
0657   6F47 3E 20       	ld	a,32
0658   6F49 32 B1 75    .s2	ld	(msgMBRRow.num+5),a
0659   6F4C DD 7E 09    	ld	a,(ix+9)	;Type
0660   6F4F A7          	and	a
0661   6F50 CA DC 6F    	jp	z,.err
0662   6F53 F5          	push	af
0663   6F54 21 BF 75    	ld	hl,msgMBRRow.id
0664   6F57 CD 88 81    	call	ByteToHEX
0665   6F5A             ;	xor	a
0666   6F5A             ;	ld	(HEXDEC),a
0667   6F5A F1          	pop	af
0668   6F5B 47          	ld	b,a
0669   6F5C 11 C2 75    	ld	de,msgMBRRow.type
0670   6F5F CD FA 81    	call	GetFSName
0671   6F62             
0672   6F62             ;рассчет смещения сектора относительно текущего
0673   6F62 DD 6E 00    	ld	l,(ix)		;номер сектора текущей записи
0674   6F65 DD 66 01    	ld	h,(ix+1)
0675   6F68             	
0676   6F68 DD 5E 0D    	ld	e,(ix+13)
0677   6F6B DD 56 0E    	ld	d,(ix+14)
0678   6F6E A7          	and	a
0679   6F6F 19          	add	hl,de
0680   6F70 01 00 00    	ld	bc,0
0681   6F73 30 03       	jr	nc,.e1
0682   6F75 01 01 00    	ld	bc,1
0683   6F78 EB          .e1	ex	de,hl
0684   6F79 DD 6E 02    	ld	l,(ix+2)
0685   6F7C DD 66 03    	ld	h,(ix+3)
0686   6F7F 09          	add	hl,bc		;увеличиваем на 1, если был перенос из младшего слова
0687   6F80 DD 4E 0F    	ld	c,(ix+15)
0688   6F83 DD 46 10    	ld	b,(ix+16)
0689   6F86 09          	add	hl,bc
0690   6F87 E5          	push	hl
0691   6F88             	
0692   6F88 7B          	ld	a,e
0693   6F89             ;	ld	a,(ix+13)
0694   6F89 21 D9 75    	ld	hl,msgMBRRow.start+6
0695   6F8C CD 88 81    	call	ByteToHEX
0696   6F8F             ;	ld	a,(ix+14)
0697   6F8F 7A          	ld	a,d
0698   6F90 2B          	dec	hl
0699   6F91 2B          	dec	hl
0700   6F92 2B          	dec	hl
0701   6F93 CD 88 81    	call	ByteToHEX
0702   6F96 D1          	pop	de
0703   6F97             ;	ld	a,(ix+15)
0704   6F97 7B          	ld	a,e
0705   6F98 2B          	dec	hl
0706   6F99 2B          	dec	hl
0707   6F9A 2B          	dec	hl
0708   6F9B CD 88 81    	call	ByteToHEX
0709   6F9E             ;	ld	a,(ix+16)
0710   6F9E 7A          	ld	a,d
0711   6F9F 2B          	dec	hl
0712   6FA0 2B          	dec	hl
0713   6FA1 2B          	dec	hl
0714   6FA2 CD 88 81    	call	ByteToHEX
0715   6FA5             ;	ld	a,"#"	;вывод в 16-ричной системе
0716   6FA5             ;	ld	(HEXDEC_PRNUM),a
0717   6FA5             
0718   6FA5              IF _TARGET=_ATM | _TARGET=_SPRINTER
0719   6FA5~            	ld	hl,msgMBRRow.size
0720   6FA5~            	ld	a,(ix+20)
0721   6FA5~            	call	ByteToHEX
0722   6FA5~            	inc	hl
0723   6FA5~            	ld	a,(ix+19)
0724   6FA5~            	call	ByteToHEX
0725   6FA5~            	inc	hl
0726   6FA5~            	ld	a,(ix+18)
0727   6FA5~            	call	ByteToHEX
0728   6FA5~            	inc	hl
0729   6FA5~            	ld	a,(ix+17)
0730   6FA5~            	call	ByteToHEX
0731   6FA5              ELSE
0732   6FA5               IFDEF RELEASE
0733   6FA5~            	ld	e,(ix+17)	;размер
0734   6FA5~            	ld	d,(ix+18)
0735   6FA5~            	ld	c,(ix+19)
0736   6FA5~            	ld	b,(ix+20)
0737   6FA5~            	ld	hl,msgMBRRow.size
0738   6FA5~            	ld	a,"M"
0739   6FA5~            	call	PRNUMSEC 
0740   6FA5               ELSE
0741   6FA5 21 DC 75    	ld	hl,msgMBRRow.size
0742   6FA8 DD 7E 14    	ld	a,(ix+20)
0743   6FAB CD 88 81    	call	ByteToHEX
0744   6FAE 23          	inc	hl
0745   6FAF DD 7E 13    	ld	a,(ix+19)
0746   6FB2 CD 88 81    	call	ByteToHEX
0747   6FB5 23          	inc	hl
0748   6FB6 DD 7E 12    	ld	a,(ix+18)
0749   6FB9 CD 88 81    	call	ByteToHEX
0750   6FBC 23          	inc	hl
0751   6FBD DD 7E 11    	ld	a,(ix+17)
0752   6FC0 CD 88 81    	call	ByteToHEX
0753   6FC3               ENDIF
0754   6FC3              ENDIF
0755   6FC3             ;	ld	l,(ix+17)	;размер
0756   6FC3             ;	ld	h,(ix+18)
0757   6FC3             ;	ld	bc,msgMBRRow.size+4
0758   6FC3             ;	call	PRNUM0
0759   6FC3             ;	ld	l,(ix+19)
0760   6FC3             ;	ld	h,(ix+20)
0761   6FC3             ;	ld	bc,msgMBRRow.size
0762   6FC3             ;	call	PRNUM0
0763   6FC3             ;	xor	a		;Возвращаемся к 10чной системе
0764   6FC3             ;	ld	(HEXDEC_PRNUM),a
0765   6FC3             
0766   6FC3              IF _TARGET=_ATM | _TARGET=_SPRINTER
0767   6FC3~            	ld	e,(ix+17)	;размер
0768   6FC3~            	ld	d,(ix+18)
0769   6FC3~            	ld	c,(ix+19)
0770   6FC3~            	ld	b,(ix+20)
0771   6FC3~            	ld	hl,msgMBRRow.sizeb
0772   6FC3~            	ld	a,"M"
0773   6FC3~            	call	PRNUMSEC
0774   6FC3              ENDIF
0775   6FC3 DD E5       	push	ix
0776   6FC5 E1          	pop	hl
0777   6FC6 11 15 00    	ld	de,21
0778   6FC9 19          	add	hl,de
0779   6FCA 01 0B 00    	ld	bc,11
0780   6FCD 11 B3 75    	ld	de,msgMBRRow.label
0781   6FD0 ED B0       	ldir
0782   6FD2             	
0783   6FD2             
0784   6FD2 21 AA 75    	ld	hl,msgMBRRow
0785   6FD5             	PCHARS
0785   6FD5 CD F7 7A    >	call	Print
0786   6FD8 C1          	pop	bc
0787   6FD9 04          	inc	b	;увеличиваем логический номер раздела
0788   6FDA A7          	and	a
0789   6FDB C9          	ret
0790   6FDC             
0791   6FDC C1          .err	pop	bc
0792   6FDD 37          	scf
0793   6FDE C9          	ret
0794   6FDF             
0795   6FDF             ;--------------------------------------------
0796   6FDF             ;	Вывод информации об устройстве
0797   6FDF             ;	на основе сектора состояния
0798   6FDF             ;--------------------------------------------
0799   6FDF             ShowStat
0800   6FDF             ;Разбор Устройства
0801   6FDF             ;A = 1 - SLAVE
0802   6FDF             ;иные значения A - MASTER
0803   6FDF 32 F5 6F    	ld	(.bMaster+1),a
0804   6FE2 21 30 73    	ld	hl,msgMaster
0805   6FE5 3D          	dec	a
0806   6FE6 20 03       	jr	nz,.n1
0807   6FE8 21 38 73    	ld	hl,msgSlave
0808   6FEB             .n1	PCHARS
0808   6FEB CD F7 7A    >	call	Print
0809   6FEE 21 3F 73    	ld	hl,msgDevice
0810   6FF1             	PCHARS
0810   6FF1 CD F7 7A    >	call	Print
0811   6FF4             .bMaster
0812   6FF4 3E 00       	ld	a,0
0813   6FF6 2A AB 71    	ld	hl,(statDrv)
0814   6FF9 3D          	dec	a
0815   6FFA 20 01       	jr	nz,.n2
0816   6FFC 65          	ld	h,l
0817   6FFD 24          .n2	inc	h
0818   6FFE 28 0A       	jr	z,.drvNotFound
0819   7000 25          	dec	h
0820   7001 28 0F       	jr	z,.drvIsHDD
0821   7003 21 47 73    	ld	hl,msgNotHDD
0822   7006             	PCHARS
0822   7006 CD F7 7A    >	call	Print
0823   7009 C9          	ret
0824   700A             .drvNotFound
0825   700A 21 1F 73    	ld	hl,msgNotFound
0826   700D             	PCHARS
0826   700D CD F7 7A    >	call	Print
0827   7010 18 64       	jr	.n4
0828   7012             .drvIsHDD
0829   7012 21 2C 73    	ld	hl,msgFound
0830   7015             	PCHARS
0830   7015 CD F7 7A    >	call	Print
0831   7018 21 00 C0    	ld	hl,Buffer	;SerialNumber
0832   701B 3A F5 6F    	ld	a,(.bMaster+1)
0833   701E 3D          	dec	a
0834   701F 20 03       	jr	nz,.n3
0835   7021 21 00 C2    	ld	hl,Buffer+512	;SLAVE Serial Number
0836   7024 E5          .n3	push	hl
0837   7025 3E 0A       	ld	a,10
0838   7027 06 14       	ld	b,20
0839   7029 11 AA 73    	ld	de,msgHDDInfo.sn
0840   702C CD 0D 71    	call	CopyVars
0841   702F E1          	pop	hl
0842   7030 E5          	push	hl
0843   7031 11 CE 73    	ld	de,msgHDDInfo.fw
0844   7034 06 08       	ld	b,8
0845   7036 3E 17       	ld	a,23
0846   7038 CD 0D 71    	call	CopyVars
0847   703B E1          	pop	hl
0848   703C E5          	push	hl
0849   703D 11 69 73    	ld	de,msgHDDInfo.model
0850   7040 06 28       	ld	b,40
0851   7042 3E 1B       	ld	a,27
0852   7044 CD 0D 71    	call	CopyVars
0853   7047 E1          	pop	hl
0854   7048 E5          	push	hl
0855   7049 3E 01       	ld	a,1
0856   704B CD 23 71    	call	GetWord
0857   704E EB          	ex	de,hl
0858   704F 01 EB 73    	ld	bc,msgHDDInfo.cyl
0859   7052 CD B3 80    	call	PRNUM0
0860   7055 E1          	pop	hl
0861   7056 E5          	push	hl
0862   7057 3E 03       	ld	a,3
0863   7059 CD 23 71    	call	GetWord
0864   705C EB          	ex	de,hl
0865   705D 01 FE 73    	ld	bc,msgHDDInfo.head
0866   7060 CD AC 80    	call	PRNUM
0867   7063 E1          	pop	hl
0868   7064 3E 06       	ld	a,6
0869   7066 CD 23 71    	call	GetWord
0870   7069 EB          	ex	de,hl
0871   706A 01 11 74    	ld	bc,msgHDDInfo.sec
0872   706D CD AC 80    	call	PRNUM	
0873   7070 21 5D 73    	ld	hl,msgHDDInfo
0874   7073             	PCHARS
0874   7073 CD F7 7A    >	call	Print
0875   7076 21 9F 72    .n4	ld	hl,msgCRLF
0876   7079             	PCHARS
0876   7079 CD F7 7A    >	call	Print
0877   707C C9          	ret
0878   707D             
0879   707D             ;---------------------------------------------------------
0880   707D             ;	Извлекает информацию о количестве дорожек,
0881   707D             ;	голов и секторов из статусного сектора винта
0882   707D             ;---------------------------------------------------------
0883   707D             ;
0884   707D             GetHDDPar
0885   707D 21 00 C0    	ld	hl,Buffer	;SerialNumber
0886   7080 3A A2 71    	ld	a,(devSelected)
0887   7083 3D          	dec	a
0888   7084 20 03       	jr	nz,.n3
0889   7086 21 00 C2    	ld	hl,Buffer+512	;SLAVE Serial Number
0890   7089             .n3	
0891   7089 E5          	push	hl
0892   708A 3E 01       	ld	a,1
0893   708C CD 23 71    	call	GetWord
0894   708F ED 53 A3 71 	ld	(hddCylinders),de
0895   7093 E1          	pop	hl
0896   7094 E5          	push	hl
0897   7095 3E 03       	ld	a,3
0898   7097 CD 23 71    	call	GetWord
0899   709A 7B          	ld	a,e
0900   709B 32 A5 71    	ld	(hddHeads),a
0901   709E E1          	pop	hl
0902   709F E5          	push	hl
0903   70A0 3E 06       	ld	a,6
0904   70A2 CD 23 71    	call	GetWord
0905   70A5 7B          	ld	a,e
0906   70A6 32 A6 71    	ld	(hddSectors),a
0907   70A9 E1          	pop	hl
0908   70AA E5          	push	hl
0909   70AB             ;кастрируем серийный номер - отображаем только последние 8 значащих символов
0910   70AB 3E 0A       	ld	a,10
0911   70AD 06 14       	ld	b,20
0912   70AF 11 C9 71    	ld	de,bufStr
0913   70B2 CD 0D 71    	call	CopyVars
0914   70B5             ;пропускаем первые пробелы
0915   70B5 01 00 14    	ld	bc,20*256
0916   70B8 21 C9 71    	ld	hl,bufStr
0917   70BB 3E 20       	ld	a,32
0918   70BD BE          .n4	cp	(hl)
0919   70BE 20 12       	jr	nz,.skip1
0920   70C0 23          	inc	hl
0921   70C1 10 FA       	djnz	.n4
0922   70C3             ;а серийник-то пустой
0923   70C3 21 09 75    	ld	hl,msgHDDShortInfo.sn
0924   70C6 11 0A 75    	ld	de,msgHDDShortInfo.sn+1
0925   70C9 01 0B 00    	ld	bc,MAXSHORTSNSHOW-1
0926   70CC 77          	ld	(hl),a
0927   70CD ED B0       	ldir
0928   70CF             ;доберемся до последних символов серийника
0929   70CF BE          .skip2	cp	(hl)
0930   70D0 28 04       	jr	z,.end1
0931   70D2 23          .skip1	inc	hl
0932   70D3 0C          	inc	c
0933   70D4 10 F9       	djnz	.skip2
0934   70D6             .end1
0935   70D6 2B          	dec	hl
0936   70D7 11 14 75    	ld	de,msgHDDShortInfo.sn+MAXSHORTSNSHOW-1
0937   70DA 79          	ld	a,c
0938   70DB FE 0C       	cp	MAXSHORTSNSHOW
0939   70DD 30 11       	jr	nc,.copy
0940   70DF 3E 0C       	ld	a,MAXSHORTSNSHOW
0941   70E1 91          	sub	c
0942   70E2 EB          	ex	de,hl
0943   70E3 36 20       .cp1	ld	(hl),32
0944   70E5 3D          	dec	a
0945   70E6 2B          	dec	hl
0946   70E7 20 FA       	jr	nz,.cp1
0947   70E9 EB          	ex	de,hl
0948   70EA 06 00       	ld	b,0
0949   70EC ED B8       	lddr
0950   70EE 18 05       	jr	.next
0951   70F0             
0952   70F0 01 0C 00    .copy	ld	bc,MAXSHORTSNSHOW
0953   70F3             ;	ld	b,0
0954   70F3 ED B8       	lddr
0955   70F5 E1          .next	pop	hl
0956   70F6 E5          	push	hl
0957   70F7 3E 1B       	ld	a,27
0958   70F9 06 18       	ld	b,MAXSHORTMODELSHOW
0959   70FB 11 E4 74    	ld	de,msgHDDShortInfo.model
0960   70FE CD 0D 71    	call	CopyVars
0961   7101 E1          	pop	hl
0962   7102             	;Total number of user addressable sectors (LBA mode only)
0963   7102 11 A7 71    	ld	de,hddTotalSector
0964   7105 2E 78       	ld	l,60*2
0965   7107 01 04 00    	ld	bc,4
0966   710A ED B0       	ldir
0967   710C             
0968   710C C9          	ret	
0969   710D             
0970   710D             ;---------------------------------------------------------
0971   710D             ;	Копирует и переворачивает данные из
0972   710D             ;	сектора статуса дисковода в буфер
0973   710D             ;---------------------------------------------------------
0974   710D             ;HL - откуда
0975   710D             ;DE - куда
0976   710D             ;B - сколько
0977   710D             ;A - смещение
0978   710D             CopyVars
0979   710D 87          	add	a,a
0980   710E 85          	add	a,l
0981   710F 6F          	ld	l,a
0982   7110 30 01       	jr	nc,.cv1
0983   7112 24          	inc	h
0984   7113 78          .cv1	ld	a,b
0985   7114 1F          	rra
0986   7115 46          .cv	ld	b,(hl)
0987   7116 2C          	inc	l
0988   7117 4E          	ld	c,(hl)
0989   7118 23          	inc	hl
0990   7119 EB          	ex	de,hl
0991   711A 71          	ld	(hl),c
0992   711B 23          	inc	hl
0993   711C 70          	ld	(hl),b
0994   711D 23          	inc	hl
0995   711E EB          	ex	de,hl
0996   711F 3D          	dec	a
0997   7120 20 F3       	jr	nz,.cv
0998   7122 C9          	ret
0999   7123             
1000   7123             ;---------------------------------------------------------
1001   7123             ;	Вытягивает из сектора статуса слово
1002   7123             ;---------------------------------------------------------
1003   7123             ;HL - откуда
1004   7123             ;A - смещение
1005   7123             ;Output:
1006   7123             ;DE - word
1007   7123             GetWord
1008   7123 87          	add	a,a
1009   7124 85          	add	a,l
1010   7125 6F          	ld	l,a
1011   7126 30 01       	jr	nc,.g1
1012   7128 24          	inc	h
1013   7129 5E          .g1	ld	e,(hl)
1014   712A 2C          	inc	l
1015   712B 56          	ld	d,(hl)
1016   712C C9          	ret
1017   712D             
1018   712D             ; IF _TARGET = _ZX128 | _TARGET = _PROFI | _TARGET = _ATM
1019   712D              IF _IM = 1
1020   712D             ;---------------------------------------------------------
1021   712D             ;	Установка прерываний 2го рода, формирование
1022   712D             ;	таблицы вектора прерываний
1023   712D             ;	http://www.zxpress.ru/article.php?id=8898
1024   712D             ;---------------------------------------------------------
1025   712D             IM2Init
1026   712D F3          	DI
1027   712E 21 00 BE    	LD	HL,IMVector ;ТABLE_ADR должно быть
1028   7131 7C          	LD	A,H          ;кратно 256!
1029   7132 ED 47       	LD	I,A
1030   7134 45          	LD	B,L
1031   7135 3C          	INC	A
1032   7136 77          L1	LD	(HL),A
1033   7137 23          	INC	HL
1034   7138 10 FC       	DJNZ	L1
1035   713A 77          	LD	(HL),A
1036   713B 6C          	LD	L,H
1037   713C 36 C3       	LD	(HL),#C3     ;JP
1038   713E 2C          	INC	L
1039   713F 11 5B 71    	LD	DE,IMER	;П/П обработки прерываний
1040   7142 73          	LD	(HL),E
1041   7143 2C          	INC	L
1042   7144 72          	LD	(HL),D
1043   7145 ED 5E       	IM	2
1044   7147 FB          	EI
1045   7148 C9          	ret
1046   7149             IM2SET
1047   7149 F3          	DI
1048   714A 3E BE       	ld	a,high IMVector
1049   714C ED 47       	ld	i,a
1050   714E ED 5E       	im	2
1051   7150 FB          	ei
1052   7151 C9          	ret
1053   7152             IM1SET
1054   7152 F3          	DI
1055   7153 3E 3F       	ld	a,0x3f
1056   7155 ED 47       	ld	I,a
1057   7157 ED 56       	IM	1
1058   7159 FB          	ei
1059   715A C9          	ret
1060   715B             
1061   715B F5          IMER    PUSH	AF
1062   715C C5                  PUSH	BC
1063   715D D5                  PUSH	DE
1064   715E E5                  PUSH	HL
1065   715F D9                  EXX 
1066   7160 08                  EX	AF,AF'
1067   7161 F5                  PUSH	AF
1068   7162 C5                  PUSH	BC
1069   7163 D5                  PUSH	DE
1070   7164 E5                  PUSH	HL
1071   7165 DD E5               PUSH	IX
1072   7167 FD E5               PUSH	IY
1073   7169             ;        ld	a,(CurrentPage)
1074   7169              ;       push	af
1075   7169               ;      xor	a
1076   7169                ;	call	OpenPG
1077   7169 3A BC 7D    	ld	a,(curShow)
1078   716C A7          	and	a
1079   716D 28 1D       	jr	z,.skip
1080   716F 3A BD 7D    	ld	a,(curIterate)
1081   7172 3C          	inc	a
1082   7173 E6 0F       	and	15
1083   7175 32 BD 7D    	ld	(curIterate),a
1084   7178 A7          	and	a
1085   7179 20 11       	jr	nz,.skip
1086   717B 3A BE 7D    	ld	a,(curState)
1087   717E EE 01       	xor	1
1088   7180 32 BE 7D    	ld	(curState),a
1089   7183 3E 20       	ld	a,32
1090   7185 28 02       	jr	z,.s1
1091   7187 3E 5F       	ld	a,0x5f
1092   7189 CD 5A 7B    .s1	call	PCH	;PrintCursor
1093   718C FD 21 3A 5C .skip	LD	IY, 23610
1094   7190 FF          	rst	0x38
1095   7191             ;	pop	af
1096   7191             ;	call	OpenPG
1097   7191 FD E1       	POP	IY
1098   7193 DD E1               POP	IX
1099   7195 E1                  POP	HL
1100   7196 D1                  POP	DE
1101   7197 C1                  POP	BC
1102   7198 F1                  POP	AF
1103   7199 D9                  EXX 
1104   719A 08                  EX	AF,AF'
1105   719B E1                  POP	HL
1106   719C D1                  POP	DE
1107   719D C1                  POP	BC
1108   719E F1                  POP	AF
1109   719F FB          	ei
1110   71A0 C9                  ret
1111   71A1              ENDIF
1112   71A1             
1113   71A1             ;---------------------------------------------------------
1114   71A1             
1115   71A1             ; Variables
1116   71A1             partCount
1117   71A1 00          	db	0 ;Количество обнаруженных партиций
1118   71A2             devSelected
1119   71A2 00          	db	0	;Выбранный пользователем драйв - 0 - Мастер, 1 - Слейв
1120   71A3             
1121   71A3             ;!!!==================================
1122   71A3             ;!!!Порядок следующих 4х полей не менять!!!
1123   71A3             ;!!!==================================
1124   71A3             hddCylinders
1125   71A3 00 00       	dw	0	;количество треков у драйва
1126   71A5             hddHeads
1127   71A5 00          	db	0	;количество голов
1128   71A6             hddSectors
1129   71A6 00          	db	0	;количество секторов
1130   71A7             hddTotalSector
1131   71A7 00 00 00 00 	dw	0,0	;Total number of user addressable sectors (LBA mode only)
1132   71AB             ;!!!==================================
1133   71AB             
1134   71AB 00 00       statDrv	dw	0	;Статус приводов после INIT
1135   71AD             cntOperations
1136   71AD 02          	db	2	;счетчик операций по изменению MBR
1137   71AE             cntMBRUS
1138   71AE 00          	db	0	;количество записей в MBRUS (Space Unused)
1139   71AF              IF _TARGET = _SPRINTER
1140   71AF~            idMem	db	0
1141   71AF~            arrPages
1142   71AF~            	dw	0
1143   71AF~            ARGV	dw	0
1144   71AF              ENDIF
1145   71AF             ; IF _TARGET = _PROFI
1146   71AF             ;msgSign	db	"hdrp"
1147   71AF             ; ELSE
1148   71AF 68 64 72 76 msgSign	db	"hdrv"	;сигнатура драйвера
1149   71B3             strPartSign
1150   71B3             	db	"partitions"	;сигнатура бэкапа партиций
1150   71B3 706172746974696F6E73
1151   71BD             ; ENDIF
1152   71BD             strDrvFileName
1153   71BD             	db	"build in    "
1153   71BD 6275696C6420696E20202020
1154   71C9 00          bufStr	ds	64,0	;буфер для обработки строк
1155   7209             ;---------------------------------------------------------
1156   7209             
1157   7209             ; Messages
1158   7209             
1159   7209             msgHello
1160   7209             	db	CR,LF,"--== FDISK v",VERSION,".",BUILD_COUNT_T,"[",BUILD_DATE_NS_T,"] for ", _TARGET_T, " ==--",CR,LF
1160   7209 0D0A2D2D3D3D20464449534B2076302E322E3335375B3131313031335D20666F
1160   7229 72205A582D537065637472756D3132384B203D3D2D2D0D0A
1161   7241             	db	"by Mikhaltchenkov Dmitry aka Hard/WCG",CR,LF
1161   7241 6279204D696B68616C746368656E6B6F7620446D6974727920616B6120486172
1161   7261 642F5743470D0A
1162   7268              IFDEF RELEASE
1163   7268~            	db	"RELEASE-version, ",COL,C_WARN,"use it at your own risk!!!",COL,C_NORM,CR,LF
1164   7268              ELSE
1165   7268             	db	COL,C_WARN,"This is DEBUG-version, use it at your own risk!!!",COL,C_NORM,CR,LF
1165   7268 1002546869732069732044454255472D76657273696F6E2C2075736520697420
1165   7288 617420796F7572206F776E207269736B21212110070D0A
1166   729F              ENDIF
1167   729F             
1168   729F 0D 0A 00    msgCRLF	db	CR,LF,EN
1169   72A2             msgDriver
1170   72A2             	db	"Loaded driver: ",COL,C_VAL,"["
1170   72A2 4C6F61646564206472697665723A2010055B
1171   72B4 20          .fn	ds	12,32
1172   72C0             	db	"]",COL,C_NORM,CR,LF,"Driver string: ",COL,C_VAL,"["
1172   72C0 5D10070D0A44726976657220737472696E673A2010055B
1173   72D7 20          .str	ds	27,32
1174   72F2             	db	"]",COL,C_NORM,CR,LF,EN
1174   72F2 5D10070D0A00
1175   72F8             msgSignFail
1176   72F8             	db	"Driver wrong!",CR,LF,EN
1176   72F8 4472697665722077726F6E67210D0A00
1177   7308             msgFindDrives
1178   7308             	db	"Finding devices...",CR,LF,CR,LF,EN
1178   7308 46696E64696E6720646576696365732E2E2E0D0A0D0A00
1179   731F             msgNotFound
1180   731F             	db	"not found.",CR,LF,EN
1180   731F 6E6F7420666F756E642E0D0A00
1181   732C             msgFound
1182   732C 3A 0D 0A 00 	db	":",CR,LF,EN
1183   7330             
1184   7330             msgMaster
1185   7330             	db	"MASTER ",EN
1185   7330 4D41535445522000
1186   7338             msgSlave
1187   7338             	db	"SLAVE ",EN
1187   7338 534C4156452000
1188   733F             msgDevice
1189   733F             	db	"device ",EN
1189   733F 6465766963652000
1190   7347             msgNotHDD
1191   7347             	db	"is not HDD, skip.",CR,LF,CR,LF,EN
1191   7347 6973206E6F74204844442C20736B69702E0D0A0D0A00
1192   735D             msgHDDInfo
1193   735D             	db	"  Model: ",COL,C_VAL,"["
1193   735D 20204D6F64656C3A2010055B
1194   7369 20          .model	ds	40,32
1195   7391             	db	"]",COL,C_NORM,CR,LF,"  Serial Number: ",COL,C_VAL,"["
1195   7391 5D10070D0A202053657269616C204E756D6265723A2010055B
1196   73AA 20          .sn	ds	20,32
1197   73BE             	db	"]",COL,C_NORM," FW rev.: ",COL,C_VAL,"["
1197   73BE 5D1007204657207265762E3A2010055B
1198   73CE 20          .fw	ds	8,32
1199   73D6 5D10070D0A  	db	"]",COL,C_NORM,CR,LF
1200   73DB             	db	"  Cylinders: ",COL,C_VAL,"["
1200   73DB 202043796C696E646572733A2010055B
1201   73EB             .cyl	db	"00000]",COL,C_NORM," Heads: ",COL,C_VAL,"["
1201   73EB 30303030305D10072048656164733A2010055B
1202   73FE             .head	db	"000]",COL,C_NORM," Sectors: ",COL,C_VAL,"["
1202   73FE 3030305D100720536563746F72733A2010055B
1203   7411             .sec	db	"000]",COL,C_NORM,CR,LF
1203   7411 3030305D10070D0A
1204   7419 00          	db	EN
1205   741A             msgSelectDrive
1206   741A             	db	CR,LF,"Select device: ",COL,C_CMD,"[1] ",COL,C_NORM,"- Master, ",COL,C_CMD,"[2] ",COL,C_NORM,"- Slave",CR,LF,EN
1206   741A 0D0A53656C656374206465766963653A2010065B315D2010072D204D61737465
1206   743A 722C2010065B325D2010072D20536C6176650D0A00
1207   744F             msgPrompt
1208   744F 3E 00       	db	">",EN
1209   7451             msgHDDNotFound
1210   7451             	db	CR,LF,"Not detected any HDD's...",CR,LF,EN
1210   7451 0D0A4E6F7420646574656374656420616E792048444427732E2E2E0D0A00
1211   746F             msgSelected
1212   746F             	db	CR,LF,"Selected ",EN
1212   746F 0D0A53656C65637465642000
1213   747B             msgAnyKey
1214   747B             	db	CR,LF,"Press any key to continue...",CR,LF,EN
1214   747B 0D0A507265737320616E79206B657920746F20636F6E74696E75652E2E2E0D0A
1214   749B 00
1215   749C             msgAnyKeyQuit
1216   749C             	db	CR,LF,"Press any key to continue ( ",COL,C_CMD,"[Q] ",COL,C_NORM,"- Quit )...",CR,LF,EN
1216   749C 0D0A507265737320616E79206B657920746F20636F6E74696E75652028201006
1216   74BC 5B515D2010072D205175697420292E2E2E0D0A00
1217   74D0             msgReadMBR
1218   74D0             	db	"Reading MBR...",CR,LF,EN
1218   74D0 52656164696E67204D42522E2E2E0D0A00
1219   74E1             msgHDDShortInfo
1220   74E1 10 05 5B    	db	COL,C_VAL,"["
1221   74E4 20          .model	ds	MAXSHORTMODELSHOW,32
1222   74FC             	db	"]",COL,C_NORM,", s/n: ",COL,C_VAL,"["
1222   74FC 5D10072C20732F6E3A2010055B
1223   7509 20          .sn	ds	MAXSHORTSNSHOW,32
1224   7515             	db	"]",COL,C_NORM,CR,LF,EN
1224   7515 5D10070D0A00
1225   751B             msgMBRNotFound
1226   751B             	db	"MBR Signature not found",CR,LF,EN
1226   751B 4D4252205369676E6174757265206E6F7420666F756E640D0A00
1227   7535             msgMBRHead
1228   7535             	db	"Num Fl Label       ID FS type          Start    "
1228   7535 4E756D20466C204C6162656C2020202020202049442046532074797065202020
1228   7555 20202020202020537461727420202020
1229   7565              ;------------------------------------
1230   7565              IFDEF RELEASE
1231   7565~              IF _TARGET=_SPRINTER | _TARGET=_ATM 
1232   7565~              ;Для 80симв в строке пеечатаем дополнительную колонку
1233   7565~            	db	"Size,sec"
1234   7565~              ELSE
1235   7565~              ;В Релиз-версии для 64симв в строке печатаем только одну колонку Размер в Мб
1236   7565~              	db	"Size    "
1237   7565~              ENDIF
1238   7565              ELSE
1239   7565              ;В Дебуг-версии для 64симв в строке печатаем только одну колонку Размер в сек
1240   7565              	db	"Size,sec"
1240   7565 53697A652C736563
1241   756D              ENDIF
1242   756D              ;------------------------------------
1243   756D             
1244   756D              IF _TARGET=_SPRINTER | _TARGET=_ATM
1245   756D~             	db	" Size"
1246   756D              ENDIF
1247   756D 0D 0A        	db	CR,LF
1248   756F             	db	"--- -- ----------- -- ---------------- -------- --------"
1248   756F 2D2D2D202D2D202D2D2D2D2D2D2D2D2D2D2D202D2D202D2D2D2D2D2D2D2D2D2D
1248   758F 2D2D2D2D2D2D202D2D2D2D2D2D2D2D202D2D2D2D2D2D2D2D
1249   75A7              IF _TARGET=_SPRINTER | _TARGET=_ATM
1250   75A7~             	db	" --------"
1251   75A7              ENDIF
1252   75A7 0D 0A 00    	db	CR,LF,EN
1253   75AA             msgMBRRow
1254   75AA 10 04       	db	COL,C_PRI
1255   75AC             .num	db	"000    "
1255   75AC 30303020202020
1256   75B3             .label	db	"<NO LABEL>  "
1256   75B3 3C4E4F204C4142454C3E2020
1257   75BF 30 30 20    .id	db	"00 "
1258   75C2             .type	db	"                 "
1258   75C2 2020202020202020202020202020202020
1259   75D3             .start	db	"00000000 "
1259   75D3 303030303030303020
1260   75DC             .size	db	"        "
1260   75DC 2020202020202020
1261   75E4              IF _TARGET=_SPRINTER | _TARGET=_ATM
1262   75E4~             	db	" "
1263   75E4~            .sizeb 	db	"00000 Mb"
1264   75E4              ENDIF
1265   75E4 10070D0A00  	db	COL,C_NORM,CR,LF,EN
1266   75E9             msgPartCount
1267   75E9             	db	CR,LF,"Found ",COL,C_VAL,"["
1267   75E9 0D0A466F756E642010055B
1268   75F4             .cnt	db	"000] ",COL,C_NORM,"partitions. Total: ",COL,C_VAL,"["
1268   75F4 3030305D201007706172746974696F6E732E20546F74616C3A2010055B
1269   7611             .total	db	"00000 Mb] ",COL,C_NORM,"Unused: ",COL,C_VAL,"["
1269   7611 3030303030204D625D201007556E757365643A2010055B
1270   7628             .unused	db	"00000 Mb]",COL,C_NORM,CR,LF
1270   7628 3030303030204D625D10070D0A
1271   7635             	db	"Legend Fl: ",COL,C_PRI,"P - Primary",COL,C_NORM,", ",COL,C_EXT,"E - Extended",COL,C_NORM,", ",COL,C_SEC,"S - Secondary,",COL,C_NORM," * - Active",CR,LF,EN
1271   7635 4C6567656E6420466C3A20100450202D205072696D61727910072C2010014520
1271   7655 2D20457874656E64656410072C20100353202D205365636F6E646172792C1007
1271   7675 202A202D204163746976650D0A00
1272   7683             msgMBRCommands
1273   7683             	db	CR,LF,"Select command: ",COL,C_CMD,"[C] ",COL,C_NORM,"- Create part. "
1273   7683 0D0A53656C65637420636F6D6D616E643A2010065B435D2010072D2043726561
1273   76A3 746520706172742E20
1274   76AC             	db	COL,C_CMD,"[D] ",COL,C_NORM,"- Delete part. "
1274   76AC 10065B445D2010072D2044656C65746520706172742E20
1275   76C3             	db	COL,C_CMD,"[I] ",COL,C_NORM,"- Modify ID "
1275   76C3 10065B495D2010072D204D6F6469667920494420
1276   76D7             	db	COL,C_CMD,"[A] ",COL,C_NORM,"- Set Active "
1276   76D7 10065B415D2010072D205365742041637469766520
1277   76EC             	db	COL,C_CMD,"[F] ",COL,C_NORM,"- Format "
1277   76EC 10065B465D2010072D20466F726D617420
1278   76FD             	db	COL,C_CMD,"[S] ",COL,C_NORM,"- Show S.M.A.R.T. "
1278   76FD 10065B535D2010072D2053686F7720532E4D2E412E522E542E20
1279   7717             	db	COL,C_CMD,"[U] ",COL,C_NORM,"- Dump sector "
1279   7717 10065B555D2010072D2044756D7020736563746F7220
1280   772D             	db	COL,C_CMD,"[B] ",COL,C_NORM,"- Backup part.table "
1280   772D 10065B425D2010072D204261636B757020706172742E7461626C6520
1281   7749             	db	COL,C_CMD,"[R] ",COL,C_NORM,"- Restore part.table "
1281   7749 10065B525D2010072D20526573746F726520706172742E7461626C6520
1282   7766             	db	COL,C_CMD,"[Y] ",COL,C_NORM,"- Apply all operations "
1282   7766 10065B595D2010072D204170706C7920616C6C206F7065726174696F6E7320
1283   7785             msgQuit
1284   7785             	db	COL,C_CMD,"[Q] ",COL,C_NORM,"- Quit",CR,LF,EN
1284   7785 10065B515D2010072D20517569740D0A00
1285   7796             msgPromptNumber0
1286   7796             	db	CR,LF,"Enter number of partition (0 - show first sector of drive): ",EN
1286   7796 0D0A456E746572206E756D626572206F6620706172746974696F6E202830202D
1286   77B6 2073686F7720666972737420736563746F72206F66206472697665293A2000
1287   77D5             msgPromptNumber
1288   77D5             	db	CR,LF,"Enter number of partition: ",EN
1288   77D5 0D0A456E746572206E756D626572206F6620706172746974696F6E3A2000
1289   77F3             msgDumpSectorCR
1290   77F3 0D 0A       	db	CR,LF
1291   77F5             msgDumpSector
1292   77F5             	db	"Dumping sector of partition",CR,LF,EN
1292   77F5 44756D70696E6720736563746F72206F6620706172746974696F6E0D0A00
1293   7813             msgInvalidParameter
1294   7813             	db	CR,LF,COL,C_WARN,"Invalid parameter!",COL,C_NORM,CR,LF,EN
1294   7813 0D0A1002496E76616C696420706172616D657465722110070D0A00
1295   782E             msgMBRTableIsNull
1296   782E             	db	CR,LF,"Partition table is empty, operation aborted!", CR,LF,EN
1296   782E 0D0A506172746974696F6E207461626C6520697320656D7074792C206F706572
1296   784E 6174696F6E2061626F72746564210D0A00
1297   785F             msgLarge
1298   785F             	db	CR,LF,COL,C_WARN,"This HDD too large for use with LBA28 and not currently supported in this version, "
1298   785F 0D0A1002546869732048444420746F6F206C6172676520666F72207573652077
1298   787F 697468204C4241323820616E64206E6F742063757272656E746C792073757070
1298   789F 6F7274656420696E20746869732076657273696F6E2C20
1299   78B6             	db	"continued operation may lead to the destruction of data on the your disk!",COL,C_NORM
1299   78B6 636F6E74696E756564206F7065726174696F6E206D6179206C65616420746F20
1299   78D6 746865206465737472756374696F6E206F662064617461206F6E207468652079
1299   78F6 6F7572206469736B211007
1300   7901             	db	CR,LF,"You wish to continue? (y/n)",CR,LF,EN
1300   7901 0D0A596F75207769736820746F20636F6E74696E75653F2028792F6E290D0A00
1301   7921             msgPending
1302   7921             	db	COL,C_WARN,"Pending operations: ["
1302   7921 100250656E64696E67206F7065726174696F6E733A205B
1303   7938             .cnt	db	"000]",COL,C_NORM,CR,LF,EN
1303   7938 3030305D10070D0A00
1304   7941             msgPendingOps
1305   7941             	db	CR,LF,COL,C_WARN,"There are pending operations, you really want to discard them? (y/n) ",COL,C_NORM,EN
1305   7941 0D0A10025468657265206172652070656E64696E67206F7065726174696F6E73
1305   7961 2C20796F75207265616C6C792077616E7420746F206469736361726420746865
1305   7981 6D3F2028792F6E2920100700
1306   798D             msgOK	db	CR,LF,"OK.",CR,LF,EN
1306   798D 0D0A4F4B2E0D0A00
1307   7995             msgApplyBeforeThisOps
1308   7995             	db	CR,LF,COL,C_WARN,"Should be applied all operations before execute this command!",COL,C_NORM,CR,LF,EN
1308   7995 0D0A100253686F756C64206265206170706C69656420616C6C206F7065726174
1308   79B5 696F6E73206265666F72652065786563757465207468697320636F6D6D616E64
1308   79D5 2110070D0A00
1309   79DB              IFUSED msgNotImplemented
1310   79DB             msgNotImplemented
1311   79DB             	db	CR,LF,COL,C_WARN,"This feature is not implemented in this version, sorry :(",COL,C_NORM,CR,LF,EN
1311   79DB 0D0A1002546869732066656174757265206973206E6F7420696D706C656D656E
1311   79FB 74656420696E20746869732076657273696F6E2C20736F727279203A2810070D
1311   7A1B 0A00
1312   7A1D              ENDIF
1313   7A1D             ;---------------------------------------------------------
1314   7A1D             
1315   7A1D              IF _TARGET=_ZX128 | _TARGET=_PROFI | _TARGET=_ATM
1316   7A1D             ;Вызов TR-DOS с автоматическим управлением прерываниями
1317   7A1D             ;Добавлен перехват управления в случае RIA-ошибки
1318   7A1D             ;источник Adventurer #07 - Обмен опытом - Обработка ошибок TR DOS.
1319   7A1D 08          _trdos	ex	af,af'
1320   7A1E ED 57       	ld	a,i
1321   7A20 F5          	push	af
1322   7A21 CD 52 71    	call	IM1SET
1323   7A24 F3          	di
1324   7A25 E5          	PUSH	HL
1325   7A26 2A 3D 5C    	LD	HL,(23613) ; Сохр. ERR_SP
1326   7A29 22 4B 7A    	LD	(.err2+1),HL
1327   7A2C 21 42 7A    	LD	HL,.err1
1328   7A2F E3          	EX	(SP),HL
1329   7A30 ED 73 3D 5C 	LD	(23613),SP
1330   7A34 AF          	XOR	A
1331   7A35 32 0F 5D    	LD	(23823),A
1332   7A38 32 10 5D    	LD	(23824),A
1333   7A3B 32 12 5C    	LD	(23570),A
1334   7A3E 08          	ex	af,af'
1335   7A3F C3 13 3D    	JP	15635
1336   7A42 CD 49 71    .err1	call	IM2SET
1337   7A45 F1          	pop	af
1338   7A46 E2 4A 7A    	jp	po,$+4
1339   7A49 FB          	ei
1340   7A4A 21 00 00    .err2	LD	HL,0
1341   7A4D 22 3D 5C    	LD	(23613),HL ; восст. ERR_SP
1342   7A50 3E 06       	LD	A,6
1343   7A52 32 12 5C    	LD	(23570),A
1344   7A55 3A 0F 5D    	LD	A,(23823)	;Код ошибки TR-DOS
1345   7A58 A7          	AND    	A
1346   7A59 C8          	RET	Z
1347   7A5A 37          	scf
1348   7A5B C9          	RET
1349   7A5C             	
1350   7A5C             ;-------------------------------------------
1351   7A5C             ;	Вывод сообщения об ошибке и
1352   7A5C             ;	возврат управления в ShowPartition.continue
1353   7A5C             ;-------------------------------------------
1354   7A5C             GeneralDosError
1355   7A5C 21 71 7A    	ld	hl,msgDosError
1356   7A5F             DosError
1357   7A5F             	PCHARS
1357   7A5F CD F7 7A    >	call	Print
1358   7A62             	_ANYKEY
1358   7A62 21 7B 74    >	ld	hl,msgAnyKey
1358   7A65 CD F7 7A    >	call	Print
1358   7A68 21 00 00    >	ld	hl,0
1358   7A6B CD A9 7F    >	call	Prompt
1359   7A6E C3 71 6D    	jp	ShowPartition.continue
1360   7A71             
1361   7A71             msgDosError
1362   7A71             	db	CR,LF,COL,C_WARN,"Disk error has occurred!",COL,C_NORM,CR,LF,EN
1362   7A71 0D0A10024469736B206572726F7220686173206F636375727265642110070D0A
1362   7A91 00
1363   7A92             msgDOSDirFull
1364   7A92             	db	CR,LF,COL,C_WARN,"Directory is full!",COL,C_NORM,CR,LF,EN
1364   7A92 0D0A10024469726563746F72792069732066756C6C2110070D0A00
1365   7AAD             msgDOSNoFree
1366   7AAD             	db	CR,LF,COL,C_WARN,"No free space on disk!",COL,C_NORM,CR,LF,EN
1366   7AAD 0D0A10024E6F2066726565207370616365206F6E206469736B2110070D0A00
1367   7ACC             
1368   7ACC             	IF _TARGET=_PROFI
1369   7ACC~            	include "libs\profi\console.asm"
1370   7ACC~            	include	"libs\profi\mem.asm"
1371   7ACC             	ELSE
1372   7ACC             	 IF _TARGET=_ATM
1373   7ACC~            	 include	"libs\atm\console.asm"
1374   7ACC~            	 include	"libs\atm\mem.asm"
1375   7ACC             	 ELSE
1376   7ACC             	 include "libs\zx128\console.asm"
0001+  7ACC             ;Заливает экран атрибутом 7 и бордер 0, очищает экран
0002+  7ACC             InitConsole
0003+  7ACC AF          	xor	a
0004+  7ACD D3 FE       	out	(#fe),a
0005+  7ACF             
0006+  7ACF             ClearScr
0007+  7ACF 21 00 40    	ld	hl,#4000
0008+  7AD2 54          	ld	d,h
0009+  7AD3 5D          	ld	e,l
0010+  7AD4 1C          	inc	e
0011+  7AD5 01 00 18    	ld	bc,6144
0012+  7AD8 75          	ld	(hl),l
0013+  7AD9 ED B0       	ldir
0014+  7ADB 36 07       	ld  (hl),7
0015+  7ADD 01 FF 02        	ld  bc,767
0016+  7AE0 ED B0           	ldir
0017+  7AE2 21 00 00    	ld	hl,0
0018+  7AE5 22 BF 7D    	ld	(COORDS),hl
0019+  7AE8 C9          	ret
0020+  7AE9             ;Пауза
0021+  7AE9 3E 01       PAUSE1  ld a,1
0022+  7AEB FB          PAUSE   ei 
0023+  7AEC 21 78 5C            ld hl,23672
0024+  7AEF 36 00               ld (hl),0
0024+  7AF1 FB          WAIT1	   	ei
0025+  7AF2 76           halt
0026+  7AF3 BE          	cp (hl) 
0027+  7AF4 C8          	ret z 
0028+  7AF5 18 FA       	jr WAIT1
0029+  7AF7             ;Печать строки 64 символа
0030+  7AF7 7E          Print   ld a,(hl) 
0031+  7AF8 B7          	        or a 
0032+  7AF9 C8          	        ret z
0033+  7AFA FE 01       	        cp  1
0034+  7AFC 28 23       	        jr  z,.C1
0035+  7AFE FE 0A       		cp 10
0036+  7B00 28 1C       		jr z,.pskip
0037+  7B02 FE 0D       	        cp 13
0038+  7B04 28 35       	        jr z,.C13
0039+  7B06 FE 10       	        cp  16
0040+  7B08 28 49       	        jr  z,.C16
0041+  7B0A FE 20       		cp 32
0042+  7B0C 28 05       		jr z,.skipSym
0043+  7B0E E5          	        push hl
0044+  7B0F CD 5A 7B    	        call PrintSym
0045+  7B12 E1          	        pop hl
0046+  7B13             .skipSym
0047+  7B13 3A C0 7D    		ld a,(COORDS+1)
0048+  7B16 3C          		inc a
0049+  7B17 FE 40       		cp 64
0050+  7B19 30 20       		jr nc,.C13
0051+  7B1B             	
0052+  7B1B             .nextcrd
0053+  7B1B 32 C0 7D    		ld (COORDS+1),a
0054+  7B1E 23          .pskip	    inc hl
0055+  7B1F 18 D6       	    jr Print
0056+  7B21 3A 7C 7B    .C1	    ld  a,(PrintSym.xor1)
0057+  7B24 A7          	    and a
0058+  7B25 28 09       	    jr  z,.inv
0059+  7B27 AF          	    xor a
0060+  7B28 32 7C 7B    		ld  (PrintSym.xor1),a
0061+  7B2B             ;	    ld  (PrintSym.xor1+1),a
0062+  7B2B 32 DD 7B    	    ld  (PrintSym.xor2),a
0063+  7B2E             ;	    ld  (PrintSym.xor2+1),a
0064+  7B2E 18 EE       	    jr  .pskip
0065+  7B30             .inv
0066+  7B30             ;	    ld  a,0xEE  ;XOR N
0067+  7B30             ;	    ld  (PrintSym.xor1),a
0068+  7B30             ;	    ld  (PrintSym.xor2),a
0069+  7B30 3E F0       	    ld  a,240
0070+  7B32 32 7C 7B    	    ld  (PrintSym.xor1),a
0071+  7B35 2F          	    cpl
0072+  7B36 32 DD 7B    	    ld  (PrintSym.xor2),a
0073+  7B39 18 E3       	    jr  .pskip
0074+  7B3B             
0075+  7B3B             
0076+  7B3B             .C13
0077+  7B3B 3A BF 7D            ld a,(COORDS)	;Y
0078+  7B3E FE 17       	cp 23
0079+  7B40 38 07       	jr c,.noscroll
0080+  7B42 E5          	push	hl
0081+  7B43 CD 93 7C    	call ScrollUP
0082+  7B46 E1          	pop	hl
0083+  7B47 18 04       	jr .prtNullX
0084+  7B49             .noscroll
0085+  7B49 3C          	inc a
0086+  7B4A 32 BF 7D    	ld (COORDS),a
0087+  7B4D             .prtNullX
0088+  7B4D AF          	xor a
0089+  7B4E 32 C0 7D    	ld (COORDS+1),a
0090+  7B51 18 CB       	jr .pskip
0091+  7B53             .C16
0092+  7B53             ;Set attribute
0093+  7B53 23          	    inc hl
0094+  7B54 7E          	    ld  a,(hl)
0095+  7B55 32 C1 7D    	    ld  (PrtAtr),a
0096+  7B58 18 C4       	    jr  .pskip
0097+  7B5A             PCH
0098+  7B5A             PrintSym
0099+  7B5A 08          	    ex  af,af'
0100+  7B5B ED 5B BF 7D 	    ld  de,(COORDS)
0101+  7B5F CD 79 7C    	    call    COORD
0102+  7B62             .setatr
0103+  7B62 44          	    ld  b,h
0104+  7B63 7C          	    ld a,h
0105+  7B64 0F          	    rrca
0106+  7B65 0F          	    rrca
0107+  7B66 0F          	    rrca
0108+  7B67 E6 03       	    and 3
0109+  7B69 F6 58       	    or 88
0110+  7B6B 67          	    ld h,a
0111+  7B6C 3A C1 7D    	    ld  a,(PrtAtr)
0112+  7B6F 77          	    ld  (hl),a
0113+  7B70 60          	    ld  h,b
0114+  7B71 08          	    ex  af,af'
0115+  7B72 5F          	    ld  e,a
0116+  7B73 16 64       	    ld  d,high font
0117+  7B75 3A C2 7D    	    ld  a,(ShiftSymb)
0118+  7B78 A7          	    and a
0119+  7B79 28 61       	    jr  z,.lp2
0120+  7B7B 06 00       		ld	b,0
0121+  7B7D             .xor1		equ	$-1
0122+  7B7D             .lp1
0123+  7B7D             	    dup 8
0124+  7B7D 1A          >	    ld  a,(de)
0125+  7B7E E6 F0       >	    and 240
0126+  7B80 4F          >	    ld  c,a
0127+  7B81 7E          >	    ld  a,(hl)
0128+  7B82 E6 0F       >	    and 15
0129+  7B84 B1          >	    or  c
0130+  7B85 A8          >	    xor b
0131+  7B86 77          >	    ld  (hl),a
0132+  7B87 24          >	    inc h
0133+  7B88 14          >	    inc d
0124+  7B89 1A          >	    ld  a,(de)
0125+  7B8A E6 F0       >	    and 240
0126+  7B8C 4F          >	    ld  c,a
0127+  7B8D 7E          >	    ld  a,(hl)
0128+  7B8E E6 0F       >	    and 15
0129+  7B90 B1          >	    or  c
0130+  7B91 A8          >	    xor b
0131+  7B92 77          >	    ld  (hl),a
0132+  7B93 24          >	    inc h
0133+  7B94 14          >	    inc d
0124+  7B95 1A          >	    ld  a,(de)
0125+  7B96 E6 F0       >	    and 240
0126+  7B98 4F          >	    ld  c,a
0127+  7B99 7E          >	    ld  a,(hl)
0128+  7B9A E6 0F       >	    and 15
0129+  7B9C B1          >	    or  c
0130+  7B9D A8          >	    xor b
0131+  7B9E 77          >	    ld  (hl),a
0132+  7B9F 24          >	    inc h
0133+  7BA0 14          >	    inc d
0124+  7BA1 1A          >	    ld  a,(de)
0125+  7BA2 E6 F0       >	    and 240
0126+  7BA4 4F          >	    ld  c,a
0127+  7BA5 7E          >	    ld  a,(hl)
0128+  7BA6 E6 0F       >	    and 15
0129+  7BA8 B1          >	    or  c
0130+  7BA9 A8          >	    xor b
0131+  7BAA 77          >	    ld  (hl),a
0132+  7BAB 24          >	    inc h
0133+  7BAC 14          >	    inc d
0124+  7BAD 1A          >	    ld  a,(de)
0125+  7BAE E6 F0       >	    and 240
0126+  7BB0 4F          >	    ld  c,a
0127+  7BB1 7E          >	    ld  a,(hl)
0128+  7BB2 E6 0F       >	    and 15
0129+  7BB4 B1          >	    or  c
0130+  7BB5 A8          >	    xor b
0131+  7BB6 77          >	    ld  (hl),a
0132+  7BB7 24          >	    inc h
0133+  7BB8 14          >	    inc d
0124+  7BB9 1A          >	    ld  a,(de)
0125+  7BBA E6 F0       >	    and 240
0126+  7BBC 4F          >	    ld  c,a
0127+  7BBD 7E          >	    ld  a,(hl)
0128+  7BBE E6 0F       >	    and 15
0129+  7BC0 B1          >	    or  c
0130+  7BC1 A8          >	    xor b
0131+  7BC2 77          >	    ld  (hl),a
0132+  7BC3 24          >	    inc h
0133+  7BC4 14          >	    inc d
0124+  7BC5 1A          >	    ld  a,(de)
0125+  7BC6 E6 F0       >	    and 240
0126+  7BC8 4F          >	    ld  c,a
0127+  7BC9 7E          >	    ld  a,(hl)
0128+  7BCA E6 0F       >	    and 15
0129+  7BCC B1          >	    or  c
0130+  7BCD A8          >	    xor b
0131+  7BCE 77          >	    ld  (hl),a
0132+  7BCF 24          >	    inc h
0133+  7BD0 14          >	    inc d
0124+  7BD1 1A          >	    ld  a,(de)
0125+  7BD2 E6 F0       >	    and 240
0126+  7BD4 4F          >	    ld  c,a
0127+  7BD5 7E          >	    ld  a,(hl)
0128+  7BD6 E6 0F       >	    and 15
0129+  7BD8 B1          >	    or  c
0130+  7BD9 A8          >	    xor b
0131+  7BDA 77          >	    ld  (hl),a
0132+  7BDB 24          >	    inc h
0133+  7BDC 14          >	    inc d
0135+  7BDD             	    org $-2
0136+  7BDB C9          	    ret
0137+  7BDC 06 00       .lp2	    ld b,0
0138+  7BDE             .xor2	    equ $-1
0139+  7BDE             	    dup 8
0140+  7BDE 1A          >	    ld  a,(de)
0141+  7BDF E6 0F       >	    and 15
0142+  7BE1 4F          >	    ld  c,a
0143+  7BE2 7E          >	    ld  a,(hl)
0144+  7BE3 E6 F0       >	    and 240
0145+  7BE5 B1          >	    or  c
0146+  7BE6 A8          >	    xor b
0147+  7BE7 77          >	    ld  (hl),a
0148+  7BE8 24          >	    inc h
0149+  7BE9 14          >	    inc d
0140+  7BEA 1A          >	    ld  a,(de)
0141+  7BEB E6 0F       >	    and 15
0142+  7BED 4F          >	    ld  c,a
0143+  7BEE 7E          >	    ld  a,(hl)
0144+  7BEF E6 F0       >	    and 240
0145+  7BF1 B1          >	    or  c
0146+  7BF2 A8          >	    xor b
0147+  7BF3 77          >	    ld  (hl),a
0148+  7BF4 24          >	    inc h
0149+  7BF5 14          >	    inc d
0140+  7BF6 1A          >	    ld  a,(de)
0141+  7BF7 E6 0F       >	    and 15
0142+  7BF9 4F          >	    ld  c,a
0143+  7BFA 7E          >	    ld  a,(hl)
0144+  7BFB E6 F0       >	    and 240
0145+  7BFD B1          >	    or  c
0146+  7BFE A8          >	    xor b
0147+  7BFF 77          >	    ld  (hl),a
0148+  7C00 24          >	    inc h
0149+  7C01 14          >	    inc d
0140+  7C02 1A          >	    ld  a,(de)
0141+  7C03 E6 0F       >	    and 15
0142+  7C05 4F          >	    ld  c,a
0143+  7C06 7E          >	    ld  a,(hl)
0144+  7C07 E6 F0       >	    and 240
0145+  7C09 B1          >	    or  c
0146+  7C0A A8          >	    xor b
0147+  7C0B 77          >	    ld  (hl),a
0148+  7C0C 24          >	    inc h
0149+  7C0D 14          >	    inc d
0140+  7C0E 1A          >	    ld  a,(de)
0141+  7C0F E6 0F       >	    and 15
0142+  7C11 4F          >	    ld  c,a
0143+  7C12 7E          >	    ld  a,(hl)
0144+  7C13 E6 F0       >	    and 240
0145+  7C15 B1          >	    or  c
0146+  7C16 A8          >	    xor b
0147+  7C17 77          >	    ld  (hl),a
0148+  7C18 24          >	    inc h
0149+  7C19 14          >	    inc d
0140+  7C1A 1A          >	    ld  a,(de)
0141+  7C1B E6 0F       >	    and 15
0142+  7C1D 4F          >	    ld  c,a
0143+  7C1E 7E          >	    ld  a,(hl)
0144+  7C1F E6 F0       >	    and 240
0145+  7C21 B1          >	    or  c
0146+  7C22 A8          >	    xor b
0147+  7C23 77          >	    ld  (hl),a
0148+  7C24 24          >	    inc h
0149+  7C25 14          >	    inc d
0140+  7C26 1A          >	    ld  a,(de)
0141+  7C27 E6 0F       >	    and 15
0142+  7C29 4F          >	    ld  c,a
0143+  7C2A 7E          >	    ld  a,(hl)
0144+  7C2B E6 F0       >	    and 240
0145+  7C2D B1          >	    or  c
0146+  7C2E A8          >	    xor b
0147+  7C2F 77          >	    ld  (hl),a
0148+  7C30 24          >	    inc h
0149+  7C31 14          >	    inc d
0140+  7C32 1A          >	    ld  a,(de)
0141+  7C33 E6 0F       >	    and 15
0142+  7C35 4F          >	    ld  c,a
0143+  7C36 7E          >	    ld  a,(hl)
0144+  7C37 E6 F0       >	    and 240
0145+  7C39 B1          >	    or  c
0146+  7C3A A8          >	    xor b
0147+  7C3B 77          >	    ld  (hl),a
0148+  7C3C 24          >	    inc h
0149+  7C3D 14          >	    inc d
0151+  7C3E             	    org $-2
0152+  7C3C C9          	    ret
0153+  7C3D 14          DOWND   inc d
0154+  7C3E 7A                  ld a,d
0155+  7C3F E6 07               and 7
0156+  7C41 C0                  ret nz
0157+  7C42 7B                  ld a,e
0158+  7C43 C6 20               add a,32
0159+  7C45 5F                  ld e,a
0160+  7C46 D8                  ret c
0161+  7C47 7A                  ld a,d
0162+  7C48 D6 08               sub 8
0163+  7C4A 57                  ld d,a
0164+  7C4B C9                  ret 
0165+  7C4C 7D          ADRZ    ld a,l
0166+  7C4D E6 07               and 7
0167+  7C4F 0F                  rrca
0168+  7C50 0F                  rrca
0169+  7C51 0F                  rrca
0170+  7C52 84                  add a,h
0171+  7C53 65                  ld h,l
0172+  7C54 6F                  ld l,a
0173+  7C55 7C                  ld a,h
0174+  7C56 E6 18               and #18
0175+  7C58 F6 40               or #40
0176+  7C5A 67                  ld h,a
0177+  7C5B C9                  ret
0178+  7C5C 7D          ADRATR  ld a,l
0179+  7C5D E6 07               and 7
0180+  7C5F 0F                  rrca
0181+  7C60 0F                  rrca
0182+  7C61 0F                  rrca
0183+  7C62 84                  add a,h
0184+  7C63 65                  ld h,l
0185+  7C64 6F                  ld l,a
0186+  7C65 7C                  ld a,h
0187+  7C66 E6 18               and #18
0188+  7C68 0F                  rrca
0189+  7C69 0F                  rrca
0190+  7C6A 0F                  rrca
0191+  7C6B F6 58               or #58
0192+  7C6D 67                  ld h,a
0193+  7C6E C9                  ret 
0194+  7C6F 7B          DOWN8   ld a,e
0195+  7C70 C6 20               add a,32
0196+  7C72 5F                  ld e,a
0197+  7C73 D0                  ret nc
0198+  7C74 7A                  ld a,d
0199+  7C75 C6 08               add a,8
0200+  7C77 57                  ld d,a
0201+  7C78 C9                  ret
0202+  7C79 CB 3A       COORD   srl d 
0203+  7C7B 3E 00               ld a,0
0204+  7C7D 38 02               jr c,LF1
0205+  7C7F 3E 01               ld a,1
0206+  7C81 32 C2 7D    LF1     ld (ShiftSymb),a
0207+  7C84 7B                  ld a,e
0208+  7C85 E6 07               and 7
0209+  7C87 0F                  rrca
0210+  7C88 0F                  rrca
0211+  7C89 0F                  rrca
0212+  7C8A 82                  add a,d
0213+  7C8B 6F                  ld l,a
0214+  7C8C 7B                  ld a,e
0215+  7C8D E6 18               and #18
0216+  7C8F F6 40               or #40
0217+  7C91 67                  ld h,a
0218+  7C92 C9                  ret 
0219+  7C93             
0220+  7C93             ScrollUP
0221+  7C93 21 20 40    	ld hl,#4020
0222+  7C96 11 00 40    	ld de,#4000
0223+  7C99 06 17               ld b,23
0224+  7C9B C5          .SCR1    push bc
0225+  7C9C CD BF 7C            call CopyRow
0226+  7C9F 5D                  ld e,l
0227+  7CA0 54                  ld d,h
0228+  7CA1 7D                  ld a,l
0229+  7CA2 C6 20               add a,32
0230+  7CA4 6F                  ld l,a
0231+  7CA5 30 04               jr nc,.SCR2
0232+  7CA7 3E 08               ld a,8
0233+  7CA9 84                  add a,h
0234+  7CAA 67                  ld h,a
0235+  7CAB C1          .SCR2    pop bc
0236+  7CAC 10 ED               djnz .SCR1
0237+  7CAE 0E 08               ld c,8
0238+  7CB0 EB                  ex de,hl 
0239+  7CB1 06 20       .SCR3    ld b,32
0240+  7CB3 E5                  push hl 
0241+  7CB4 36 00       .SCR4    ld (hl),0
0242+  7CB6 2C                  inc l
0243+  7CB7 10 FB               djnz .SCR4
0244+  7CB9 E1                  pop hl
0245+  7CBA 24                  inc h
0246+  7CBB 0D                  dec c
0247+  7CBC 20 F3               jr nz,.SCR3
0248+  7CBE C9                  ret
0248+  7CBF E5          CopyRow push hl
0249+  7CC0 D5           push de
0250+  7CC1 01 FF FF            ld bc,0xffff
0251+  7CC4 3E 04               ld a,4
0252+  7CC6             .SCR5    ;push bc
0253+  7CC6                     dup 32
0254+  7CC6 ED A0       >        ldi
0254+  7CC8 ED A0       >        ldi
0254+  7CCA ED A0       >        ldi
0254+  7CCC ED A0       >        ldi
0254+  7CCE ED A0       >        ldi
0254+  7CD0 ED A0       >        ldi
0254+  7CD2 ED A0       >        ldi
0254+  7CD4 ED A0       >        ldi
0254+  7CD6 ED A0       >        ldi
0254+  7CD8 ED A0       >        ldi
0254+  7CDA ED A0       >        ldi
0254+  7CDC ED A0       >        ldi
0254+  7CDE ED A0       >        ldi
0254+  7CE0 ED A0       >        ldi
0254+  7CE2 ED A0       >        ldi
0254+  7CE4 ED A0       >        ldi
0254+  7CE6 ED A0       >        ldi
0254+  7CE8 ED A0       >        ldi
0254+  7CEA ED A0       >        ldi
0254+  7CEC ED A0       >        ldi
0254+  7CEE ED A0       >        ldi
0254+  7CF0 ED A0       >        ldi
0254+  7CF2 ED A0       >        ldi
0254+  7CF4 ED A0       >        ldi
0254+  7CF6 ED A0       >        ldi
0254+  7CF8 ED A0       >        ldi
0254+  7CFA ED A0       >        ldi
0254+  7CFC ED A0       >        ldi
0254+  7CFE ED A0       >        ldi
0254+  7D00 ED A0       >        ldi
0254+  7D02 ED A0       >        ldi
0254+  7D04 ED A0       >        ldi
0256+  7D06 1B                  dec de
0257+  7D07 2B                  dec hl
0258+  7D08 14                  inc d
0259+  7D09 24                  inc h
0260+  7D0A                     dup 32
0261+  7D0A ED A8       >        ldd
0261+  7D0C ED A8       >        ldd
0261+  7D0E ED A8       >        ldd
0261+  7D10 ED A8       >        ldd
0261+  7D12 ED A8       >        ldd
0261+  7D14 ED A8       >        ldd
0261+  7D16 ED A8       >        ldd
0261+  7D18 ED A8       >        ldd
0261+  7D1A ED A8       >        ldd
0261+  7D1C ED A8       >        ldd
0261+  7D1E ED A8       >        ldd
0261+  7D20 ED A8       >        ldd
0261+  7D22 ED A8       >        ldd
0261+  7D24 ED A8       >        ldd
0261+  7D26 ED A8       >        ldd
0261+  7D28 ED A8       >        ldd
0261+  7D2A ED A8       >        ldd
0261+  7D2C ED A8       >        ldd
0261+  7D2E ED A8       >        ldd
0261+  7D30 ED A8       >        ldd
0261+  7D32 ED A8       >        ldd
0261+  7D34 ED A8       >        ldd
0261+  7D36 ED A8       >        ldd
0261+  7D38 ED A8       >        ldd
0261+  7D3A ED A8       >        ldd
0261+  7D3C ED A8       >        ldd
0261+  7D3E ED A8       >        ldd
0261+  7D40 ED A8       >        ldd
0261+  7D42 ED A8       >        ldd
0261+  7D44 ED A8       >        ldd
0261+  7D46 ED A8       >        ldd
0261+  7D48 ED A8       >        ldd
0263+  7D4A                     ;pop bc
0264+  7D4A 23                  inc hl
0265+  7D4B 13                  inc de
0266+  7D4C 14                  inc d
0267+  7D4D 24                  inc h
0268+  7D4E 3D                  dec a
0269+  7D4F C2 C6 7C            jp nz,.SCR5
0270+  7D52 D1                  pop de
0271+  7D53 D5                  push    de
0272+  7D54 7A                  ld a,d
0273+  7D55 0F                  rrca
0274+  7D56 0F                  rrca
0275+  7D57 0F                  rrca
0276+  7D58 E6 03               and 3
0277+  7D5A F6 58               or 88
0278+  7D5C 57                  ld d,a
0279+  7D5D 01 20 00            ld  bc,32
0280+  7D60 D5                  push    de
0281+  7D61 E1                  pop hl
0282+  7D62 09                  add hl,bc
0283+  7D63                     dup 32
0284+  7D63 ED A0       >        ldi
0284+  7D65 ED A0       >        ldi
0284+  7D67 ED A0       >        ldi
0284+  7D69 ED A0       >        ldi
0284+  7D6B ED A0       >        ldi
0284+  7D6D ED A0       >        ldi
0284+  7D6F ED A0       >        ldi
0284+  7D71 ED A0       >        ldi
0284+  7D73 ED A0       >        ldi
0284+  7D75 ED A0       >        ldi
0284+  7D77 ED A0       >        ldi
0284+  7D79 ED A0       >        ldi
0284+  7D7B ED A0       >        ldi
0284+  7D7D ED A0       >        ldi
0284+  7D7F ED A0       >        ldi
0284+  7D81 ED A0       >        ldi
0284+  7D83 ED A0       >        ldi
0284+  7D85 ED A0       >        ldi
0284+  7D87 ED A0       >        ldi
0284+  7D89 ED A0       >        ldi
0284+  7D8B ED A0       >        ldi
0284+  7D8D ED A0       >        ldi
0284+  7D8F ED A0       >        ldi
0284+  7D91 ED A0       >        ldi
0284+  7D93 ED A0       >        ldi
0284+  7D95 ED A0       >        ldi
0284+  7D97 ED A0       >        ldi
0284+  7D99 ED A0       >        ldi
0284+  7D9B ED A0       >        ldi
0284+  7D9D ED A0       >        ldi
0284+  7D9F ED A0       >        ldi
0284+  7DA1 ED A0       >        ldi
0286+  7DA3             
0286+  7DA3 D1                  pop de
0287+  7DA4 E1           pop hl
0288+  7DA5 C9                  ret 
0289+  7DA6             
0290+  7DA6             CursorOn
0291+  7DA6 3E 01       	ld	a,1
0292+  7DA8 32 BC 7D    	ld	(curShow),a
0293+  7DAB AF          	xor	a
0294+  7DAC 32 BE 7D    	ld	(curState),a
0295+  7DAF 32 BD 7D    	ld	(curIterate),a
0296+  7DB2 C9          	ret
0297+  7DB3             
0298+  7DB3             CursorOff
0299+  7DB3 AF          	xor	a
0300+  7DB4 32 BC 7D    	ld	(curShow),a
0301+  7DB7 3E 20       	ld	a,32
0302+  7DB9 C3 5A 7B    	jp	PCH
0303+  7DBC             ;PrintCursor
0304+  7DBC             ;	JP	PrintSym
0305+  7DBC             
0306+  7DBC 00          curShow	db	0
0307+  7DBD             curIterate
0308+  7DBD 00          	db	0
0309+  7DBE             curState
0310+  7DBE 00          	db	0
0311+  7DBF             
0312+  7DBF 00 00       COORDS	DW	0	;Y,X
0313+  7DC1 07          PrtAtr  db  7
0314+  7DC2             ShiftSymb
0315+  7DC2 00          	db	0
1377   7DC3             	 include	"libs\zx128\mem.asm"
0001+  7DC3             CurrentPage	equ	#5B5C	;BANKM
0002+  7DC3             OpenPG
0003+  7DC3 C5          	PUSH	BC
0004+  7DC4 01 FD 7F    	LD	BC,32765
0005+  7DC7 F6 10       	or	16
0006+  7DC9 32 5C 5B    	ld	(CurrentPage),a
0007+  7DCC ED 79       	OUT	(C),A
0008+  7DCE C1          	POP	BC
0009+  7DCF C9          	RET
1378   7DD0             	 ENDIF
1379   7DD0             	ENDIF
1380   7DD0             	include	"fdisk_loaddrv.asm"
0001+  7DD0             LoadDriver
0002+  7DD0 CD D0 7E    	call	FindDrv
0003+  7DD3 32 67 7E    	ld	(DrvCnt),a
0004+  7DD6 A7          	and	a
0005+  7DD7 37          	scf
0006+  7DD8 C8          	ret	z		;нет ни одного драйвера в поставке - используем внутренний
0007+  7DD9 21 94 7E    	ld	hl,msgDrvFounded
0008+  7DDC             	PCHARS
0008+  7DDC CD F7 7A    >	call	Print
0009+  7DDF CD 0C 7F    	call	GetFirstDrvName
0010+  7DE2 D8          	ret	c		;error
0011+  7DE3 3A 67 7E    	ld	a,(DrvCnt)
0012+  7DE6 47          	ld	b,a
0013+  7DE7 C5          .lp0	push	bc
0014+  7DE8 3A 67 7E    	ld	a,(DrvCnt)
0015+  7DEB C6 31       	add	a,"1"
0016+  7DED 90          	sub	b
0017+  7DEE 32 7E 7E    	ld	(msgDrvNames.num),a
0018+  7DF1             
0019+  7DF1 DD E5       	push	ix
0020+  7DF3 E1          	pop	hl
0021+  7DF4 11 85 7E    	ld	de,msgDrvNames.name
0022+  7DF7 01 08 00    	ld	bc,8
0023+  7DFA ED B0       	ldir
0024+  7DFC 13          	inc	de
0025+  7DFD 0E 03       	ld	c,3
0026+  7DFF ED B0       	ldir
0027+  7E01 21 7B 7E    	ld	hl,msgDrvNames
0028+  7E04             	PCHARS
0028+  7E04 CD F7 7A    >	call	Print
0029+  7E07 CD 30 7F    	call	GetNextDrvName
0030+  7E0A C1          	pop	bc
0031+  7E0B 10 DA       	djnz	.lp0
0032+  7E0D             ;Ввод строки с номером драйвера
0033+  7E0D             .lp1
0034+  7E0D 21 69 7E    	ld	hl,msgDrvSelect
0035+  7E10             	PCHARS
0035+  7E10 CD F7 7A    >	call	Print
0036+  7E13 21 C9 71    	ld	hl,bufStr
0037+  7E16 3E 02       	ld	a,2
0038+  7E18 CD F9 7F    	call	EditString
0039+  7E1B 21 C9 71    	ld	hl,bufStr
0040+  7E1E CD 06 81    	call	MRNUM
0041+  7E21 38 10       	jr	c,.inval
0042+  7E23 3A 67 7E    	ld	a,(DrvCnt)
0043+  7E26 47          	ld	b,a	
0044+  7E27 79          	ld	a,c	;введен 0 - использовать внутренний
0045+  7E28 32 68 7E    	ld	(DrvLoaded),a
0046+  7E2B A7          	and	a
0047+  7E2C 37          	scf
0048+  7E2D C8          	ret	z
0049+  7E2E B8          	cp	b
0050+  7E2F 28 0A       	jr	z,.ld1
0051+  7E31 38 08       	jr	c,.ld1
0052+  7E33 21 13 78    .inval	ld	hl,msgInvalidParameter
0053+  7E36             	PCHARS
0053+  7E36 CD F7 7A    >	call	Print
0054+  7E39 18 D2       	jr	.lp1
0055+  7E3B CD 62 7F    .ld1	call	GetDrvSpec
0056+  7E3E DD E5       	push	ix
0057+  7E40 E1          	pop	hl
0058+  7E41 11 BE 7E    	ld	de,msgDrvLoad.name
0059+  7E44 01 08 00    	ld	bc,8
0060+  7E47 ED B0       	ldir
0061+  7E49 13          	inc	de
0062+  7E4A 0E 03       	ld	c,3
0063+  7E4C ED B0       	ldir
0064+  7E4E 21 A9 7E    	ld	hl,msgDrvLoad
0065+  7E51             	PCHARS
0065+  7E51 CD F7 7A    >	call	Print
0066+  7E54             ;	call	IM1SET
0067+  7E54 DD 5E 0E    	ld	e,(ix+0x0e)	;sec
0068+  7E57 DD 56 0F    	ld	d,(ix+0x0f)	;trk
0069+  7E5A DD 46 0D    	ld	b,(ix+0x0d)	;lenght
0070+  7E5D 0E 05       	ld	c,5
0071+  7E5F 21 00 60    	ld	hl,_DRVORG
0072+  7E62             ;	di
0073+  7E62 CD 1D 7A    	call	_trdos	;читаем драйвер
0074+  7E65             ;	call	IM2SET
0075+  7E65 A7          	and	a
0076+  7E66 C9          	ret
0077+  7E67             	
0078+  7E67 00          DrvCnt	db	0	;количество найденных драйверов
0079+  7E68             DrvLoaded
0080+  7E68 00          	db	0
0081+  7E69             msgDrvSelect
0082+  7E69             	db	CR,LF,"Select driver: ",EN
0082+  7E69 0D0A53656C656374206472697665723A2000
0083+  7E7B             msgDrvNames
0084+  7E7B 10 06 5B    	db	COL,C_CMD,"["
0085+  7E7E             .num	db	"0] ",COL,C_NORM,"- "
0085+  7E7E 305D2010072D20
0086+  7E85             .name	db	"FILENAME.ext",CR,LF,EN
0086+  7E85 46494C454E414D452E6578740D0A00
0087+  7E94             msgDrvFounded
0088+  7E94             	db	"Available drivers:",CR,LF,EN
0088+  7E94 417661696C61626C6520647269766572733A0D0A00
0089+  7EA9             msgDrvLoad
0090+  7EA9             	db	CR,LF,"Loading driver: ",COL,C_VAL,"["
0090+  7EA9 0D0A4C6F6164696E67206472697665723A2010055B
0091+  7EBE             .name	db	"FILENAME.ext]",COL,C_NORM,CR,LF,EN
0091+  7EBE 46494C454E414D452E6578745D10070D0A00
0092+  7ED0             FindDrv
0093+  7ED0             	;читаем каталог дискеты
0094+  7ED0 21 00 C0    	ld	hl,Buffer	;используется буфер статуса жестких дисков и буфера секторов
0095+  7ED3 01 05 08    	ld	bc,8*256+5
0096+  7ED6 11 00 00    	ld	de,0
0097+  7ED9             	;call	IM1SET
0098+  7ED9             	;di
0099+  7ED9 CD 1D 7A    	call	_trdos	;15635
0100+  7EDC             	;call	IM2SET
0101+  7EDC 01 00 80    	ld	bc,128*256	;128 элементов
0102+  7EDF DD 21 00 C0 	ld	ix,Buffer
0103+  7EE3 11 10 00    	ld	de,16
0104+  7EE6 DD 7E 00    .loop	ld	a,(ix)
0105+  7EE9 A7          	and	a
0106+  7EEA 28 1D       	jr	z,.end
0107+  7EEC 3D          	dec	a		;файл удален?
0108+  7EED 28 16       	jr	z,.next
0109+  7EEF DD 7E 08    	ld	a,(ix+8)	;проверка расширения drv
0110+  7EF2 FE 64       	cp	"d"
0111+  7EF4 20 0F       	jr	nz,.next
0112+  7EF6 DD 7E 09    	ld	a,(ix+9)
0113+  7EF9 FE 72       	cp	"r"
0114+  7EFB 20 08       	jr	nz,.next
0115+  7EFD DD 7E 0A    	ld	a,(ix+10)
0116+  7F00 FE 76       	cp	"v"
0117+  7F02 20 01       	jr	nz,.next
0118+  7F04 0C          	inc	c		;счетчик найденных файлов
0119+  7F05 DD 19       .next	add	ix,de
0120+  7F07 10 DD       	djnz	.loop
0121+  7F09 79          .end	ld	a,c
0122+  7F0A A7          	and	a
0123+  7F0B C9          	ret
0124+  7F0C             GetFirstDrvName
0125+  7F0C DD 21 00 C0 	ld	ix,Buffer
0126+  7F10 DD 7E 00    	ld	a,(ix)
0127+  7F13 A7          	and	a
0128+  7F14 28 4A       	jr	z,GetNextDrvName.end
0129+  7F16 3D          	dec	a		;файл удален?
0130+  7F17 28 17       	jr	z,GetNextDrvName
0131+  7F19 DD 7E 08    	ld	a,(ix+8)	;проверка расширения drv
0132+  7F1C FE 64       	cp	"d"
0133+  7F1E 20 10       	jr	nz,GetNextDrvName
0134+  7F20 DD 7E 09    	ld	a,(ix+9)
0135+  7F23 FE 72       	cp	"r"
0136+  7F25 20 09       	jr	nz,GetNextDrvName
0137+  7F27 DD 7E 0A    	ld	a,(ix+10)
0138+  7F2A FE 76       	cp	"v"
0139+  7F2C 20 02       	jr	nz,GetNextDrvName
0140+  7F2E A7          	and	a
0141+  7F2F C9          	ret
0142+  7F30             ;на входе ix - тек.запись, на выходе - след.
0143+  7F30             ;CY = 1 - конец каталога
0144+  7F30             GetNextDrvName
0145+  7F30 11 10 00    	ld	de,16
0146+  7F33 01 00 C8    	ld	bc,Buffer+2048	;адрес окончания каталога
0147+  7F36             
0148+  7F36 DD 19       .next	add	ix,de
0149+  7F38 DD E5       	push	ix
0150+  7F3A E1          	pop	hl
0151+  7F3B A7          	and	a
0152+  7F3C ED 42       	sbc	hl,bc		;достигнут конец каталога?
0153+  7F3E 28 20       	jr	z,.end
0154+  7F40 DD 7E 00    	ld	a,(ix)
0155+  7F43 A7          	and	a
0156+  7F44 28 1A       	jr	z,.end
0157+  7F46 3D          	dec	a		;файл удален?
0158+  7F47 28 ED       	jr	z,.next
0159+  7F49 DD 7E 08    	ld	a,(ix+8)	;проверка расширения drv
0160+  7F4C FE 64       	cp	"d"
0161+  7F4E 20 E6       	jr	nz,.next
0162+  7F50 DD 7E 09    	ld	a,(ix+9)
0163+  7F53 FE 72       	cp	"r"
0164+  7F55 20 DF       	jr	nz,.next
0165+  7F57 DD 7E 0A    	ld	a,(ix+10)
0166+  7F5A FE 76       	cp	"v"
0167+  7F5C 20 D8       	jr	nz,.next
0168+  7F5E A7          	and	a
0169+  7F5F C9          	ret
0170+  7F60 37          .end	scf
0171+  7F61 C9          	ret
0172+  7F62             ;вернуть указатель на спецификацию файла драйвера, номер в А
0173+  7F62             GetDrvSpec
0174+  7F62 11 10 00    	ld	de,16
0175+  7F65 DD 21 00 C0 	ld	ix,Buffer
0176+  7F69 47          	ld	b,a
0177+  7F6A DD 7E 00    .loop	ld	a,(ix)
0178+  7F6D A7          	and	a
0179+  7F6E 28 1E       	jr	z,.end
0180+  7F70 3D          	dec	a		;файл удален?
0181+  7F71 28 16       	jr	z,.next
0182+  7F73 DD 7E 08    	ld	a,(ix+8)	;проверка расширения drv
0183+  7F76 FE 64       	cp	"d"
0184+  7F78 20 0F       	jr	nz,.next
0185+  7F7A DD 7E 09    	ld	a,(ix+9)
0186+  7F7D FE 72       	cp	"r"
0187+  7F7F 20 08       	jr	nz,.next
0188+  7F81 DD 7E 0A    	ld	a,(ix+10)
0189+  7F84 FE 76       	cp	"v"
0190+  7F86 20 01       	jr	nz,.next
0191+  7F88 0C          	inc	c		;счетчик найденных файлов
0192+  7F89 DD 19       .next	add	ix,de
0193+  7F8B 10 DD       	djnz	.loop
0194+  7F8D C9          	ret
0195+  7F8E 37          .end	scf
0196+  7F8F C9          	ret
1381   7F90             	include	"libs\keys.asm"
0001+  7F90             ;-------------------------------------------
0002+  7F90             ;	Добавляет команду в таблицу для Prompt
0003+  7F90             ;	и печатает на экран подсказку
0004+  7F90             ;-------------------------------------------
0005+  7F90             ;на входе:
0006+  7F90             ;IX - адрес таблицы
0007+  7F90             ;DE - адрес команды
0008+  7F90             ;A - код кнопки
0009+  7F90             ;HL - текст команды
0010+  7F90             ;на выходе
0011+  7F90             ;IX - адрес следующей записи в таблице
0012+  7F90             ;в IX+0 устанавливается признак конца таблицы = 0
0013+  7F90             ;-------------------------------------------
0014+  7F90 DD 77 00    AddCMD	ld	(ix+0),a
0015+  7F93 DD 73 01    	ld	(ix+1),e
0016+  7F96 DD 72 02    	ld	(ix+2),d
0017+  7F99 DD 23       	inc	ix
0018+  7F9B DD 23       	inc	ix
0019+  7F9D DD 23       	inc	ix
0020+  7F9F DD 36 00 00 	ld	(ix+0),0
0021+  7FA3 C5          	push	bc
0022+  7FA4             	PCHARS
0022+  7FA4 CD F7 7A    >	call	Print
0023+  7FA7 C1          	pop	bc
0024+  7FA8 C9          	ret
0025+  7FA9             
0026+  7FA9             ;--------------------------------------------------
0027+  7FA9             ;Ожидание нажатия клавиш, переход в подпрограмму, обработки горячей клавиши
0028+  7FA9             ;HL - таблица клавиш и адресов обработчиков
0029+  7FA9             ;--------------------------------------------------
0030+  7FA9 22 CE 7F    Prompt	ld	(.keys+1),hl
0031+  7FAC FD 21 3A 5C 	LD	IY, 23610
0032+  7FB0 FD 36 30 00 	LD	(IY+48),0 ;caps off
0033+  7FB4 21 4F 74    	ld	hl,msgPrompt
0034+  7FB7             	PCHARS
0034+  7FB7 CD F7 7A    >	call	Print
0035+  7FBA CD A6 7D    	call	CursorOn
0036+  7FBD FD CB 01 AE .key	RES	5, (IY+1) ;сброс флага "ANY KEY"
0037+  7FC1 FB          	ei
0038+  7FC2 76          .nokey	halt
0039+  7FC3 FD CB 01 6E 	BIT	5, (IY+1) 
0040+  7FC7 28 F9             	JR	Z,.nokey	;пока не нажмут что-либо
0041+  7FC9 3A 08 5C    	ld	a,(23560)
0042+  7FCC 47          	ld	b,a
0043+  7FCD 21 00 00    .keys	ld	hl,0
0044+  7FD0 7D          	ld	a,l
0045+  7FD1 B4          	or	h
0046+  7FD2 CA F2 7F    	jp	z,.anykey	;таблица не задана - выход
0047+  7FD5 7E          .keys1	ld	a,(hl)
0048+  7FD6 A7          	and	a
0049+  7FD7 28 E4       	jr	z,.key
0050+  7FD9 23          	inc	hl
0051+  7FDA B8          	cp	b
0052+  7FDB 28 04       	jr	z,.found
0053+  7FDD 23          	inc	hl
0054+  7FDE 23          	inc	hl
0055+  7FDF 18 F4       	jr	.keys1
0056+  7FE1 7E          .found	ld	a,(hl)
0057+  7FE2 23          	inc	hl
0058+  7FE3 66          	ld	h,(hl)
0059+  7FE4 6F          	ld	l,a
0060+  7FE5 E5          	push	hl
0061+  7FE6 CD B3 7D    	call	CursorOff
0062+  7FE9 3A 08 5C    	ld	a,(23560)
0063+  7FEC F5          	push	af
0064+  7FED CD 5A 7B    	call	PCH
0065+  7FF0 F1          	pop	af
0066+  7FF1 C9          	ret
0067+  7FF2 CD B3 7D    .anykey	call	CursorOff
0068+  7FF5 3A 08 5C    	ld	a,(23560)
0069+  7FF8 C9          	ret	
0070+  7FF9             ;--------------------------------------------------
0071+  7FF9             ;Ввод текста
0072+  7FF9             ;hl - адрес буфера
0073+  7FF9             ;a - макс количество символов
0074+  7FF9             ;Выход:
0075+  7FF9             ;hl - адрес начала буфера
0076+  7FF9             ;a - кол-во введенных симв
0077+  7FF9             ;C = 1 - выход по бряку
0078+  7FF9             ;--------------------------------------------------
0079+  7FF9             EditString
0080+  7FF9 32 A6 80    	ld	(.edMax),a
0081+  7FFC 22 A7 80    	ld	(.edBuf),hl
0082+  7FFF FD 21 3A 5C 	LD	IY, 23610
0083+  8003 E5          	push	hl
0084+  8004 D1          	pop	de
0085+  8005 13          	inc	de
0086+  8006 4F          	ld	c,a
0087+  8007 06 00       	ld	b,0
0088+  8009 36 20       	ld	(hl),32
0089+  800B ED B0       	ldir
0090+  800D AF          	xor	a
0091+  800E 32 AB 80    	ld	(.edCur),a
0092+  8011 70          	ld	(hl),b
0093+  8012 ED 5B BF 7D 	ld	de,(COORDS)
0094+  8016 ED 53 A9 80 	ld	(.edCRDS),de
0095+  801A CD B3 7D    .k2	call	CursorOff
0096+  801D             
0097+  801D ED 5B A9 80 	ld	de,(.edCRDS)
0098+  8021 ED 53 BF 7D 	ld	(COORDS),de
0099+  8025 2A A7 80    	ld	hl,(.edBuf)
0100+  8028             	PCHARS
0100+  8028 CD F7 7A    >	call	Print
0101+  802B ED 5B A9 80 	ld	de,(.edCRDS)
0102+  802F 3A AB 80    	ld	a,(.edCur)
0103+  8032 82          	add	a,d
0104+  8033 57          	ld	d,a
0105+  8034 ED 53 BF 7D 	ld	(COORDS),de
0106+  8038 CD A6 7D    	call	CursorOn
0107+  803B FD CB 01 AE .key	RES	5, (IY+1) ;сброс флага "ANY KEY"
0108+  803F FB          	ei
0109+  8040 76          .nokey	halt
0110+  8041 CD 54 1F        	call    8020
0111+  8044 30 57           	jr  nc,.break
0112+  8046 FD CB 01 6E 	BIT	5, (IY+1) 
0113+  804A 28 F4           	JR	Z,.nokey	;пока не нажмут что-либо
0114+  804C 3A 08 5C    	ld	a,(23560)
0115+  804F FE 0C       	cp	0x0c
0116+  8051 28 29       	jr	z,.del
0117+  8053 FE 0D       	cp	13
0118+  8055 28 3B       	jr	z,.enter
0119+  8057 47          	ld	b,a
0120+  8058 2A A7 80    	ld	hl,(.edBuf)
0121+  805B 3A AB 80    	ld	a,(.edCur)
0122+  805E 4F          	ld	c,a
0123+  805F 3A A6 80    	ld	a,(.edMax)
0124+  8062 B9          	cp	c
0125+  8063 28 B5       	jr	z,.k2
0126+  8065 79          	ld	a,c
0127+  8066 85          	add	a,l
0128+  8067 6F          	ld	l,a
0129+  8068 30 01       	jr	nc,.k1
0130+  806A 24          	inc	h
0131+  806B 70          .k1	ld	(hl),b
0132+  806C 3A A6 80    	ld	a,(.edMax)
0133+  806F 4F          	ld	c,a
0134+  8070 3A AB 80    	ld	a,(.edCur)
0135+  8073 B9          	cp	c
0136+  8074 30 A4       	jr	nc,.k2
0137+  8076 3C          	inc	a
0138+  8077 32 AB 80    	ld	(.edCur),a
0139+  807A 18 9E       	jr	.k2
0140+  807C 3A AB 80    .del	ld	a,(.edCur)
0141+  807F A7          	and	a
0142+  8080 28 98       	jr	z,.k2
0143+  8082 3D          	dec	a
0144+  8083 32 AB 80    	ld	(.edCur),a
0145+  8086 2A A7 80    	ld	hl,(.edBuf)
0146+  8089 85          	add	a,l
0147+  808A 6F          	ld	l,a
0148+  808B 30 01       	jr	nc,.k3
0149+  808D 24          	inc	h
0150+  808E 36 20       .k3	ld	(hl),32
0151+  8090 18 88       	jr	.k2
0152+  8092 CD B3 7D    .enter	call	CursorOff
0153+  8095 3A AB 80    	ld	a,(.edCur)
0154+  8098 2A A7 80    	ld	hl,(.edBuf)
0155+  809B A7          	and	a
0156+  809C C9          	ret
0157+  809D             .break
0158+  809D CD B3 7D    	call	CursorOff
0159+  80A0 2A A7 80        	ld  hl,(.edBuf)
0160+  80A3 AF              	xor a
0161+  80A4 37              	scf
0162+  80A5 C9              	ret    
0163+  80A6 00          .edMax	db	0	;макс символов
0164+  80A7 00 00       .edBuf	dw	0	;буфер для текста
0165+  80A9 00 00       .edCRDS	dw	0	;сохраненные координаты
0166+  80AB 00          .edCur	db	0	;тек символ
1382   80AC              ELSE
1383   80AC~              IF _TARGET=_SPRINTER
1384   80AC~            	include "libs\sprinter\console.asm"
1385   80AC~            	include	"libs\sprinter\keys.asm"
1386   80AC~              ENDIF
1387   80AC              ENDIF
1388   80AC             
1389   80AC             	include "libs\utils.asm"
0001+  80AC             ;-----------T--------------------------------------------------¬
0002+  80AC             ;¦ PRNUM    ¦ В L-число, в BC-адрес в памяти                   ¦
0003+  80AC             ;¦ PRNUM0   ¦ В HL-число, в BC-адрес в памяти                  ¦
0004+  80AC             ;¦          ¦ Регистры HL,DE,IX не изменяются                  ¦
0005+  80AC             ;+----------+--------------------------------------------------+
0006+  80AC             ;¦Пребразование 8-ми и 16-ти битных чисел в текстовый формат в ¦
0007+  80AC             ;¦системе DEC/HEX (переменная HEXDEC=0 или HEXDEC="#")         ¦
0008+  80AC             ;L--------------------------------------------------------------
0009+  80AC             
0010+  80AC D5          PRNUM		push de
0011+  80AD 1E 02       		ld   e,2
0012+  80AF 26 00       		ld   h,0
0013+  80B1 18 03       		jr   PRNUM1
0014+  80B3 D5          PRNUM0		push de
0015+  80B4 1E 04       		ld   e,4
0016+  80B6 E5          PRNUM1		push hl
0017+  80B7 3A 05 81    		ld   a,(HEXDEC_PRNUM)
0018+  80BA 02          		ld   (bc),a
0019+  80BB A7          		and  a
0020+  80BC 3A 04 81    		ld   a,(NUMFILL_PRNUM)
0021+  80BF 57          		ld   d,a
0022+  80C0 3E 0A       		ld   a,#0A
0023+  80C2 28 06       		jr   z,PRN1	;98CF
0024+  80C4 16 30       		ld   d,#30
0025+  80C6 3E 10       		ld   a,#10
0026+  80C8 1D          		dec  e
0027+  80C9 03          		inc  bc
0028+  80CA 08          PRN1		ex   af,af'	;98CF
0029+  80CB 7A          		ld   a,d
0030+  80CC 02          PRN2		ld   (bc),a
0031+  80CD 03          		inc  bc
0032+  80CE 1D          		dec  e
0033+  80CF 20 FB       		jr   nz,PRN2	;98D1
0034+  80D1 C5          PRN6		push bc		;98D6
0035+  80D2 08          		ex   af,af'
0036+  80D3 4F          		ld   c,a
0037+  80D4 08          		ex   af,af'
0038+  80D5 AF          		xor  a
0039+  80D6 11 01 00    		ld   de,#0001
0040+  80D9 CB 25       PRN4		sla  l		;98DE
0041+  80DB CB 14       		rl   h
0042+  80DD 17          		rla
0043+  80DE B9          		cp   c
0044+  80DF 38 09       		jr   c,PRN3	;98EF
0045+  80E1 91          		sub  c
0046+  80E2 CB 33       		sli  e
0047+  80E4 CB 12       		rl   d
0048+  80E6 30 F1       		jr   nc,PRN4	;98DE
0049+  80E8 18 06       		jr   PRN7	;98F5
0050+  80EA CB 23       PRN3		sla  e		;98EF
0051+  80EC CB 12       		rl   d
0052+  80EE 30 E9       		jr   nc,PRN4	;98DE
0053+  80F0 EB          PRN7		ex   de,hl	;98F5
0054+  80F1 C1          		pop  bc
0055+  80F2 FE 0A       		cp   #0A
0056+  80F4 1E 37       		ld   e,#37
0057+  80F6 30 02       		jr   nc,PRN5	;98FF
0058+  80F8 1E 30       		ld   e,#30
0059+  80FA 83          PRN5		add  a,e	;98FF
0060+  80FB 02          		ld   (bc),a
0061+  80FC 0B          		dec  bc
0062+  80FD 7C          		ld   a,h
0063+  80FE B5          		or   l
0064+  80FF 20 D0       		jr   nz,PRN6	;98D6
0065+  8101 E1          		pop  hl
0066+  8102 D1          		pop  de
0067+  8103 C9          		ret
0068+  8104 20          NUMFILL_PRNUM	DB	#20
0069+  8105 00          HEXDEC_PRNUM	DB	0	;#00 - DEC, "#" - HEX
0070+  8106             
0071+  8106             ;hl - АДРЕС РАЗМЕЩЕНИЯ
0072+  8106             ;НА ВЫХОДЕ В bc ПОЛУЧЕННОЕ ЧИСЛО
0073+  8106 E5          MRNUM 	push hl
0074+  8107 06 05       	ld b,5
0075+  8109 7E          .lp1	ld a,(hl)
0076+  810A A7          	and a
0077+  810B 28 23       	jr z,.end
0078+  810D FE 20       	cp " "
0079+  810F 28 1C       	jr z,.next
0080+  8111 FE 23       	cp "#"
0081+  8113 28 18       	jr z,.next
0082+  8115 FE 30       	cp "0"
0083+  8117 38 1A       	jr c,.err
0084+  8119 FE 39       	cp "9"
0085+  811B 38 10       	jr c,.next
0086+  811D FE 41       	cp "A"
0087+  811F 38 12       	jr c,.err
0088+  8121 FE 46       	cp "F"
0089+  8123 38 08       	jr c,.next
0090+  8125 FE 61       	cp "a"
0091+  8127 38 0A       	jr c,.err
0092+  8129 FE 67       	cp "f"+1
0093+  812B 30 06       	jr nc,.err
0094+  812D 23          .next	inc hl
0095+  812E 10 D9       	djnz .lp1
0096+  8130 E1          .end	pop hl
0097+  8131 18 06       	jr .conv
0098+  8133 E1          .err	pop hl
0099+  8134 37          	scf
0100+  8135 01 00 00    	ld bc,0
0101+  8138 C9          	ret
0102+  8139 DD 21 00 00 .conv	ld ix,0
0103+  813D 7E          CONVM1  ld a,(hl)
0104+  813E 23                  inc hl 
0105+  813F FE 22               cp "#"-1
0106+  8141 38 FA               jr c,CONVM1
0107+  8143 FE 23               cp "#"
0108+  8145 1E 0F               ld e,15
0109+  8147 28 09               jr z,CONVM2
0110+  8149 FE 25               cp "%"
0111+  814B 1E 01               ld e,1
0112+  814D 28 03               jr z,CONVM2
0113+  814F 1E 09               ld e,9
0114+  8151 2B                  dec hl 
0115+  8152 7B          CONVM2  ld a,e 
0116+  8153 32 80 81            ld (CONVB+1),a 
0117+  8156 1E FF               ld e,255
0118+  8158 E5                  push hl
0119+  8159 7E          CONVM21 ld a,(hl)
0120+  815A 23                  inc hl
0121+  815B 1C                  inc e 
0122+  815C FE 30               cp "0"
0123+  815E 30 F9               jr nc,CONVM21
0124+  8160 E1                  pop hl 
0125+  8161 7E          CONVM3  ld a,(hl) 
0126+  8162 23                  inc hl
0127+  8163 FE 3A               cp "9"+1
0128+  8165 38 08               jr c,M_0_9
0129+  8167 FE 47               cp "F"+1
0130+  8169 38 08               jr c,M_A_F
0131+  816B D6 57       M_a_f   sub "a"-10
0132+  816D 18 06               jr CONVST
0133+  816F D6 30       M_0_9   sub "0"
0134+  8171 18 02               jr CONVST
0135+  8173 D6 37       M_A_F   sub "A"-10
0136+  8175 06 00       CONVST  ld b,0
0137+  8177 4F                  ld c,a 
0138+  8178 DD 09               add ix,bc 
0139+  817A DD E5               push ix
0140+  817C C1                  pop bc 
0141+  817D 1D                  dec e 
0142+  817E C8                  ret z 
0143+  817F 3E 09       CONVB   ld a,9
0144+  8181 DD 09       CONVM4  add ix,bc 
0145+  8183 3D                  dec a 
0146+  8184 20 FB               jr nz,CONVM4
0147+  8186 18 D9               jr CONVM3
0148+  8188             
0149+  8188             ;Переводит число в A в HEX вид и помещает в HL
0150+  8188             ByteToHEX
0151+  8188 47          	ld	b,a
0152+  8189 E6 F0       	and	240
0153+  818B 0F          	rrca
0154+  818C 0F          	rrca
0155+  818D 0F          	rrca
0156+  818E 0F          	rrca
0157+  818F CD 96 81    	call	.bt3
0158+  8192 23          	inc	hl
0159+  8193 78          	ld	a,b
0160+  8194 E6 0F       	and	15
0161+  8196 FE 0A       .bt3	cp	10
0162+  8198 38 04       	jr	c,.bt1
0163+  819A C6 37       	add	a,"A"-10
0164+  819C 18 02       	jr	.bt2
0165+  819E C6 30       .bt1	add	a,"0"
0166+  81A0 77          .bt2	ld	(hl),a
0167+  81A1 C9          	ret
0168+  81A2             
0169+  81A2             ;Печатает размер в Кб, Мб, Гб. 
0170+  81A2             ;на входе
0171+  81A2             ;HL - адрес, куда поместить
0172+  81A2             ;BC:DE - число секторов, которое надо напечатать
0173+  81A2             ;A - символ "K","M","G" - до какой величины приводить число, 
0174+  81A2             ;    или 0 - приводит число до той величины, пока оно не будет занимать макс.5 знаков
0175+  81A2             PRNUMSEC
0176+  81A2 CB 38       	srl	b
0177+  81A4 CB 19       	rr	c
0178+  81A6 CB 1A       	rr	d
0179+  81A8 CB 1B       	rr	e
0180+  81AA 18 00       	jr	PRNUMBYTES
0181+  81AC             
0182+  81AC             ;Печатает размер в Кб, Мб, Гб. 
0183+  81AC             ;на входе
0184+  81AC             ;HL - адрес, куда поместить
0185+  81AC             ;BC:DE - число байт, которое надо напечатать
0186+  81AC             ;A - символ "K","M","G" - до какой величины приводить число, 
0187+  81AC             ;    или 0 - приводит число до той величины, пока оно не будет занимать макс.5 знаков
0188+  81AC             PRNUMBYTES
0189+  81AC 08          	ex	af,af'
0190+  81AD E5          	push	hl
0191+  81AE EB          	ex	de,hl
0192+  81AF 11 F7 81    	ld	de,msgMBtxt
0193+  81B2 18 10       	jr	.p3
0194+  81B4             .p2	
0195+  81B4 CB 38       	srl	b
0196+  81B6 CB 19       	rr	c
0197+  81B8 CB 1C       	rr	h
0198+  81BA CB 1D       	rr	l
0199+  81BC CB 38       	srl	b
0200+  81BE CB 19       	rr	c
0201+  81C0 CB 1C       	rr	h
0202+  81C2 CB 1D       	rr	l
0203+  81C4             ;	srl	b
0204+  81C4             ;	rr	c
0205+  81C4             ;	rr	h
0206+  81C4             ;	rr	l
0207+  81C4             .p3	
0208+  81C4 08          	ex	af,af'
0209+  81C5 A7          	and	a
0210+  81C6 28 08       	jr	z,.p6
0211+  81C8 EB          	ex	de,hl
0212+  81C9 BE          	cp	(hl)		;Дошли до нужного значения "К", "М","Г"?
0213+  81CA EB          	ex	de,hl
0214+  81CB 28 19       	jr	z,.p4
0215+  81CD 08          	ex	af,af'
0216+  81CE 18 05       	jr	.p7
0217+  81D0 08          .p6	ex	af,af'
0218+  81D1 79          	ld	a,c
0219+  81D2 B0          	or	b
0220+  81D3 28 12       	jr	z,.p1
0221+  81D5 13          .p7	inc	de
0222+  81D6 7C          	ld	a,h		;а может уже 0?
0223+  81D7 B5          	or	l
0224+  81D8 B0          	or	b
0225+  81D9 B1          	or	c
0226+  81DA 28 07       	jr	z,.p5
0227+  81DC 6C          	ld	l,h
0228+  81DD 61          	ld	h,c
0229+  81DE 48          	ld	c,b
0230+  81DF 06 00       	ld	b,0
0231+  81E1 18 D1       	jr	.p2
0232+  81E3 11 F7 81    .p5	ld	de,msgMBtxt
0233+  81E6 08          .p4	ex	af,af'
0234+  81E7             .p1
0235+  81E7 C1          	pop	bc
0236+  81E8 C5          	push	bc
0237+  81E9 CD B3 80    	call	PRNUM0
0238+  81EC E1          	pop	hl
0239+  81ED 1A          	ld	a,(de)
0240+  81EE 11 06 00    	ld	de,6
0241+  81F1 19          	add	hl,de
0242+  81F2 77          	ld	(hl),a
0243+  81F3 23          	inc	hl
0244+  81F4 36 62       	ld	(hl),"b"
0245+  81F6 C9          	ret
0246+  81F7             
0247+  81F7             msgMBtxt
0248+  81F7 4B 4D 47    	db	"KMG"
1390   81FA             	include	"fdisk_fstypes.asm"
0001+  81FA             GetFSName
0002+  81FA 21 A0 82    	ld	hl,tabFS
0003+  81FD             .g1
0004+  81FD 7E          	ld	a,(hl)
0005+  81FE A7          	and	a
0006+  81FF 28 23       	jr	z,.notfound
0007+  8201 B8          	cp	b
0008+  8202 28 08       	jr	z,.found
0009+  8204 23          .g2	inc	hl
0010+  8205 7E          	ld	a,(hl)
0011+  8206 A7          	and	a
0012+  8207 20 FB       	jr	nz,.g2
0013+  8209 23          	inc	hl
0014+  820A 18 F1       	jr	.g1
0015+  820C             ;найдено
0016+  820C 0E 10       .found	ld	c,16
0017+  820E 23          	inc	hl
0018+  820F 7E          .f1	ld	a,(hl)
0019+  8210 A7          	and	a
0020+  8211 28 08       	jr	z,.f2
0021+  8213 12          	ld	(de),a
0022+  8214 23          	inc	hl
0023+  8215 13          	inc	de
0024+  8216 0D          	dec	c
0025+  8217 20 F6       	jr	nz,.f1
0026+  8219 A7          	and	a
0027+  821A C9          	ret
0028+  821B 3E 20       .f2	ld	a,32
0029+  821D 12          .f3	ld	(de),a
0030+  821E 13          	inc	de
0031+  821F 0D          	dec	c
0032+  8220 20 FB       	jr	nz,.f3
0033+  8222 A7          	and	a
0034+  8223 C9          	ret
0035+  8224             .notfound
0036+  8224 21 95 82    	ld	hl,strUnknownFS
0037+  8227 01 0A 00    	ld	bc,10
0038+  822A ED B0       	ldir
0039+  822C 06 06       	ld	b,6
0040+  822E 3E 20       	ld	a,32
0041+  8230 12          .n1	ld	(de),a
0042+  8231 13          	inc	de
0043+  8232 10 FC       	djnz	.n1
0044+  8234 37          	scf
0045+  8235 C9          	ret
0046+  8236             
0047+  8236             ShowFSTable
0048+  8236 21 A0 82    	ld	hl,tabFS
0049+  8239 7E          .loop	ld	a,(hl)
0050+  823A A7          	and	a
0051+  823B C8          	ret	z
0052+  823C 23          	inc	hl
0053+  823D E5          	push	hl
0054+  823E 21 C9 71    	ld	hl,bufStr
0055+  8241 11 CA 71    	ld	de,bufStr+1
0056+  8244 36 20       	ld	(hl),32
0057+  8246 01 1C 00    	ld	bc,28
0058+  8249 ED B0       	ldir
0059+  824B 23          	inc	hl
0060+  824C 36 00       	ld	(hl),0
0061+  824E 6F          	ld	l,a
0062+  824F 01 CC 71    	ld	bc,bufStr+3
0063+  8252 CD AC 80    	call	PRNUM
0064+  8255 21 C9 71    	ld	hl,bufStr
0065+  8258 36 10       	ld	(hl),COL
0066+  825A 23          	inc	hl
0067+  825B 36 06       	ld	(hl),C_CMD
0068+  825D 23          	inc	hl
0069+  825E 36 5B       	ld	(hl),"["
0070+  8260 23          	inc	hl
0071+  8261 23          	inc	hl
0072+  8262 23          	inc	hl
0073+  8263 23          	inc	hl
0074+  8264 36 5D       	ld	(hl),"]"
0075+  8266 23          	inc	hl
0076+  8267 23          	inc	hl
0077+  8268 36 10       	ld	(hl),COL
0078+  826A 23          	inc	hl
0079+  826B 36 07       	ld	(hl),C_NORM
0080+  826D E1          	pop	hl
0081+  826E 11 D4 71    	ld	de,bufStr+11
0082+  8271 7E          .lp1	ld	a,(hl)
0083+  8272 23          	inc	hl
0084+  8273 A7          	and	a
0085+  8274 28 04       	jr	z,.lp2
0086+  8276 12          	ld	(de),a
0087+  8277 13          	inc	de
0088+  8278 18 F7       	jr	.lp1
0089+  827A E5          .lp2	push	hl
0090+  827B 21 C9 71    	ld	hl,bufStr
0091+  827E             	PCHARS
0091+  827E CD F7 7A    >	call	Print
0092+  8281 3E 00       	ld	a,0
0093+  8283             .sf1	equ	$-1
0094+  8283 EE 01       	xor	1
0095+  8285 32 82 82    	ld	(.sf1),a
0096+  8288 20 06       	jr	nz,.lp3
0097+  828A 21 9F 72    	ld	hl,msgCRLF
0098+  828D             	PCHARS
0098+  828D CD F7 7A    >	call	Print
0099+  8290 E1          .lp3	pop	hl
0100+  8291 18 A6       	jr	.loop
0101+  8293             
0102+  8293 20 00       strTabs	db	" ",EN
0103+  8295             strUnknownFS
0104+  8295             	db	"Unknown FS",0
0104+  8295 556E6B6E6F776E20465300
0105+  82A0             tabFS
0106+  82A0 01          	db	1
0107+  82A1             	;	"0123456789abcdef"
0108+  82A1             	db	"FAT12",0
0108+  82A1 464154313200
0109+  82A7 04          	db	4
0110+  82A8             	db	"FAT16 (<32M)",0
0110+  82A8 464154313620283C33324D2900
0111+  82B5 05          	db	5
0112+  82B6             	db	"Extended",0
0112+  82B6 457874656E64656400
0113+  82BF 06          	db	6
0114+  82C0             	db	"FAT16 (>=32M)",0
0114+  82C0 464154313620283E3D33324D2900
0115+  82CE 07          	db	7
0116+  82CF             	db	"HPFS/NTFS",0
0116+  82CF 485046532F4E54465300
0117+  82D9 0B          	db	0x0b
0118+  82DA             	db	"FAT32",0
0118+  82DA 464154333200
0119+  82E0 0C          	db	0x0c
0120+  82E1             	db	"FAT32, LBA",0
0120+  82E1 46415433322C204C424100
0121+  82EC 0E          	db	0x0e
0122+  82ED             	db	"FAT16, LBA",0
0122+  82ED 46415431362C204C424100
0123+  82F8 0F          	db	0x0f
0124+  82F9             	db	"Extended",0
0124+  82F9 457874656E64656400
0125+  8302 52          	db	0x52
0126+  8303 43502F4D00  	db	"CP/M",0
0127+  8308 53          	db	0x53
0128+  8309             	db	"MOA FS-Scorpion",0
0128+  8309 4D4F412046532D53636F7270696F6E00
0129+  8319 82          	db	0x82
0130+  831A             	db	"Linux swap",0
0130+  831A 4C696E7578207377617000
0131+  8325 83          	db	0x83
0132+  8326             	db	"Linux native",0
0132+  8326 4C696E7578206E617469766500
0133+  8333 85          	db	0x85
0134+  8334             	db	"Linux extended",0
0134+  8334 4C696E757820657874656E64656400
0135+  8343             ;Конец таблицы
0136+  8343 00          	db	0
1391   8344             	include "fdisk_dump.asm"
0001+  8344             dumpSector	
0002+  8344             ;Установим по умолчанию первый сектор винта, потом прикручу нахождение первого сектора партиции
0003+  8344             ;	ld	bc,0
0004+  8344             ;	ld	de,0
0005+  8344             dmpSector
0006+  8344             	IF _IM = 1
0007+  8344 CD 52 71    	call	IM1SET
0008+  8347             	ENDIF
0009+  8347 ED 43 3E 84 	ld	(dSectorNumHigh),bc
0010+  834B ED 53 40 84 	ld	(dSectorNumLow),de
0011+  834F D9          	exx
0012+  8350 11 00 00    	ld	de,0		;lba 32-47 == 0
0013+  8353 D9          	exx
0014+  8354 21 00 C4    	ld	hl,SectorBuffer
0015+  8357 CD 20 60    	call	hDrvEntry
0016+  835A 04          	db	4	;read single sector
0017+  835B             	IF _IM = 1
0018+  835B CD 49 71    	call	IM2SET
0019+  835E             	ENDIF
0020+  835E             dmpShowFirstPage
0021+  835E 06 00       	ld	b,0
0022+  8360 3E 10       	ld	a,16
0023+  8362             dmpShowPage
0024+  8362 C5          	push	bc
0025+  8363 F5          	push	af
0026+  8364             	CLS
0026+  8364 CD CF 7A    >	call	ClearScr
0027+  8367 ED 5B 3E 84 	ld	de,(dSectorNumHigh)
0028+  836B 7A          	ld	a,d
0029+  836C 21 9A 84    	ld	hl,msgSectorNum.num+1
0030+  836F CD 88 81    	call	ByteToHEX
0031+  8372 7B          	ld	a,e
0032+  8373 23          	inc	hl
0033+  8374 CD 88 81    	call	ByteToHEX
0034+  8377 ED 5B 40 84 	ld	de,(dSectorNumLow)
0035+  837B 7A          	ld	a,d
0036+  837C 23          	inc	hl
0037+  837D CD 88 81    	call	ByteToHEX
0038+  8380 7B          	ld	a,e
0039+  8381 23          	inc	hl
0040+  8382 CD 88 81    	call	ByteToHEX
0041+  8385 21 87 84    	ld	hl,msgSectorNum
0042+  8388             	PCHARS
0042+  8388 CD F7 7A    >	call	Print
0043+  838B F1          	pop	af
0044+  838C C1          	pop	bc
0045+  838D CD A1 83    	call	ShowDump
0046+  8390 21 AA 84    	ld	hl,msgDumpCmd
0047+  8393             	PCHARS
0047+  8393 CD F7 7A    >	call	Print
0048+  8396 21 25 85    	ld	hl,tblDumpCmd
0049+  8399 C3 A9 7F    	jp	Prompt
0050+  839C             dmpShowSecPage
0051+  839C 3E 10       	ld	a,16
0052+  839E 47          	ld	b,a
0053+  839F 18 C1       	jr	dmpShowPage
0054+  83A1             
0055+  83A1             ;Показывает дамп
0056+  83A1             ;На входе:
0057+  83A1             ;B - смещение
0058+  83A1             ;A - количество строк
0059+  83A1             ShowDump
0060+  83A1 C5          	push	bc
0061+  83A2 80          	add	a,b
0062+  83A3 32 05 84    	ld	(.sdrows),a
0063+  83A6 3E 23       	ld	a,"#"
0064+  83A8 32 05 81    	ld	(HEXDEC_PRNUM),a
0065+  83AB 2A 40 84    	ld	hl,(dSectorNumLow)
0066+  83AE 01 9D 84    	ld	bc,msgSectorNum.num+4
0067+  83B1 CD B3 80    	call	PRNUM0
0068+  83B4 2A 3E 84    	ld	hl,(dSectorNumHigh)
0069+  83B7 01 99 84    	ld	bc,msgSectorNum.num
0070+  83BA CD B3 80    	call	PRNUM0	
0071+  83BD             
0072+  83BD C1          	pop	bc
0073+  83BE             ;	ld	b,0
0074+  83BE 21 00 C4    .loop1	ld	hl,SectorBuffer
0075+  83C1 C5          	push	bc
0076+  83C2 E5          	push	hl
0077+  83C3 68          	ld	l,b
0078+  83C4 26 00       	ld	h,0
0079+  83C6 29          	add	hl,hl
0080+  83C7 29          	add	hl,hl
0081+  83C8 29          	add	hl,hl
0082+  83C9 29          	add	hl,hl
0083+  83CA 01 44 84    	ld	bc,msgDumpRow.offset
0084+  83CD CD B3 80    	call	PRNUM0
0085+  83D0 EB          	ex	de,hl
0086+  83D1 E1          	pop	hl
0087+  83D2 19          	add	hl,de
0088+  83D3 E5          	push	hl
0089+  83D4 0E 10       	ld	c,16
0090+  83D6 11 4B 84    	ld	de,msgDumpRow.dump
0091+  83D9 7E          .loop	ld	a,(hl)
0092+  83DA EB          	ex	de,hl
0093+  83DB             	;push	bc
0094+  83DB CD 88 81    	call	ByteToHEX
0095+  83DE             	;pop	bc	
0096+  83DE 23          	inc	hl
0097+  83DF CB 41       	bit	0,c
0098+  83E1 28 01       	jr	z,.lp1
0099+  83E3 23          	inc	hl
0100+  83E4 EB          .lp1	ex	de,hl
0101+  83E5 23          	inc	hl
0102+  83E6 0D          	dec	c
0103+  83E7 20 F0       	jr	nz,.loop
0104+  83E9 E1          	pop	hl
0105+  83EA 06 10       	ld	b,16
0106+  83EC 11 74 84    	ld	de,msgDumpRow.txt
0107+  83EF 7E          .lp2	ld	a,(hl)
0108+  83F0 FE 20       	cp	32
0109+  83F2 30 02       	jr	nc,.lp3
0110+  83F4 3E 3F       	ld	a,"?"
0111+  83F6 12          .lp3	ld	(de),a
0112+  83F7 23          	inc	hl
0113+  83F8 13          	inc	de
0114+  83F9 10 F4       	djnz	.lp2
0115+  83FB             ;	push	hl
0116+  83FB 21 42 84    	ld	hl,msgDumpRow
0117+  83FE             	PCHARS
0117+  83FE CD F7 7A    >	call	Print
0118+  8401             ;	pop	hl
0119+  8401 C1          	pop	bc
0120+  8402 04          	inc	b
0121+  8403 78          	ld	a,b
0122+  8404 FE 20       	cp	32
0123+  8406             .sdrows	equ	$-1
0124+  8406 DA BE 83    	jp	c,.loop1
0125+  8409 AF          	xor	a
0126+  840A 32 05 81    	ld	(HEXDEC_PRNUM),a
0127+  840D C9          	ret
0128+  840E             dmpNextSector
0129+  840E ED 4B 3E 84 	ld	bc,(dSectorNumHigh)
0130+  8412 2A 40 84    	ld	hl,(dSectorNumLow)
0131+  8415 11 01 00    	ld	de,1
0132+  8418 19          	add	hl,de
0133+  8419 EB          	ex	de,hl
0134+  841A D2 44 83    	jp	nc,dmpSector
0135+  841D 03          	inc	bc
0136+  841E C3 44 83    	jp	dmpSector
0137+  8421             dmpPrevSector
0138+  8421 ED 4B 3E 84 	ld	bc,(dSectorNumHigh)
0139+  8425 ED 5B 40 84 	ld	de,(dSectorNumLow)
0140+  8429 7B          	ld	a,e
0141+  842A B2          	or	d
0142+  842B B0          	or	b
0143+  842C B1          	or	c
0144+  842D CA 44 83    	jp	z,dmpSector
0145+  8430 EB          	ex	de,hl
0146+  8431 11 01 00    	ld	de,1
0147+  8434 ED 52       	sbc	hl,de
0148+  8436 EB          	ex	de,hl
0149+  8437 D2 44 83    	jp	nc,dmpSector
0150+  843A 0B          	dec	bc
0151+  843B C3 44 83    	jp	dmpSector
0152+  843E             dSectorNumHigh
0153+  843E 00 00       	dw	0
0154+  8440             dSectorNumLow
0155+  8440 00 00       	dw	0
0156+  8442             msgDumpRow
0157+  8442 10 04       	db	COL,C_DMP
0158+  8444             .offset	db	"#0000  "
0158+  8444 23303030302020
0159+  844B             .dump	db	"0000 0000 0000 0000 0000 0000 0000 0000  "
0159+  844B 3030303020303030302030303030203030303020303030302030303030203030
0159+  846B 303020303030302020
0160+  8474             .txt	db	"0123456789ABCDEF",COL,C_NORM
0160+  8474 303132333435363738394142434445461007
0161+  8486              IF _TARGET = _SPRINTER | _TARGET=_ATM
0162+  8486~            	db	CR,LF
0163+  8486              ENDIF
0164+  8486 00          	db	EN
0165+  8487             
0166+  8487             msgSectorNum
0167+  8487             	db	"Sector number: ",COL,C_VAL,"["
0167+  8487 536563746F72206E756D6265723A2010055B
0168+  8499             .num	db	"#00000000]",COL,C_NORM,CR,LF,CR,LF,EN
0168+  8499 2330303030303030305D10070D0A0D0A00
0169+  84AA             msgDumpCmd
0170+  84AA             	db	CR,LF,"Select command: ",COL,C_CMD,"[1] ",COL,C_NORM,"- First page ",COL,C_CMD,"[2] ",COL,C_NORM,"- Second page ",COL,C_CMD,"[P] ",COL,C_NORM,"- Prev. sector ",COL,C_CMD,"[N] ",COL,C_NORM,"- Next sector ",COL,C_CMD,"[Q] ",COL,C_NORM,"- Quit",CR,LF,EN
0170+  84AA 0D0A53656C65637420636F6D6D616E643A2010065B315D2010072D2046697273
0170+  84CA 7420706167652010065B325D2010072D205365636F6E6420706167652010065B
0170+  84EA 505D2010072D20507265762E20736563746F722010065B4E5D2010072D204E65
0170+  850A 787420736563746F722010065B515D2010072D20517569740D0A00
0171+  8525             tblDumpCmd
0172+  8525 31          	db	"1"
0173+  8526 5E 83       	dw	dmpShowFirstPage
0174+  8528 32          	db	"2"
0175+  8529 9C 83       	dw	dmpShowSecPage
0176+  852B 71          	db	"q"
0177+  852C 71 6D       	dw	ShowPartition.continue
0178+  852E 70          	db	"p"
0179+  852F 21 84       	dw	dmpPrevSector
0180+  8531 6E          	db	"n"
0181+  8532 0E 84       	dw	dmpNextSector
1392   8534             	include	"fdisk_crmbrt.asm"
0001+  8534             ;создание в ОЗУ таблицы разделов выбранного винта
0002+  8534             ;MBRTableFields:
0003+  8534             ;+0	4bytes	LBA offset
0004+  8534             ;+4	1	number of field in table
0005+  8534             ;+5	16	Partition Table Entry
0006+  8534             ;+21	11	Метка тома, если определена
0007+  8534             
0008+  8534             CreateMBRTable
0009+  8534 AF          	xor	a
0010+  8535 32 EC 86    	ld	(chMBRTable),a	;флаг изменений MBR-таблицы
0011+  8538 32 A1 71    	ld	(partCount),a
0012+  853B             ;clear table
0013+  853B 21 00 9E    	ld	hl,MBRTable
0014+  853E 11 01 9E    	ld	de,MBRTable+1
0015+  8541 77          	ld	(hl),a
0016+  8542 01 DF 01    	ld	bc,MAXMBRFIELDS*MBRFIELDSIZE-1
0017+  8545 ED B0       	ldir
0018+  8547             
0019+  8547 21 00 C4    	ld	hl,SectorBuffer
0020+  854A D9          	exx
0021+  854B 11 00 00    	ld	de,0	; lba 32-48 == 0
0022+  854E D9          	exx
0023+  854F 11 00 00    	ld	de,0
0024+  8552 01 00 00    	ld	bc,0
0025+  8555 ED 43 E8 86 	ld	(cLBAhigh),bc
0026+  8559 ED 53 EA 86 	ld	(cLBAlow),de
0027+  855D             	IF _IM = 1
0028+  855D CD 52 71    	call	IM1SET
0029+  8560             	ENDIF
0030+  8560 CD 20 60    	call	hDrvEntry	;чтение 1го сектора с диска
0031+  8563 04          	db	4
0032+  8564             	IF _IM = 1
0033+  8564 CD 49 71    	call	IM2SET
0034+  8567             	ENDIF
0035+  8567 2A FE C5    	ld	hl,(SectorBuffer+510)
0036+  856A 11 55 AA    	ld	de,#AA55
0037+  856D A7          	and	a
0038+  856E ED 52       	sbc	hl,de
0039+  8570 3E FF       	ld	a,255
0040+  8572 37          	scf
0041+  8573 C0          	ret	nz	;неправильная сигнатура BR
0042+  8574 DD 21 BE C5 	ld	ix,SectorBuffer+0x01be	;начало таблицы разделов в MBR секторе
0043+  8578 06 04       	ld	b,4
0044+  857A 0E 00       	ld	c,0
0045+  857C CD 0B 86    .lp1	call	CheckTableEntry
0046+  857F 38 08       	jr	c,.exit		;CY =1 если таблица закончилась
0047+  8581 11 10 00    	ld	de,16
0048+  8584 DD 19       	add	ix,de
0049+  8586 0C          	inc	c
0050+  8587 10 F3       	djnz	.lp1
0051+  8589             .exit	
0052+  8589             ;рекурсивно проверяем таблицу на предмет расширенных партиций и считываем инфу из них...
0053+  8589 DD 21 00 9E 	ld	ix,MBRTable
0054+  858D             .searchext
0055+  858D DD 7E 09    	ld	a,(ix+9)	;Partition type descriptor
0056+  8590 A7          	and	a
0057+  8591 28 73       	jr	z,.exit2
0058+  8593 FE 05       	cp	5
0059+  8595 28 04       	jr	z,.extend1
0060+  8597 FE 0F       	cp	15
0061+  8599 20 64       	jr	nz,.noext1
0062+  859B             .extend1
0063+  859B             ;рассчет смещения сектора относительно текущего
0064+  859B DD 6E 00    	ld	l,(ix)
0065+  859E DD 66 01    	ld	h,(ix+1)
0066+  85A1             	
0067+  85A1 DD 5E 0D    	ld	e,(ix+13)
0068+  85A4 DD 56 0E    	ld	d,(ix+14)
0069+  85A7 A7          	and	a
0070+  85A8 19          	add	hl,de
0071+  85A9 01 00 00    	ld	bc,0
0072+  85AC 30 03       	jr	nc,.e1
0073+  85AE 01 01 00    	ld	bc,1
0074+  85B1 EB          .e1	ex	de,hl
0075+  85B2 DD 6E 02    	ld	l,(ix+2)
0076+  85B5 DD 66 03    	ld	h,(ix+3)
0077+  85B8 09          	add	hl,bc		;увеличиваем на 1, если был перенос из младшего слова
0078+  85B9 DD 4E 0F    	ld	c,(ix+15)
0079+  85BC DD 46 10    	ld	b,(ix+16)
0080+  85BF 09          	add	hl,bc
0081+  85C0 E5          	push	hl
0082+  85C1 C1          	pop	bc
0083+  85C2 D9          	exx
0084+  85C3 11 00 00    	ld	de,0		;lba 32-48 == 0
0085+  85C6 D9          	exx
0086+  85C7 ED 43 E8 86 	ld	(cLBAhigh),bc
0087+  85CB ED 53 EA 86 	ld	(cLBAlow),de
0088+  85CF             	IF _IM = 1
0089+  85CF CD 52 71    	call	IM1SET
0090+  85D2             	ENDIF
0091+  85D2 21 00 C4    	ld	hl,SectorBuffer
0092+  85D5 CD 20 60    	call	hDrvEntry	;чтение 1го сектора с диска
0093+  85D8 04          	db	4
0094+  85D9             	IF _IM = 1
0095+  85D9 CD 49 71    	call	IM2SET
0096+  85DC             	ENDIF
0097+  85DC 2A FE C5    	ld	hl,(SectorBuffer+510)
0098+  85DF 11 55 AA    	ld	de,#AA55
0099+  85E2 A7          	and	a
0100+  85E3 ED 52       	sbc	hl,de
0101+  85E5 20 18       	jr	nz,.noext1
0102+  85E7 DD E5       	push	ix
0103+  85E9 01 00 02    	ld	bc,2*256
0104+  85EC DD 21 BE C5 	ld	ix,SectorBuffer+0x01be	;начало таблицы разделов в EBR секторе
0105+  85F0 CD 0B 86    .lp2	call	CheckTableEntry
0106+  85F3 38 08       	jr	c,.endext
0107+  85F5 11 10 00    	ld	de,16
0108+  85F8 DD 19       	add	ix,de
0109+  85FA 0C          	inc	c
0110+  85FB 10 F3       	djnz	.lp2
0111+  85FD DD E1       .endext	pop	ix
0112+  85FF 11 20 00    .noext1	ld	de,MBRFIELDSIZE
0113+  8602 DD 19       	add	ix,de
0114+  8604 18 87       	jr	.searchext
0115+  8606 3A A1 71    .exit2	ld	a,(partCount)
0116+  8609 A7          	and	a
0117+  860A C9          	ret
0118+  860B             ;Проверяет запись в таблице MBR, на которую ссылается HL, если она соответствует требованиям, то копирует в таблицу в ОЗУ
0119+  860B             ;hl - адрес записи
0120+  860B             CheckTableEntry
0121+  860B DD 7E 00    	ld	a,(ix)
0122+  860E A7          	and	a
0123+  860F 28 04       	jr	z,.n1
0124+  8611 FE 80       	cp	0x80
0125+  8613 37          	scf
0126+  8614 C0          	ret	nz
0127+  8615 DD 7E 04    .n1	ld	a,(ix+4)	;Partition type descriptor
0128+  8618 A7          	and	a
0129+  8619 37          	scf
0130+  861A C8          	ret	z
0131+  861B 3A A1 71    	ld	a,(partCount)
0132+  861E 11 20 00    	ld	de,MBRFIELDSIZE
0133+  8621 21 00 9E    	ld	hl,MBRTable
0134+  8624 A7          	and	a
0135+  8625 28 04       	jr	z,.n2
0136+  8627 19          .n3	add	hl,de
0137+  8628 3D          	dec	a
0138+  8629 20 FC       	jr	nz,.n3
0139+  862B ED 5B EA 86 .n2	ld	de,(cLBAlow)
0140+  862F 73          	ld	(hl),e
0141+  8630 23          	inc	hl
0142+  8631 72          	ld	(hl),d
0143+  8632 23          	inc	hl
0144+  8633 ED 5B E8 86 	ld	de,(cLBAhigh)
0145+  8637 73          	ld	(hl),e
0146+  8638 23          	inc	hl
0147+  8639 72          	ld	(hl),d
0148+  863A 23          	inc	hl
0149+  863B 71          	ld	(hl),c
0150+  863C 23          	inc	hl
0151+  863D DD E5       	push	ix
0152+  863F D1          	pop	de
0153+  8640 EB          	ex	de,hl
0154+  8641 C5          	push	bc
0155+  8642 01 10 00    	ld	bc,16
0156+  8645 ED B0       	ldir
0157+  8647 DD 7E 04    	ld	a,(ix+4)
0158+  864A             ;определение метки тома
0159+  864A 21 DD 86    	ld	hl,txtExtended
0160+  864D FE 05       	cp	5
0161+  864F 28 75       	jr	z,.n4
0162+  8651 FE 0F       	cp	15
0163+  8653 28 71       	jr	z,.n4
0164+  8655 FE 01       	cp	1
0165+  8657 28 17       	jr	z,.n5
0166+  8659 FE 04       	cp	4
0167+  865B 28 13       	jr	z,.n5
0168+  865D FE 06       	cp	6
0169+  865F 28 0F       	jr	z,.n5
0170+  8661             ;	cp	7	;NTFS
0171+  8661             ;	jr	z,.n5	;
0172+  8661 FE 0B       	cp	0x0b
0173+  8663 28 0B       	jr	z,.n5
0174+  8665 FE 0C       	cp	0x0c
0175+  8667 28 07       	jr	z,.n5
0176+  8669 FE 0E       	cp	0x0e
0177+  866B 21 D2 86    	ld	hl,txtNoLabel
0178+  866E 20 56       	jr	nz,.n4
0179+  8670 D5          .n5	push	de
0180+  8671             ;рассчитываем начальный сектор раздела
0181+  8671 DD 5E 08    	ld	e,(ix+8)
0182+  8674 DD 56 09    	ld	d,(ix+9)
0183+  8677 2A EA 86    	ld	hl,(cLBAlow)
0184+  867A 19          	add	hl,de
0185+  867B EB          	ex	de,hl	
0186+  867C 2A E8 86    	ld	hl,(cLBAhigh)
0187+  867F DD 4E 0A    	ld	c,(ix+10)
0188+  8682 DD 46 0B    	ld	b,(ix+11)
0189+  8685 ED 4A       	adc	hl,bc
0190+  8687 E5          	push	hl
0191+  8688 C1          	pop	bc
0192+  8689 D9          	exx
0193+  868A 11 00 00    	ld	de,0		;lba 32-47 == 0
0194+  868D D9          	exx
0195+  868E             	IF _IM = 1
0196+  868E CD 52 71    	call	IM1SET
0197+  8691             	ENDIF
0198+  8691 21 00 C6    	ld	hl,SectorBuffer1
0199+  8694 CD 20 60    	call	hDrvEntry
0200+  8697 04          	db	4	;Читаем первый сектор раздела FAT, чтоб узнать название тома
0201+  8698             	IF _IM = 1
0202+  8698 CD 49 71    	call	IM2SET
0203+  869B             	ENDIF
0204+  869B 2A FE C7    	ld	hl,(SectorBuffer1+510)
0205+  869E 11 55 AA    	ld	de,#aa55	;проверяем сигнатуру boot-sector-а
0206+  86A1 A7          	and	a
0207+  86A2 ED 52       	sbc	hl,de
0208+  86A4 21 D2 86    	ld	hl,txtNoLabel
0209+  86A7 20 1C       	jr	nz,.n6
0210+  86A9 2A 36 C6    	ld	hl,(SectorBuffer1+54)	;FAT12/16?
0211+  86AC 11 46 41    	ld	de,0x4146	;"FA" от сигнатуры FAT
0212+  86AF A7          	and	a
0213+  86B0 ED 52       	sbc	hl,de
0214+  86B2 21 2B C6    	ld	hl,SectorBuffer1+43
0215+  86B5 28 0E       	jr	z,.n6
0216+  86B7 2A 52 C6    	ld	hl,(SectorBuffer1+82)
0217+  86BA A7          	and	a
0218+  86BB ED 52       	sbc	hl,de
0219+  86BD 21 D2 86    	ld	hl,txtNoLabel
0220+  86C0 20 03       	jr	nz,.n6
0221+  86C2 21 47 C6    	ld	hl,SectorBuffer1+71
0222+  86C5 D1          .n6	pop	de
0223+  86C6 01 0B 00    .n4	ld	bc,11
0224+  86C9 ED B0       	ldir
0225+  86CB C1          	pop	bc
0226+  86CC 21 A1 71    	ld	hl,partCount
0227+  86CF 34          	inc	(hl)
0228+  86D0 A7          	and	a
0229+  86D1 C9          	ret
0230+  86D2             txtNoLabel
0231+  86D2             	db	"<NO LABEL> "	;текст по-умолчанию
0231+  86D2 3C4E4F204C4142454C3E20
0232+  86DD             txtExtended
0233+  86DD             	db	"Extended   "	;текст для расширенного раздела
0233+  86DD 457874656E646564202020
0234+  86E8             cLBAhigh
0235+  86E8 00 00       	dw	0	;текущая позиция головки (для определения расположения текущей таблицы)
0236+  86EA 00 00       cLBAlow	dw	0
0237+  86EC             chMBRTable
0238+  86EC 00          	db	0	;флаг изменений MBR-таблицы
0239+  86ED             ;partCount
0240+  86ED             ;	db	0	;количество записей
1393   86ED             	include	"fdisk_func.asm"
0001+  86ED             ;---------------------------------------------------------
0002+  86ED             ;	Удаление одной строки из таблицы разделов
0003+  86ED             ;---------------------------------------------------------
0004+  86ED             ;на входе A - номер записи
0005+  86ED             ;на выходе CY = 1 - таблица пуста
0006+  86ED             DelRowFromMBR
0007+  86ED 08          	ex	af,af'
0008+  86EE 3A A1 71    	ld	a,(partCount)
0009+  86F1 37          	scf
0010+  86F2 A7          	and	a
0011+  86F3 C8          	ret	z
0012+  86F4 08          	ex	af,af'
0013+  86F5 F5          	push	af
0014+  86F6 11 20 00    	ld	de,MBRFIELDSIZE
0015+  86F9 21 00 9E    	ld	hl,MBRTable
0016+  86FC A7          	and	a
0017+  86FD 28 04       	jr	z,.skip1
0018+  86FF 19          .n1	add	hl,de
0019+  8700 3D          	dec	a
0020+  8701 20 FC       	jr	nz,.n1
0021+  8703 E5          .skip1	push	hl	;текущая запись
0022+  8704 19          	add	hl,de	;следующая запись
0023+  8705 D1          	pop	de
0024+  8706             ;рассчитываем количество записей, которые идут после указанной
0025+  8706 C1          	pop	bc
0026+  8707 04          	inc	b
0027+  8708 3E 0F       	ld	a,MAXMBRFIELDS
0028+  870A 90          	sub	b
0029+  870B A7          	and	a
0030+  870C 28 10       	jr	z,.null
0031+  870E D9          	exx
0032+  870F 11 20 00    	ld	de,MBRFIELDSIZE
0033+  8712 21 00 00    	ld	hl,0
0034+  8715 19          .n2	add	hl,de
0035+  8716 3D          	dec	a
0036+  8717 20 FC       	jr	nz,.n2
0037+  8719 E5          	push	hl
0038+  871A D9          	exx
0039+  871B C1          	pop	bc
0040+  871C ED B0       	ldir		;перемещаем блок на одну запись вверх по таблице
0041+  871E 21 A1 71    .null	ld	hl,partCount
0042+  8721 35          	dec	(hl)
0043+  8722 C9          	ret
0044+  8723             
0045+  8723             ;---------------------------------------------------------
0046+  8723             ;	Определение свободного места на винте
0047+  8723             ;	(вызывать после GetHDDPar)
0048+  8723             ;---------------------------------------------------------
0049+  8723             CalcUnused
0050+  8723 3A A1 71    	ld	a,(partCount)
0051+  8726 DD 21 00 9E 	ld	ix,MBRTable
0052+  872A 11 20 00    	ld	de,MBRFIELDSIZE
0053+  872D A7          	and	a
0054+  872E 28 07       	jr	z,.cu1
0055+  8730 18 02       	jr	.cu3
0056+  8732 DD 19       .cu2	add	ix,de
0057+  8734 3D          .cu3	dec	a
0058+  8735 20 FB       	jr	nz,.cu2
0059+  8737             .cu1
0060+  8737             ;Расчет номера первого сектора раздела
0061+  8737 DD 6E 00    	ld	l,(ix)
0062+  873A DD 66 01    	ld	h,(ix+1)
0063+  873D             	
0064+  873D DD 5E 0D    	ld	e,(ix+13)
0065+  8740 DD 56 0E    	ld	d,(ix+14)
0066+  8743 A7          	and	a
0067+  8744 19          	add	hl,de
0068+  8745 EB          	ex	de,hl
0069+  8746 DD 6E 02    	ld	l,(ix+2)
0070+  8749 DD 66 03    	ld	h,(ix+3)
0071+  874C DD 4E 0F    	ld	c,(ix+15)
0072+  874F DD 46 10    	ld	b,(ix+16)
0073+  8752 ED 4A       	adc	hl,bc
0074+  8754 E5          	push	hl
0075+  8755 C1          	pop	bc
0076+  8756             ;в BC:DE номер первого сектора раздела
0077+  8756 DD 6E 11    	ld	l,(ix+17)
0078+  8759 DD 66 12    	ld	h,(ix+18)
0079+  875C A7          	and	a
0080+  875D 19          	add	hl,de
0081+  875E EB          	ex	de,hl
0082+  875F DD 6E 13    	ld	l,(ix+19)
0083+  8762 DD 66 14    	ld	h,(ix+20)
0084+  8765 ED 4A       	adc	hl,bc
0085+  8767 E5          	push	hl
0086+  8768 C1          	pop	bc
0087+  8769             ;в BC:DE номер сектора, следующий за последним разделом
0088+  8769 2A A9 71    	ld	hl,(hddTotalSector+2)
0089+  876C A7          	and	a
0090+  876D ED 42       	sbc	hl,bc
0091+  876F E5          	push	hl
0092+  8770 C1          	pop	bc
0093+  8771 2A A7 71    	ld	hl,(hddTotalSector)
0094+  8774 ED 52       	sbc	hl,de
0095+  8776 EB          	ex	de,hl
0096+  8777 C9          	ret
0097+  8778             
0098+  8778             ShowMBRUS
0099+  8778 DD 21 E0 9F 	ld	ix,MBRUSTable
0100+  877C 11 08 00    	ld	de,MBRUSFIELDSIZE
0101+  877F 3A AE 71    	ld	a,(cntMBRUS)
0102+  8782 A7          	and	a
0103+  8783 37          	scf
0104+  8784 C8          	ret	z
0105+  8785 06 00       	ld	b,0
0106+  8787 4F          	ld	c,a
0107+  8788 CD 92 87    .n1	call	ShowMBRUSRow
0108+  878B DD 19       	add	ix,de
0109+  878D 04          	inc	b
0110+  878E 0D          	dec	c
0111+  878F 20 F7       	jr	nz,.n1
0112+  8791 C9          	ret
0113+  8792             
0114+  8792             ;--------------------------------------------------
0115+  8792             ;отображает строку со свободным местом на диске
0116+  8792             ;в IX - строка в таблице MBRUSTable
0117+  8792             ;в C - номер строки
0118+  8792             ;--------------------------------------------------
0119+  8792             ShowMBRUSRow
0120+  8792 C5          	push	bc
0121+  8793 D5          	push	de
0122+  8794 68          	ld	l,b
0123+  8795 2C          	inc	l
0124+  8796 01 E7 8C    	ld	bc,msgMBRUSRow.num
0125+  8799 CD AC 80    	call	PRNUM
0126+  879C             ;печать начала
0127+  879C 21 F0 8C    	ld	hl,msgMBRUSRow.start
0128+  879F DD 7E 03    	ld	a,(ix+3)
0129+  87A2 CD 88 81    	call	ByteToHEX
0130+  87A5 23          	inc	hl
0131+  87A6 DD 7E 02    	ld	a,(ix+2)
0132+  87A9 CD 88 81    	call	ByteToHEX
0133+  87AC 23          	inc	hl
0134+  87AD DD 7E 01    	ld	a,(ix+1)
0135+  87B0 CD 88 81    	call	ByteToHEX
0136+  87B3 23          	inc	hl
0137+  87B4 DD 7E 00    	ld	a,(ix+0)
0138+  87B7 CD 88 81    	call	ByteToHEX
0139+  87BA             ;печать длины	
0140+  87BA 21 F9 8C    	ld	hl,msgMBRUSRow.len
0141+  87BD DD 7E 07    	ld	a,(ix+7)
0142+  87C0 CD 88 81    	call	ByteToHEX
0143+  87C3 23          	inc	hl
0144+  87C4 DD 7E 06    	ld	a,(ix+6)
0145+  87C7 CD 88 81    	call	ByteToHEX
0146+  87CA 23          	inc	hl
0147+  87CB DD 7E 05    	ld	a,(ix+5)
0148+  87CE CD 88 81    	call	ByteToHEX
0149+  87D1 23          	inc	hl
0150+  87D2 DD 7E 04    	ld	a,(ix+4)
0151+  87D5 CD 88 81    	call	ByteToHEX
0152+  87D8             ;из объема в секторах получаем объем в мб, гб
0153+  87D8 DD 5E 04    	ld	e,(ix+4)
0154+  87DB DD 56 05    	ld	d,(ix+5)
0155+  87DE DD 4E 06    	ld	c,(ix+6)
0156+  87E1 DD 46 07    	ld	b,(ix+7)
0157+  87E4 21 02 8D    	ld	hl,msgMBRUSRow.lenbytes
0158+  87E7 3E 4D       	ld	a,"M"
0159+  87E9 CD A2 81    	call	PRNUMSEC
0160+  87EC 21 E4 8C    	ld	hl,msgMBRUSRow
0161+  87EF             	PCHARS
0161+  87EF CD F7 7A    >	call	Print
0162+  87F2 D1          	pop	de
0163+  87F3 C1          	pop	bc
0164+  87F4 C9          	ret
0165+  87F5             
0166+  87F5             CreateMBRUSforPRI
0167+  87F5 AF          	xor	a
0168+  87F6 32 AE 71    	ld	(cntMBRUS),a
0169+  87F9 21 E0 9F    	ld	hl,MBRUSTable
0170+  87FC 22 DE 8C    	ld	(tMBRUS),hl
0171+  87FF 11 E1 9F    	ld	de,MBRUSTable+1
0172+  8802 01 3F 00    	ld	bc,(MAXMBRUS*MBRUSFIELDSIZE)-1
0173+  8805 77          	ld	(hl),a
0174+  8806 ED B0       	ldir
0175+  8808 3A A1 71    	ld	a,(partCount)
0176+  880B A7          	and	a
0177+  880C CA 27 8B    	jp	z,CreateMBRUS.hddclear	;нет разделов
0178+  880F             ;Проверим, может быть первый раздел в таблице не с самого начала диска
0179+  880F DD 21 00 9E 	ld	ix,MBRTable
0180+  8813 AF          .cr00	xor	a
0181+  8814 DD B6 0E    	or	(ix+14)
0182+  8817 DD B6 0F    	or	(ix+15)
0183+  881A DD B6 10    	or	(ix+16)
0184+  881D             ;если старшие 3 байта начала партиции !=0, то партиция не в начале диска
0185+  881D             
0186+  881D             ;	ld	e,(ix+13)
0187+  881D             ;	ld	d,(ix+14)
0188+  881D             ;	ld	c,(ix+15)
0189+  881D             ;	ld	b,(ix+16)
0190+  881D 28 25       	jr	z,.cr01
0191+  881F DD 6E 0D    	ld	l,(ix+13)
0192+  8822 DD 66 0E    	ld	h,(ix+14)
0193+  8825 3A A6 71    	ld	a,(hddSectors)
0194+  8828 5F          	ld	e,a
0195+  8829 16 00       	ld	d,0
0196+  882B A7          	and	a
0197+  882C ED 52       	sbc	hl,de
0198+  882E EB          	ex	de,hl
0199+  882F DD 4E 0F    	ld	c,(ix+15)
0200+  8832 DD 46 10    	ld	b,(ix+16)
0201+  8835 30 01       	jr	nc,.cr02
0202+  8837 0B          	dec	bc
0203+  8838 D9          .cr02	exx
0204+  8839 3A A6 71    	ld	a,(hddSectors)
0205+  883C 5F          	ld	e,a
0206+  883D 16 00       	ld	d,0
0207+  883F 42          	ld	b,d
0208+  8840 4A          	ld	c,d
0209+  8841 CD 5A 8B    	call	addMBRUSItem
0210+  8844             
0211+  8844 DD 21 00 9E .cr01	ld	ix,MBRTable
0212+  8848             ;определяем свободное место среди примари разделов
0213+  8848 DD E5       .cr0	push	ix
0214+  884A CD 9D 8C    	call	NextPrimary
0215+  884D DD E5       	push	ix
0216+  884F FD E1       	pop	iy
0217+  8851 DD E1       	pop	ix
0218+  8853             ;ix	- curr primary
0219+  8853             ;iy	- next primary
0220+  8853 DA CD 88    	jp	c,.nextcheck
0221+  8856             
0222+  8856 DD 6E 00    	ld	l,(ix)
0223+  8859 DD 66 01    	ld	h,(ix+1)
0224+  885C             	
0225+  885C DD 5E 0D    	ld	e,(ix+13)
0226+  885F DD 56 0E    	ld	d,(ix+14)
0227+  8862 A7          	and	a
0228+  8863 19          	add	hl,de
0229+  8864 EB          	ex	de,hl
0230+  8865 DD 6E 02    	ld	l,(ix+2)
0231+  8868 DD 66 03    	ld	h,(ix+3)
0232+  886B DD 4E 0F    	ld	c,(ix+15)
0233+  886E DD 46 10    	ld	b,(ix+16)
0234+  8871 ED 4A       	adc	hl,bc
0235+  8873 E5          	push	hl
0236+  8874 C1          	pop	bc
0237+  8875             ;в BC:DE номер первого сектора раздела
0238+  8875 DD 6E 11    	ld	l,(ix+17)	;Размер раздела
0239+  8878 DD 66 12    	ld	h,(ix+18)
0240+  887B A7          	and	a
0241+  887C 19          	add	hl,de
0242+  887D E5          	push	hl		;младшее слово в стек
0243+  887E             
0244+  887E DD 6E 13    	ld	l,(ix+19)
0245+  8881 DD 66 14    	ld	h,(ix+20)
0246+  8884 ED 4A       	adc	hl,bc
0247+  8886 EB          	ex	de,hl		;старшее слово в DE
0248+  8887             ;рассчитали след. сектор за разделом
0249+  8887             
0250+  8887 FD 6E 00    	ld	l,(iy)
0251+  888A FD 66 01    	ld	h,(iy+1)
0252+  888D             	
0253+  888D FD 4E 0D    	ld	c,(iy+13)
0254+  8890 FD 46 0E    	ld	b,(iy+14)
0255+  8893 A7          	and	a
0256+  8894 09          	add	hl,bc
0257+  8895 E5          	push	hl		;младшее слово в стек
0258+  8896 FD 6E 02    	ld	l,(iy+2)
0259+  8899 FD 66 03    	ld	h,(iy+3)
0260+  889C FD 4E 0F    	ld	c,(iy+15)
0261+  889F FD 46 10    	ld	b,(iy+16)
0262+  88A2 ED 4A       	adc	hl,bc		;старшее слово начала след. раздела
0263+  88A4 A7          	and	a
0264+  88A5 ED 52       	sbc	hl,de		;
0265+  88A7 28 14       	jr	z,.cr1		;старшие слова совпадают?
0266+  88A9             ;не совпадают
0267+  88A9             ;CY = 1 - первый раздел "налазит" на второй
0268+  88A9 38 0C       	jr	c,.incorrect1
0269+  88AB             ;CY = 0	- есть свободное место между разделами
0270+  88AB E5          .cr5	push	hl
0271+  88AC C1          	pop	bc
0272+  88AD E1          	pop	hl
0273+  88AE D1          	pop	de
0274+  88AF ED 52       	sbc	hl,de
0275+  88B1 EB          .cr52	ex	de,hl		;размер свободного участка в BC:DE
0276+  88B2 CD B4 8B    	call	addMBRUS
0277+  88B5             
0278+  88B5 18 0F       	jr	.cr2		;продолжаем
0279+  88B7             .incorrect1
0280+  88B7 21 0D 8D    	ld	hl,msgIncorrect
0281+  88BA             	PCHARS
0281+  88BA CD F7 7A    >	call	Print
0282+  88BD             ;	скипаем и переходим к след.паре
0283+  88BD             ;	jr .cr1	
0284+  88BD             
0285+  88BD E1          .cr1	pop	hl
0286+  88BE D1          	pop	de
0287+  88BF A7          	and	a
0288+  88C0 ED 52       	sbc	hl,de
0289+  88C2 28 02       	jr	z,.cr2		;конец первого раздела указывает на начало второго?
0290+  88C4             ;нет!
0291+  88C4             ;CY = 1 - первый раздел "налазит" на второй
0292+  88C4             ;CY = 0	- есть свободное место между разделами
0293+  88C4 30 EB       	jr	nc,.cr52
0294+  88C6 FD E5       .cr2	push	iy	;проверяем следующую пару
0295+  88C8 DD E1       	pop	ix
0296+  88CA C3 48 88    	jp	.cr0
0297+  88CD             .nextcheck
0298+  88CD             ;Определяем свободный участок после последнего примари раздела
0299+  88CD             ;в IX - адрес последнего примари раздела
0300+  88CD DD 7E 09    	ld	a,(ix+9)
0301+  88D0 A7          	and	a
0302+  88D1 CA 27 8B    	jp	z,CreateMBRUS.hddclear
0303+  88D4 DD 6E 00    	ld	l,(ix)		;первый сектор раздела
0304+  88D7 DD 66 01    	ld	h,(ix+1)
0305+  88DA DD 4E 0D    	ld	c,(ix+13)	;длина раздела
0306+  88DD DD 46 0E    	ld	b,(ix+14)
0307+  88E0 A7          	and	a
0308+  88E1 09          	add	hl,bc
0309+  88E2 E5          	push	hl		;младшее слово в стек
0310+  88E3 DD 6E 02    	ld	l,(ix+2)	;старшее слово первого сектора раздела
0311+  88E6 DD 66 03    	ld	h,(ix+3)
0312+  88E9 DD 4E 0F    	ld	c,(ix+15)	;старшее слово размера раздела
0313+  88EC DD 46 10    	ld	b,(ix+16)
0314+  88EF ED 4A       	adc	hl,bc		;старшее слово начала след. раздела
0315+  88F1 EB          	ex	de,hl
0316+  88F2 2A A7 71    	ld	hl,(hddTotalSector)
0317+  88F5 A7          	and	a
0318+  88F6 C1          	pop	bc
0319+  88F7 ED 42       	sbc	hl,bc
0320+  88F9 E5          	push	hl
0321+  88FA 2A A9 71    	ld	hl,(hddTotalSector+2)
0322+  88FD ED 52       	sbc	hl,de
0323+  88FF D1          	pop	de
0324+  8900 7C          	ld	a,h
0325+  8901 B5          	or	l
0326+  8902 B2          	or	d
0327+  8903 B3          	or	e
0328+  8904 CA EC 8A    	jp	z,CreateMBRUS.countunused
0329+  8907             	;ex	de,hl
0330+  8907             	;в hl:de размер области от начала предыдущего раздела до конца диска
0331+  8907             ;	push	bc
0332+  8907 EB          	ex	de,hl
0333+  8908             	;в hl мл. слово размера области
0334+  8908 DD 4E 11    	ld	c,(ix+0x0c+5)	;размер партиции мл.слово
0335+  890B DD 46 12    	ld	b,(ix+0x0d+5)	;размер партиции мл.слово
0336+  890E A7          	and	a
0337+  890F ED 42       	sbc	hl,bc
0338+  8911 EB          	ex	de,hl
0339+  8912             ;	push	bc
0340+  8912             ;	pop	hl
0341+  8912 DD 4E 13    	ld	c,(ix+0x0e+5)	;размер партиции ст.слово
0342+  8915 DD 46 14    	ld	b,(ix+0x0f+5)	;размер партиции ст.слово
0343+  8918 ED 42       	sbc	hl,bc
0344+  891A 7C          	ld	a,h
0345+  891B B5          	or	l
0346+  891C B2          	or	d
0347+  891D B3          	or	e
0348+  891E CA EC 8A    	jp	z,CreateMBRUS.countunused
0349+  8921 44          	ld	b,h
0350+  8922 4D          	ld	c,l
0351+  8923 CD B4 8B    	call	addMBRUS
0352+  8926 C3 EC 8A    	jp	CreateMBRUS.countunused
0353+  8929             
0354+  8929             ;---------------------------------------------------------
0355+  8929             ;	Определение свободного места на винте
0356+  8929             ;	(вызывать после GetHDDPar)
0357+  8929             ;---------------------------------------------------------
0358+  8929             ;Описание MBRUSTable
0359+  8929             ;+0	4	Start (lba)
0360+  8929             ;+4	4	Lenght (sectors)
0361+  8929             ;---------------------------------------------------------
0362+  8929             
0363+  8929             CreateMBRUS
0364+  8929 AF          	xor	a
0365+  892A 32 AE 71    	ld	(cntMBRUS),a
0366+  892D 21 E0 9F    	ld	hl,MBRUSTable
0367+  8930 22 DE 8C    	ld	(tMBRUS),hl
0368+  8933 11 E1 9F    	ld	de,MBRUSTable+1
0369+  8936 01 3F 00    	ld	bc,(MAXMBRUS*MBRUSFIELDSIZE)-1
0370+  8939 77          	ld	(hl),a
0371+  893A ED B0       	ldir
0372+  893C 3A A1 71    	ld	a,(partCount)
0373+  893F A7          	and	a
0374+  8940 CA 27 8B    	jp	z,.hddclear	;нет разделов
0375+  8943             ;Проверим, может быть первый раздел в таблице не с самого начала диска
0376+  8943 DD 21 00 9E 	ld	ix,MBRTable
0377+  8947 AF          .cr00	xor	a
0378+  8948 DD B6 0E    	or	(ix+14)
0379+  894B DD B6 0F    	or	(ix+15)
0380+  894E DD B6 10    	or	(ix+16)
0381+  8951             ;если старшие 3 байта начала партиции !=0, то партиция не в начале диска
0382+  8951             
0383+  8951             ;	ld	e,(ix+13)
0384+  8951             ;	ld	d,(ix+14)
0385+  8951             ;	ld	c,(ix+15)
0386+  8951             ;	ld	b,(ix+16)
0387+  8951 28 25       	jr	z,.cr011
0388+  8953 DD 6E 0D    	ld	l,(ix+13)
0389+  8956 DD 66 0E    	ld	h,(ix+14)
0390+  8959 3A A6 71    	ld	a,(hddSectors)
0391+  895C 5F          	ld	e,a
0392+  895D 16 00       	ld	d,0
0393+  895F A7          	and	a
0394+  8960 ED 52       	sbc	hl,de
0395+  8962 EB          	ex	de,hl
0396+  8963 DD 4E 0F    	ld	c,(ix+15)
0397+  8966 DD 46 10    	ld	b,(ix+16)
0398+  8969 30 01       	jr	nc,.cr02
0399+  896B 0B          	dec	bc
0400+  896C D9          .cr02	exx
0401+  896D 3A A6 71    	ld	a,(hddSectors)
0402+  8970 5F          	ld	e,a
0403+  8971 16 00       	ld	d,0
0404+  8973 42          	ld	b,d
0405+  8974 4A          	ld	c,d
0406+  8975 CD 5A 8B    	call	addMBRUSItem
0407+  8978             .cr011
0408+  8978 DD 21 00 9E 	ld	ix,MBRTable
0409+  897C             ;определяем свободное место среди примари разделов
0410+  897C DD E5       .cr0	push	ix
0411+  897E CD 9D 8C    	call	NextPrimary
0412+  8981 DD E5       	push	ix
0413+  8983 FD E1       	pop	iy
0414+  8985 DD E1       	pop	ix
0415+  8987             ;ix	- curr primary
0416+  8987             ;iy	- next primary
0417+  8987 DA 01 8A    	jp	c,.nextcheck
0418+  898A             
0419+  898A DD 6E 00    	ld	l,(ix)
0420+  898D DD 66 01    	ld	h,(ix+1)
0421+  8990             	
0422+  8990 DD 5E 0D    	ld	e,(ix+13)
0423+  8993 DD 56 0E    	ld	d,(ix+14)
0424+  8996 A7          	and	a
0425+  8997 19          	add	hl,de
0426+  8998 EB          	ex	de,hl
0427+  8999 DD 6E 02    	ld	l,(ix+2)
0428+  899C DD 66 03    	ld	h,(ix+3)
0429+  899F DD 4E 0F    	ld	c,(ix+15)
0430+  89A2 DD 46 10    	ld	b,(ix+16)
0431+  89A5 ED 4A       	adc	hl,bc
0432+  89A7 E5          	push	hl
0433+  89A8 C1          	pop	bc
0434+  89A9             ;в BC:DE номер первого сектора раздела
0435+  89A9 DD 6E 11    	ld	l,(ix+17)	;Размер раздела
0436+  89AC DD 66 12    	ld	h,(ix+18)
0437+  89AF A7          	and	a
0438+  89B0 19          	add	hl,de
0439+  89B1 E5          	push	hl		;младшее слово в стек
0440+  89B2             
0441+  89B2 DD 6E 13    	ld	l,(ix+19)
0442+  89B5 DD 66 14    	ld	h,(ix+20)
0443+  89B8 ED 4A       	adc	hl,bc
0444+  89BA EB          	ex	de,hl		;старшее слово в DE
0445+  89BB             ;рассчитали след. сектор за разделом
0446+  89BB             
0447+  89BB FD 6E 00    	ld	l,(iy)
0448+  89BE FD 66 01    	ld	h,(iy+1)
0449+  89C1             	
0450+  89C1 FD 4E 0D    	ld	c,(iy+13)
0451+  89C4 FD 46 0E    	ld	b,(iy+14)
0452+  89C7 A7          	and	a
0453+  89C8 09          	add	hl,bc
0454+  89C9 E5          	push	hl		;младшее слово в стек
0455+  89CA FD 6E 02    	ld	l,(iy+2)
0456+  89CD FD 66 03    	ld	h,(iy+3)
0457+  89D0 FD 4E 0F    	ld	c,(iy+15)
0458+  89D3 FD 46 10    	ld	b,(iy+16)
0459+  89D6 ED 4A       	adc	hl,bc		;старшее слово начала след. раздела
0460+  89D8 A7          	and	a
0461+  89D9 ED 52       	sbc	hl,de		;
0462+  89DB 28 14       	jr	z,.cr1		;старшие слова совпадают?
0463+  89DD             ;не совпадают
0464+  89DD             ;CY = 1 - первый раздел "налазит" на второй
0465+  89DD 38 0C       	jr	c,.incorrect1
0466+  89DF             ;CY = 0	- есть свободное место между разделами
0467+  89DF E5          .cr5	push	hl
0468+  89E0 C1          	pop	bc
0469+  89E1 E1          	pop	hl
0470+  89E2 D1          	pop	de
0471+  89E3 ED 52       	sbc	hl,de
0472+  89E5 EB          .cr52	ex	de,hl		;размер свободного участка в BC:DE
0473+  89E6 CD B4 8B    	call	addMBRUS
0474+  89E9             
0475+  89E9 18 0F       	jr	.cr2		;продолжаем
0476+  89EB             .incorrect1
0477+  89EB 21 0D 8D    	ld	hl,msgIncorrect
0478+  89EE             	PCHARS
0478+  89EE CD F7 7A    >	call	Print
0479+  89F1             ;	скипаем и переходим к след.паре
0480+  89F1             ;	jr .cr1	
0481+  89F1             
0482+  89F1 E1          .cr1	pop	hl
0483+  89F2 D1          	pop	de
0484+  89F3 A7          	and	a
0485+  89F4 ED 52       	sbc	hl,de
0486+  89F6 28 02       	jr	z,.cr2		;конец первого раздела указывает на начало второго?
0487+  89F8             ;нет!
0488+  89F8             ;CY = 1 - первый раздел "налазит" на второй
0489+  89F8             ;CY = 0	- есть свободное место между разделами
0490+  89F8 30 EB       	jr	nc,.cr52
0491+  89FA FD E5       .cr2	push	iy	;проверяем следующую пару
0492+  89FC DD E1       	pop	ix
0493+  89FE C3 7C 89    	jp	.cr0
0494+  8A01             
0495+  8A01             .nextcheck
0496+  8A01             ;тут надо проверить таблицу расширенных разделов на свободное место
0497+  8A01 DD 21 00 9E 	ld	ix,MBRTable
0498+  8A05 CD 34 8C    	call	GetExtended
0499+  8A08 DA 92 8A    	jp	c,.nextcheck1
0500+  8A0B CD 59 8C    	call	NextSecondary
0501+  8A0E DD E5       .cr01	push	ix
0502+  8A10 CD 59 8C    	call	NextSecondary
0503+  8A13 DD E5       	push	ix
0504+  8A15 FD E1       	pop	iy
0505+  8A17 DD E1       	pop	ix
0506+  8A19 38 77       	jr	c,.nextcheck1
0507+  8A1B             ;проверка вторичных разделов
0508+  8A1B             
0509+  8A1B DD 6E 00    	ld	l,(ix)
0510+  8A1E DD 66 01    	ld	h,(ix+1)
0511+  8A21             	
0512+  8A21 DD 5E 0D    	ld	e,(ix+13)
0513+  8A24 DD 56 0E    	ld	d,(ix+14)
0514+  8A27 A7          	and	a
0515+  8A28 19          	add	hl,de
0516+  8A29 EB          	ex	de,hl
0517+  8A2A DD 6E 02    	ld	l,(ix+2)
0518+  8A2D DD 66 03    	ld	h,(ix+3)
0519+  8A30 DD 4E 0F    	ld	c,(ix+15)
0520+  8A33 DD 46 10    	ld	b,(ix+16)
0521+  8A36 ED 4A       	adc	hl,bc
0522+  8A38 E5          	push	hl
0523+  8A39 C1          	pop	bc
0524+  8A3A             ;в BC:DE номер первого сектора раздела
0525+  8A3A DD 6E 11    	ld	l,(ix+17)	;Размер раздела
0526+  8A3D DD 66 12    	ld	h,(ix+18)
0527+  8A40 A7          	and	a
0528+  8A41 19          	add	hl,de
0529+  8A42 E5          	push	hl		;младшее слово в стек
0530+  8A43             
0531+  8A43 DD 6E 13    	ld	l,(ix+19)
0532+  8A46 DD 66 14    	ld	h,(ix+20)
0533+  8A49 ED 4A       	adc	hl,bc
0534+  8A4B EB          	ex	de,hl		;старшее слово в DE
0535+  8A4C             ;рассчитали след. сектор за разделом
0536+  8A4C             
0537+  8A4C FD 6E 00    	ld	l,(iy)		;первый сектор раздела
0538+  8A4F FD 66 01    	ld	h,(iy+1)
0539+  8A52             	
0540+  8A52 FD 4E 0D    	ld	c,(iy+13)	;длина раздела
0541+  8A55 FD 46 0E    	ld	b,(iy+14)
0542+  8A58 A7          	and	a
0543+  8A59 09          	add	hl,bc
0544+  8A5A E5          	push	hl		;младшее слово в стек
0545+  8A5B FD 6E 02    	ld	l,(iy+2)	;старшее слово первого сектора раздела
0546+  8A5E FD 66 03    	ld	h,(iy+3)
0547+  8A61 FD 4E 0F    	ld	c,(iy+15)	;старшее слово размера раздела
0548+  8A64 FD 46 10    	ld	b,(iy+16)
0549+  8A67 ED 4A       	adc	hl,bc		;старшее слово начала след. раздела
0550+  8A69 A7          	and	a
0551+  8A6A ED 52       	sbc	hl,de		;
0552+  8A6C 28 14       	jr	z,.cr6		;старшие слова совпадают?
0553+  8A6E             ;не совпадают
0554+  8A6E             ;CY = 1 - первый раздел "налазит" на второй
0555+  8A6E 38 0C       	jr	c,.incorrect2
0556+  8A70             ;CY = 0	- есть свободное место между разделами
0557+  8A70 E5          .cr51	push	hl
0558+  8A71 C1          	pop	bc
0559+  8A72 E1          	pop	hl
0560+  8A73 D1          	pop	de
0561+  8A74 ED 52       	sbc	hl,de
0562+  8A76 EB          .cr53	ex	de,hl		;размер свободного участка в BC:DE
0563+  8A77 CD B4 8B    	call	addMBRUS
0564+  8A7A             
0565+  8A7A 18 0F       	jr	.cr7		;продолжаем
0566+  8A7C             
0567+  8A7C             .incorrect2
0568+  8A7C 21 0D 8D    	ld	hl,msgIncorrect
0569+  8A7F             	PCHARS
0569+  8A7F CD F7 7A    >	call	Print
0570+  8A82             ;	скипаем и переходим к след.паре
0571+  8A82             ;	jr .cr1	
0572+  8A82             
0573+  8A82 E1          .cr6	pop	hl
0574+  8A83 D1          	pop	de
0575+  8A84 A7          	and	a
0576+  8A85 ED 52       	sbc	hl,de
0577+  8A87 28 02       	jr	z,.cr7		;конец первого раздела указывает на начало второго?
0578+  8A89             ;нет!
0579+  8A89             ;CY = 1 - первый раздел "налазит" на второй
0580+  8A89             ;CY = 0	- есть свободное место между разделами
0581+  8A89 30 EB       	jr	nc,.cr53
0582+  8A8B FD E5       .cr7	push	iy	;проверяем следующую пару
0583+  8A8D DD E1       	pop	ix
0584+  8A8F C3 0E 8A    	jp	.cr01
0585+  8A92             
0586+  8A92             
0587+  8A92             .nextcheck1
0588+  8A92 CD 24 8C    	call	GetLastPartition
0589+  8A95 DD 7E 09    	ld	a,(ix+9)
0590+  8A98 A7          	and	a
0591+  8A99 CA 27 8B    	jp	z,.hddclear
0592+  8A9C DD 6E 00    	ld	l,(ix)		;первый сектор раздела
0593+  8A9F DD 66 01    	ld	h,(ix+1)
0594+  8AA2 DD 4E 0D    	ld	c,(ix+13)	;длина раздела
0595+  8AA5 DD 46 0E    	ld	b,(ix+14)
0596+  8AA8 A7          	and	a
0597+  8AA9 09          	add	hl,bc
0598+  8AAA E5          	push	hl		;младшее слово в стек
0599+  8AAB DD 6E 02    	ld	l,(ix+2)	;старшее слово первого сектора раздела
0600+  8AAE DD 66 03    	ld	h,(ix+3)
0601+  8AB1 DD 4E 0F    	ld	c,(ix+15)	;старшее слово размера раздела
0602+  8AB4 DD 46 10    	ld	b,(ix+16)
0603+  8AB7 ED 4A       	adc	hl,bc		;старшее слово начала след. раздела
0604+  8AB9 EB          	ex	de,hl
0605+  8ABA 2A A7 71    	ld	hl,(hddTotalSector)
0606+  8ABD A7          	and	a
0607+  8ABE C1          	pop	bc
0608+  8ABF ED 42       	sbc	hl,bc
0609+  8AC1 E5          	push	hl
0610+  8AC2 2A A9 71    	ld	hl,(hddTotalSector+2)
0611+  8AC5 ED 52       	sbc	hl,de
0612+  8AC7 D1          	pop	de
0613+  8AC8 7C          	ld	a,h
0614+  8AC9 B5          	or	l
0615+  8ACA B2          	or	d
0616+  8ACB B3          	or	e
0617+  8ACC 28 1E       	jr	z,.countunused
0618+  8ACE             	;ex	de,hl
0619+  8ACE             	;в hl:de размер области от начала предыдущего раздела до конца диска
0620+  8ACE             ;	push	bc
0621+  8ACE EB          	ex	de,hl
0622+  8ACF             	;в hl мл. слово размера области
0623+  8ACF DD 4E 11    	ld	c,(ix+0x0c+5)	;размер партиции мл.слово
0624+  8AD2 DD 46 12    	ld	b,(ix+0x0d+5)	;размер партиции мл.слово
0625+  8AD5 A7          	and	a
0626+  8AD6 ED 42       	sbc	hl,bc
0627+  8AD8 EB          	ex	de,hl
0628+  8AD9             ;	push	bc
0629+  8AD9             ;	pop	hl
0630+  8AD9 DD 4E 13    	ld	c,(ix+0x0e+5)	;размер партиции ст.слово
0631+  8ADC DD 46 14    	ld	b,(ix+0x0f+5)	;размер партиции ст.слово
0632+  8ADF ED 42       	sbc	hl,bc
0633+  8AE1 7C          	ld	a,h
0634+  8AE2 B5          	or	l
0635+  8AE3 B2          	or	d
0636+  8AE4 B3          	or	e
0637+  8AE5 28 05       	jr	z,.countunused
0638+  8AE7 44          	ld	b,h
0639+  8AE8 4D          	ld	c,l
0640+  8AE9 CD B4 8B    	call	addMBRUS
0641+  8AEC             
0642+  8AEC             .countunused
0643+  8AEC             ;Подсчет общего количества свободного места
0644+  8AEC 21 00 00    	ld	hl,0
0645+  8AEF 22 E0 8C    	ld	(tUnused),hl
0646+  8AF2 22 E2 8C    	ld	(tUnused+2),hl
0647+  8AF5 3A AE 71    	ld	a,(cntMBRUS)
0648+  8AF8 DD 21 E0 9F 	ld	ix,MBRUSTable
0649+  8AFC A7          	and	a
0650+  8AFD 28 1F       	jr	z,.l2
0651+  8AFF DD 4E 04    .l1	ld	c,(ix+4)
0652+  8B02 DD 46 05    	ld	b,(ix+5)
0653+  8B05 2A E2 8C    	ld	hl,(tUnused+2)
0654+  8B08 A7          	and	a
0655+  8B09 09          	add	hl,bc
0656+  8B0A 22 E2 8C    	ld	(tUnused+2),hl
0657+  8B0D 2A E0 8C    	ld	hl,(tUnused)
0658+  8B10 DD 4E 06    	ld	c,(ix+6)
0659+  8B13 DD 46 07    	ld	b,(ix+7)
0660+  8B16 ED 4A       	adc	hl,bc
0661+  8B18 22 E0 8C    	ld	(tUnused),hl
0662+  8B1B 3D          	dec	a
0663+  8B1C 20 E1       	jr	nz,.l1
0664+  8B1E ED 4B E0 8C .l2	ld	bc,(tUnused)
0665+  8B22 ED 5B E2 8C 	ld	de,(tUnused+2)
0666+  8B26 C9          	ret
0667+  8B27             
0668+  8B27             .hddclear
0669+  8B27             ;на винте не обнаружены записи в MBR, значит винт пустой!
0670+  8B27 3A A6 71    	ld	a,(hddSectors)
0671+  8B2A 6F          	ld	l,a
0672+  8B2B 26 00       	ld	h,0
0673+  8B2D FD 21 E0 9F 	ld	iy,MBRUSTable
0674+  8B31 FD 75 00    	ld	(iy),l
0675+  8B34 FD 74 01    	ld	(iy+1),h
0676+  8B37 FD 74 02    	ld	(iy+2),h
0677+  8B3A FD 74 03    	ld	(iy+3),h
0678+  8B3D EB          	ex	de,hl
0679+  8B3E 2A A7 71    	ld	hl,(hddTotalSector)
0680+  8B41 A7          	and	a
0681+  8B42 ED 52       	sbc	hl,de
0682+  8B44 FD 75 04    	ld	(iy+4),l
0683+  8B47 FD 74 05    	ld	(iy+5),h
0684+  8B4A 2A A9 71    	ld	hl,(hddTotalSector+2)
0685+  8B4D FD 75 06    	ld	(iy+6),l
0686+  8B50 FD 74 07    	ld	(iy+7),h
0687+  8B53 3E 01       	ld	a,1
0688+  8B55 32 AE 71    	ld	(cntMBRUS),a
0689+  8B58 18 92       	jr	.countunused
0690+  8B5A             
0691+  8B5A             ;Добавить запись о своб.месте
0692+  8B5A             ;bc:de - начало
0693+  8B5A             ;bc':de' - длина
0694+  8B5A             
0695+  8B5A             addMBRUSItem
0696+  8B5A D9          	exx
0697+  8B5B CD A0 8B    	call	CheckAdequacy
0698+  8B5E D9          	exx
0699+  8B5F D8          	ret	c
0700+  8B60 FD E5       	push	iy
0701+  8B62 FD 2A DE 8C 	ld	iy,(tMBRUS)
0702+  8B66 FD 73 00    	ld	(iy+0),e
0703+  8B69 FD 72 01    	ld	(iy+1),d
0704+  8B6C FD 71 02    	ld	(iy+2),c
0705+  8B6F FD 70 03    	ld	(iy+3),b
0706+  8B72 FD E5       	push	iy
0707+  8B74 D9          	exx
0708+  8B75 FD E1       	pop	iy
0709+  8B77 FD 73 04    	ld	(iy+4),e
0710+  8B7A FD 72 05    	ld	(iy+5),d
0711+  8B7D FD 71 06    	ld	(iy+6),c
0712+  8B80 FD 70 07    	ld	(iy+7),b
0713+  8B83 D9          	exx
0714+  8B84 21 AE 71    	ld	hl,cntMBRUS
0715+  8B87 34          	inc	(hl)
0716+  8B88 11 08 00    	ld	de,8
0717+  8B8B FD 19       	add	iy,de
0718+  8B8D FD 22 DE 8C 	ld	(tMBRUS),iy
0719+  8B91 FD E1       	pop	iy
0720+  8B93 C9          	ret
0721+  8B94             
0722+  8B94             ;Сравнение 2х 32 битных чисел
0723+  8B94             ;In:
0724+  8B94             ;1 - hl:hl'
0725+  8B94             ;2 - de:de'
0726+  8B94             ;Out CY = 1 : 1<2,
0727+  8B94             ;    CY = 0 : 1>2
0728+  8B94             Compare32
0729+  8B94 D9          	exx
0730+  8B95 E5          	push	hl
0731+  8B96 A7          	and	a
0732+  8B97 ED 52       	sbc	hl,de
0733+  8B99 E1          	pop	hl
0734+  8B9A D9          	exx
0735+  8B9B E5          	push	hl
0736+  8B9C ED 52       	sbc	hl,de
0737+  8B9E E1          	pop	hl
0738+  8B9F C9          	ret
0739+  8BA0             
0740+  8BA0             
0741+  8BA0             ;Проверка на достаточную длину свободного места для создания партиции
0742+  8BA0             ;BC:DE - длинна раздела
0743+  8BA0             ;out:
0744+  8BA0             ;CY =1 - длина раздела меньше 0х1000 секторов (2Мб)
0745+  8BA0             CheckAdequacy
0746+  8BA0 E5          	push	hl
0747+  8BA1             	;push	bc
0748+  8BA1 D5          	push	de
0749+  8BA2 D5          	push	de
0750+  8BA3 E1          	pop	hl
0751+  8BA4 11 00 10    	ld	de,0x1000
0752+  8BA7 A7          	and	a
0753+  8BA8 ED 52       	sbc	hl,de
0754+  8BAA C5          	push	bc
0755+  8BAB E1          	pop	hl
0756+  8BAC 11 00 00    	ld	de,0
0757+  8BAF ED 52       	sbc	hl,de
0758+  8BB1 D1          	pop	de
0759+  8BB2             	;pop	bc
0760+  8BB2 E1          	pop	hl
0761+  8BB3 C9          	ret
0762+  8BB4             
0763+  8BB4             ;размер свободного участка в BC:DE
0764+  8BB4             ;IX указывает на запись с разделом, за которым идет пустое место
0765+  8BB4             addMBRUS
0766+  8BB4 CD A0 8B    	call	CheckAdequacy
0767+  8BB7 D8          	ret	c
0768+  8BB8 FD E5       	push	iy
0769+  8BBA FD 2A DE 8C 	ld	iy,(tMBRUS)
0770+  8BBE FD 73 04    	ld	(iy+4),e
0771+  8BC1 FD 72 05    	ld	(iy+5),d
0772+  8BC4 FD 71 06    	ld	(iy+6),c
0773+  8BC7 FD 70 07    	ld	(iy+7),b
0774+  8BCA             
0775+  8BCA             ;рассчитываем начальный сектор свободного участка
0776+  8BCA             
0777+  8BCA DD 6E 00    	ld	l,(ix)
0778+  8BCD DD 66 01    	ld	h,(ix+1)
0779+  8BD0             	
0780+  8BD0 DD 5E 0D    	ld	e,(ix+13)
0781+  8BD3 DD 56 0E    	ld	d,(ix+14)
0782+  8BD6 A7          	and	a
0783+  8BD7 19          	add	hl,de
0784+  8BD8 EB          	ex	de,hl
0785+  8BD9 DD 6E 02    	ld	l,(ix+2)
0786+  8BDC DD 66 03    	ld	h,(ix+3)
0787+  8BDF DD 4E 0F    	ld	c,(ix+15)
0788+  8BE2 DD 46 10    	ld	b,(ix+16)
0789+  8BE5 ED 4A       	adc	hl,bc
0790+  8BE7 E5          	push	hl
0791+  8BE8 C1          	pop	bc
0792+  8BE9             ;в BC:DE номер первого сектора раздела
0793+  8BE9 DD 6E 11    	ld	l,(ix+17)	;Размер раздела
0794+  8BEC DD 66 12    	ld	h,(ix+18)
0795+  8BEF A7          	and	a
0796+  8BF0 19          	add	hl,de
0797+  8BF1 FD 75 00    	ld	(iy),l
0798+  8BF4 FD 74 01    	ld	(iy+1),h
0799+  8BF7 DD 6E 13    	ld	l,(ix+19)
0800+  8BFA DD 66 14    	ld	h,(ix+20)
0801+  8BFD ED 4A       	adc	hl,bc
0802+  8BFF FD 75 02    	ld	(iy+2),l
0803+  8C02 FD 74 03    	ld	(iy+3),h
0804+  8C05 21 AE 71    	ld	hl,cntMBRUS
0805+  8C08 34          	inc	(hl)
0806+  8C09 11 08 00    	ld	de,8
0807+  8C0C FD 19       	add	iy,de
0808+  8C0E FD 22 DE 8C 	ld	(tMBRUS),iy
0809+  8C12 FD E1       	pop	iy
0810+  8C14 C9          	ret
0811+  8C15             
0812+  8C15             ;Выводит листинг партиций на экран
0813+  8C15             ;IX - таблица партиций
0814+  8C15             ;A - кол-во партиций
0815+  8C15             ShowPartitions
0816+  8C15 06 00       	ld	b,0
0817+  8C17 4F          	ld	c,a
0818+  8C18 CD 07 6F    .s3	call	ShowPartInfo
0819+  8C1B 11 20 00    	ld	de,MBRFIELDSIZE
0820+  8C1E DD 19       	add	ix,de
0821+  8C20 0D          	dec	c
0822+  8C21 20 F5       	jr	nz,.s3
0823+  8C23 C9          	ret
0824+  8C24             
0825+  8C24             ;Возвращает в IX адрес последней записи в MBRTable
0826+  8C24             
0827+  8C24             GetLastPartition
0828+  8C24 DD 21 00 9E 	ld	ix,MBRTable
0829+  8C28 3A A1 71    	ld	a,(partCount)
0830+  8C2B 11 20 00    	ld	de,MBRFIELDSIZE
0831+  8C2E 3D          .n1	dec	a
0832+  8C2F C8          	ret	z
0833+  8C30 DD 19       	add	ix,de
0834+  8C32 18 FA       	jr	.n1
0835+  8C34             
0836+  8C34             ;Возвращает адрес записи, соотвутствующей расширенному разделу в МБР
0837+  8C34             ;Z - ОК!
0838+  8C34             ;CY = 1 & A= 0 - вышли за пределы МБР (адрес указывает на EBR)
0839+  8C34             ;CY = 1 & A = #FF - конец таблицы
0840+  8C34             
0841+  8C34             GetExtended
0842+  8C34 11 20 00    	ld	de,MBRFIELDSIZE
0843+  8C37 CD 84 8C    .n1	call	CheckPrimary
0844+  8C3A D8          	ret	c
0845+  8C3B DD 7E 09    	ld	a,(ix+9)
0846+  8C3E FE 05       	cp	5
0847+  8C40 C8          	ret	z
0848+  8C41 FE 0F       	cp	15
0849+  8C43 C8          	ret	z
0850+  8C44 DD 19       	add	ix,de
0851+  8C46 18 EF       	jr	.n1
0852+  8C48             
0853+  8C48             ;Возвращает адрес записи, соотвутствующей MFS разделу в МБР
0854+  8C48             ;Z - ОК!
0855+  8C48             ;CY = 1 & A= 0 - вышли за пределы МБР (адрес указывает на EBR)
0856+  8C48             ;CY = 1 & A = #FF - конец таблицы
0857+  8C48             
0858+  8C48             GetMFS
0859+  8C48 11 20 00    	ld	de,MBRFIELDSIZE
0860+  8C4B DD 19       .n1	add	ix,de
0861+  8C4D CD 84 8C    	call	CheckPrimary
0862+  8C50 D8          	ret	c
0863+  8C51 DD 7E 09    	ld	a,(ix+9)
0864+  8C54 FE 53       	cp	0x53
0865+  8C56 C8          	ret	z
0866+  8C57 18 F2       	jr	.n1
0867+  8C59             
0868+  8C59             ;Возвращает след. запись с секондари разделом	
0869+  8C59             NextSecondary
0870+  8C59 11 20 00    	ld	de,MBRFIELDSIZE
0871+  8C5C DD 19       .n1	add	ix,de
0872+  8C5E CD 6F 8C    	call	CheckSecondary
0873+  8C61 D8          	ret	c
0874+  8C62 DD 7E 09    	ld	a,(ix+9)
0875+  8C65 FE 05       	cp	5
0876+  8C67 28 F3       	jr	z,.n1
0877+  8C69 FE 0F       	cp	15
0878+  8C6B 28 EF       	jr	z,.n1
0879+  8C6D A7          .n2	and	a
0880+  8C6E C9          	ret
0881+  8C6F             
0882+  8C6F             ;Проверка записи раздела - secondary раздел  или нет
0883+  8C6F             ; CY = 1 & A = 0 не secondary
0884+  8C6F             ; CY = 1 & A = #FF ошибка- достигнут конец таблицы
0885+  8C6F             ; CY = 0, A = FS Type - secondary раздел
0886+  8C6F             
0887+  8C6F             CheckSecondary
0888+  8C6F DD 7E 00    	ld	a,(ix)
0889+  8C72 DD B6 01    	or	(ix+1)
0890+  8C75 DD B6 02    	or	(ix+2)
0891+  8C78 DD B6 03    	or	(ix+3)
0892+  8C7B 37          	scf
0893+  8C7C C8          	ret	z
0894+  8C7D DD 7E 09    	ld	a,(ix+9)
0895+  8C80 A7          	and	a
0896+  8C81 28 16       	jr	z,cpend
0897+  8C83 C9          	ret
0898+  8C84             ;Проверка записи раздела - примари раздел  или нет
0899+  8C84             ; CY = 1 & A = 0 не примари
0900+  8C84             ; CY = 1 & A = #FF ошибка- достигнут конец таблицы
0901+  8C84             ; CY = 0, A = FS Type - примари раздел
0902+  8C84             CheckPrimary
0903+  8C84 DD 7E 00    	ld	a,(ix)
0904+  8C87 DD B6 01    	or	(ix+1)
0905+  8C8A DD B6 02    	or	(ix+2)
0906+  8C8D DD B6 03    	or	(ix+3)
0907+  8C90 3E 00       	ld	a,0
0908+  8C92 37          	scf
0909+  8C93 C0          	ret	nz
0910+  8C94 DD 7E 09    	ld	a,(ix+9)	;fs type
0911+  8C97 A7          	and	a
0912+  8C98 C0          	ret	nz
0913+  8C99 3E FF       cpend	ld	a,#ff		;конец таблицы
0914+  8C9B 37          	scf
0915+  8C9C C9          	ret
0916+  8C9D             
0917+  8C9D             ;Возвращает адрес записи, следующей за текущей, в которой находится описание примари партиции
0918+  8C9D             NextPrimary
0919+  8C9D 11 20 00    	ld	de,MBRFIELDSIZE
0920+  8CA0 DD 19       .n1	add	ix,de
0921+  8CA2 CD 84 8C    	call	CheckPrimary
0922+  8CA5 C0          	ret	nz
0923+  8CA6 D8          	ret	c
0924+  8CA7 18 F7       	jr	.n1
0925+  8CA9             
0926+  8CA9             ;Возвращает адрес записи MBR в таблице, на номер которого указывает A (с 1)
0927+  8CA9             GetMBRROWbyNum
0928+  8CA9 DD 21 00 9E 	ld	ix,MBRTable
0929+  8CAD 11 20 00    	ld	de,MBRFIELDSIZE
0930+  8CB0 3D          .g1	dec	a
0931+  8CB1 C8          	ret	z
0932+  8CB2 DD 19       	add	ix,de
0933+  8CB4 18 FA       	jr	.g1
0934+  8CB6             
0935+  8CB6             
0936+  8CB6             ;перевести LBA-адрес в CHS
0937+  8CB6             ;Input HL:BC - LBA
0938+  8CB6             ;Output HL - Cylinder, B - Sector, C - Head
0939+  8CB6             LBAtoCHS
0940+  8CB6             ;Расчет CHS
0941+  8CB6             ;Необходимо перевести LBA-адрес в CHS
0942+  8CB6             ; cylinder = LBA / (heads_per_cylinder * sectors_per_track)
0943+  8CB6             ; temp = LBA % (heads_per_cylinder * sectors_per_track)
0944+  8CB6             ; head = temp / sectors_per_track
0945+  8CB6             ; sector = temp % sectors_per_track + 1
0946+  8CB6             
0947+  8CB6 E5          	push	hl
0948+  8CB7 C5          	push	bc
0949+  8CB8             ;Считаем heads*sectors
0950+  8CB8 3A A5 71    	ld	a,(hddHeads)
0951+  8CBB 4F          	ld	c,a
0952+  8CBC 06 00       	ld	b,0
0953+  8CBE 3A A6 71    	ld	a,(hddSectors)
0954+  8CC1 5F          	ld	e,a
0955+  8CC2 16 00       	ld	d,0
0956+  8CC4 CD 21 9D    	call	MUL16
0957+  8CC7             ;в BC heads*sectors
0958+  8CC7 C5          	push	bc
0959+  8CC8 D1          	pop	de
0960+  8CC9             ;Считаем cylinder по вышеуказанной формуле, в DE - heads*sectors
0961+  8CC9             ;	ld	c,(ix+0)
0962+  8CC9             ;	ld	b,(ix+1)
0963+  8CC9             ;	ld	l,(ix+2)
0964+  8CC9             ;	ld	h,(ix+3)
0965+  8CC9 C1          	pop	bc
0966+  8CCA E1          	pop	hl
0967+  8CCB CD 3A 9D    	call	DIV_HLBC_DE
0968+  8CCE             ;hl - temp
0969+  8CCE             ;bc - cylinder
0970+  8CCE             ;	ld	(dCrTemp),hl
0971+  8CCE C5          	push	bc
0972+  8CCF             
0973+  8CCF             ;	ld	(dCrCylinder),bc
0974+  8CCF E5          	push	hl
0975+  8CD0 C1          	pop	bc
0976+  8CD1             ;считаем номер головы по формуле temp/sectors
0977+  8CD1 3A A6 71    	ld	a,(hddSectors)
0978+  8CD4 5F          	ld	e,a
0979+  8CD5 16 00       	ld	d,0
0980+  8CD7 CD 37 9D    	call	DIV16
0981+  8CDA             ;bc - head
0982+  8CDA             ;hl - sector-1
0983+  8CDA 2C          	inc	l
0984+  8CDB 45          	ld	b,l
0985+  8CDC             ;	ld	(bCrHead),a
0986+  8CDC             ;	ld	a,l
0987+  8CDC             ;	inc	a
0988+  8CDC             ;	ld	(bCrSector),a
0989+  8CDC E1          	pop	hl
0990+  8CDD             ;CHS рассчитан!!!
0991+  8CDD C9          	ret
0992+  8CDE             
0993+  8CDE 00 00       tMBRUS	dw	0	;переменная для хранения указателя на тек. запись в MBRUSTable
0994+  8CE0 00 00 00 00 tUnused	dw	0,0
0995+  8CE4             msgMBRUSRow
0996+  8CE4 10 06 5B    	db	COL,C_CMD,"["
0997+  8CE7             .num	db	"000] ",COL,C_NORM,"- "
0997+  8CE7 3030305D2010072D20
0998+  8CF0             .start	db	"00000000 "
0998+  8CF0 303030303030303020
0999+  8CF9             .len	db	"00000000 "
0999+  8CF9 303030303030303020
1000+  8D02             .lenbytes
1001+  8D02             	db	"00000 "
1001+  8D02 303030303020
1002+  8D08 4D620D0A00  .mb	db	"Mb",CR,LF,EN
1003+  8D0D             msgIncorrect
1004+  8D0D             	db	CR,LF,COL,C_WARN,"Incorrect sequence of partition in MBR",COL,C_NORM,CR,LF,EN
1004+  8D0D 0D0A1002496E636F72726563742073657175656E6365206F6620706172746974
1004+  8D2D 696F6E20696E204D425210070D0A00
1394   8D3C             	include	"fdisk_chtype.asm"
0001+  8D3C             ;----------------------------------------------------
0002+  8D3C             ;	Изменение ID раздела
0003+  8D3C             ;----------------------------------------------------
0004+  8D3C             
0005+  8D3C             ChangeTypeFS
0006+  8D3C 21 A9 8E    	ld	hl,msgChangeTypeFS
0007+  8D3F             	PCHARS
0007+  8D3F CD F7 7A    >	call	Print
0008+  8D42 21 D5 77    	ld	hl,msgPromptNumber
0009+  8D45             	PCHARS
0009+  8D45 CD F7 7A    >	call	Print
0010+  8D48 21 C9 71    	ld	hl,bufStr
0011+  8D4B E5          	push	hl
0012+  8D4C 3E 02       	ld	a,2
0013+  8D4E CD F9 7F    	call	EditString
0014+  8D51 E1          	pop 	hl
0015+  8D52 CD 06 81    	call	MRNUM
0016+  8D55 38 0D       	jr	c,.ct2
0017+  8D57 3A A1 71    	ld	a,(partCount)
0018+  8D5A 47          	ld	b,a	
0019+  8D5B 79          	ld	a,c
0020+  8D5C A7          	and	a
0021+  8D5D 28 05       	jr	z,.ct2
0022+  8D5F B8          .ct1	cp	b
0023+  8D60 28 0B       	jr	z,.ct3
0024+  8D62 38 09       	jr	c,.ct3
0025+  8D64 21 13 78    .ct2	ld	hl,msgInvalidParameter
0026+  8D67             	PCHARS
0026+  8D67 CD F7 7A    >	call	Print
0027+  8D6A C3 0B 6E    	jp	hddCMD
0028+  8D6D             .ct3
0029+  8D6D             ;Проверка раздела - изменить ID у Extended нельзя!
0030+  8D6D 32 D3 8D    	ld	(selPartition),a
0031+  8D70 DD 21 00 9E 	ld	ix,MBRTable
0032+  8D74 11 20 00    	ld	de,MBRFIELDSIZE
0033+  8D77 3D          .ct5	dec	a
0034+  8D78 28 04       	jr	z,.ct4
0035+  8D7A DD 19       	add	ix,de
0036+  8D7C 18 F9       	jr	.ct5
0037+  8D7E DD 7E 09    .ct4	ld	a,(ix+9)	;fs type
0038+  8D81 FE 05       	cp	5
0039+  8D83 28 3C       	jr	z,.ct6
0040+  8D85 FE 0F       	cp	15
0041+  8D87 28 38       	jr	z,.ct6
0042+  8D89 DD E5       	push	ix
0043+  8D8B 21 8D 8E    	ld	hl,msgListFS
0044+  8D8E             	PCHARS
0044+  8D8E CD F7 7A    >	call	Print
0045+  8D91 CD 36 82    	call	ShowFSTable
0046+  8D94 21 70 8E    	ld	hl,msgNewID
0047+  8D97             	PCHARS
0047+  8D97 CD F7 7A    >	call	Print
0048+  8D9A 21 C9 71    	ld	hl,bufStr
0049+  8D9D E5          	push	hl
0050+  8D9E 3E 03       	ld	a,3
0051+  8DA0 CD F9 7F    	call	EditString
0052+  8DA3 E1          	pop	hl
0053+  8DA4 CD 06 81    	call	MRNUM
0054+  8DA7 DD E1       	pop	ix
0055+  8DA9 38 B9       	jr	c,.ct2
0056+  8DAB 79          	ld	a,c
0057+  8DAC A7          	and	a
0058+  8DAD 28 B5       	jr	z,.ct2
0059+  8DAF FE 05       	cp	5
0060+  8DB1 28 17       	jr	z,.notsetext
0061+  8DB3 FE 0F       	cp	15
0062+  8DB5 28 13       	jr	z,.notsetext
0063+  8DB7 DD 77 09    	ld	(ix+9),a
0064+  8DBA 21 AD 71    	ld	hl,cntOperations
0065+  8DBD 34          	inc	(hl)
0066+  8DBE C3 71 6D    	jp	ShowPartition.continue	;Возврат
0067+  8DC1             .ct6
0068+  8DC1             ;Выбран расширенный раздел - ошибка!
0069+  8DC1 21 D4 8D    	ld	hl,msgExtNoModify
0070+  8DC4             	PCHARS
0070+  8DC4 CD F7 7A    >	call	Print
0071+  8DC7 C3 0B 6E    	jp	hddCMD
0072+  8DCA             .notsetext
0073+  8DCA 21 03 8E    	ld	hl,msgNoExt
0074+  8DCD             	PCHARS
0074+  8DCD CD F7 7A    >	call	Print
0075+  8DD0 C3 0B 6E    	jp	hddCMD
0076+  8DD3             selPartition
0077+  8DD3 00          	db	0	;номер партиции, выбранной для изменения ID
0078+  8DD4             msgExtNoModify
0079+  8DD4             	db	CR,LF,COL,C_WARN,"Can't modify ID of extended partition!",COL,C_NORM,CR,LF,EN
0079+  8DD4 0D0A100243616E2774206D6F64696679204944206F6620657874656E64656420
0079+  8DF4 706172746974696F6E2110070D0A00
0080+  8E03             msgNoExt
0081+  8E03             	db	CR,LF,COL,C_WARN,"Can't set ID indicating the extended partition (such as #05, #15) on primary or secondary partition!",COL,C_NORM,CR,LF,EN
0081+  8E03 0D0A100243616E27742073657420494420696E6469636174696E672074686520
0081+  8E23 657874656E64656420706172746974696F6E202873756368206173202330352C
0081+  8E43 2023313529206F6E207072696D617279206F72207365636F6E64617279207061
0081+  8E63 72746974696F6E2110070D0A00
0082+  8E70             msgNewID
0083+  8E70             	db	CR,LF,"Enter a new partition ID: ",EN
0083+  8E70 0D0A456E7465722061206E657720706172746974696F6E2049443A2000
0084+  8E8D             msgListFS
0085+  8E8D             	db	CR,LF,"List of common systems:",CR,LF,EN
0085+  8E8D 0D0A4C697374206F6620636F6D6D6F6E2073797374656D733A0D0A00
0086+  8EA9             msgChangeTypeFS
0087+  8EA9             	db	"Modify ID (FS Type)",CR,LF,EN
0087+  8EA9 4D6F64696679204944202846532054797065290D0A00
0088+  8EBF             
1395   8EBF             	include	"fdisk_setboot.asm"
0001+  8EBF             SetBootable
0002+  8EBF 21 D9 8F    	ld	hl,msgSetBootable
0003+  8EC2             	PCHARS
0003+  8EC2 CD F7 7A    >	call	Print
0004+  8EC5 3A A1 71    	ld	a,(partCount)
0005+  8EC8 A7          	and	a
0006+  8EC9 20 09       	jr	nz,.sb0
0007+  8ECB 21 2E 78    	ld	hl,msgMBRTableIsNull
0008+  8ECE             	PCHARS
0008+  8ECE CD F7 7A    >	call	Print
0009+  8ED1 C3 0B 6E    	jp	hddCMD
0010+  8ED4             .sb0
0011+  8ED4 21 D5 77    	ld	hl,msgPromptNumber
0012+  8ED7             	PCHARS
0012+  8ED7 CD F7 7A    >	call	Print
0013+  8EDA 21 C9 71    	ld	hl,bufStr
0014+  8EDD 3E 02       	ld	a,2
0015+  8EDF CD F9 7F    	call	EditString
0016+  8EE2 21 C9 71    	ld	hl,bufStr
0017+  8EE5 CD 06 81    	call	MRNUM
0018+  8EE8 38 0D       	jr	c,.sb2
0019+  8EEA 3A A1 71    	ld	a,(partCount)
0020+  8EED 47          	ld	b,a	
0021+  8EEE 79          	ld	a,c
0022+  8EEF A7          	and	a
0023+  8EF0 28 05       	jr	z,.sb2
0024+  8EF2 B8          .sb1	cp	b
0025+  8EF3 28 0B       	jr	z,.sb3
0026+  8EF5 38 09       	jr	c,.sb3
0027+  8EF7 21 13 78    .sb2	ld	hl,msgInvalidParameter
0028+  8EFA             	PCHARS
0028+  8EFA CD F7 7A    >	call	Print
0029+  8EFD C3 0B 6E    	jp	hddCMD
0030+  8F00 DD 21 00 9E .sb3	ld	ix,MBRTable
0031+  8F04 11 20 00    	ld	de,MBRFIELDSIZE
0032+  8F07 3D          .sb5	dec	a
0033+  8F08 28 04       	jr	z,.sb4
0034+  8F0A DD 19       	add	ix,de
0035+  8F0C 18 F9       	jr	.sb5
0036+  8F0E DD 7E 00    .sb4	ld	a,(ix)
0037+  8F11 DD B6 01    	or	(ix+1)
0038+  8F14 DD B6 02    	or	(ix+2)
0039+  8F17 DD B6 03    	or	(ix+3)
0040+  8F1A 20 33       	jr	nz,.extnoboot
0041+  8F1C DD 7E 09    	ld	a,(ix+9)
0042+  8F1F FE 05       	cp	5
0043+  8F21 28 2C       	jr	z,.extnoboot
0044+  8F23 FE 0F       	cp	15
0045+  8F25 28 28       	jr	z,.extnoboot
0046+  8F27 DD 7E 05    	ld	a,(ix+5)
0047+  8F2A FE 80       	cp	#80
0048+  8F2C 28 18       	jr	z,.bootable
0049+  8F2E             ;снимаем загрузочные флаги с других разделов
0050+  8F2E 21 05 9E    	ld	hl,MBRTable+5
0051+  8F31 3A A1 71    	ld	a,(partCount)
0052+  8F34 36 00       .sb6	ld	(hl),0
0053+  8F36 19          	add	hl,de
0054+  8F37 3D          	dec	a
0055+  8F38 20 FA       	jr	nz,.sb6
0056+  8F3A 3E 80       	ld	a,#80
0057+  8F3C DD 77 05    	ld	(ix+5),a
0058+  8F3F 21 AD 71    	ld	hl,cntOperations
0059+  8F42 34          	inc	(hl)
0060+  8F43 C3 71 6D    	jp	ShowPartition.continue	;Возврат
0061+  8F46             .bootable
0062+  8F46 21 58 8F    	ld	hl,msgBootable
0063+  8F49             	PCHARS
0063+  8F49 CD F7 7A    >	call	Print
0064+  8F4C C3 0B 6E    	jp	hddCMD
0065+  8F4F             	
0066+  8F4F             .extnoboot
0067+  8F4F 21 8D 8F    	ld	hl,msgNoBootable
0068+  8F52             	PCHARS
0068+  8F52 CD F7 7A    >	call	Print
0069+  8F55 C3 0B 6E    	jp	hddCMD
0070+  8F58             msgBootable
0071+  8F58             	db	CR,LF,"Bootable flag is already set for this partition!",CR,LF,EN
0071+  8F58 0D0A426F6F7461626C6520666C616720697320616C7265616479207365742066
0071+  8F78 6F72207468697320706172746974696F6E210D0A00
0072+  8F8D             msgNoBootable
0073+  8F8D             	db	CR,LF,COL,C_WARN,"Can not set the bootable flag for an extended or logical partition!",COL,C_NORM,CR,LF,EN
0073+  8F8D 0D0A100243616E206E6F74207365742074686520626F6F7461626C6520666C61
0073+  8FAD 6720666F7220616E20657874656E646564206F72206C6F676963616C20706172
0073+  8FCD 746974696F6E2110070D0A00
0074+  8FD9             msgSetBootable
0075+  8FD9             	db	"Set bootable flag on partition",CR,LF,EN
0075+  8FD9 53657420626F6F7461626C6520666C6167206F6E20706172746974696F6E0D0A
0075+  8FF9 00
0076+  8FFA             
0077+  8FFA             
1396   8FFA             	include	"fdisk_backup.asm"
0001+  8FFA             BackupPartitions
0002+  8FFA 21 13 95    	ld	hl,msgBackup
0003+  8FFD             	PCHARS
0003+  8FFD CD F7 7A    >	call	Print
0004+  9000             ;	call	dlgPending
0005+  9000             ;	jp	c,ShowPartition.continue
0006+  9000             .reentername
0007+  9000 21 37 95    	ld	hl,msgBackupEnter
0008+  9003             	PCHARS
0008+  9003 CD F7 7A    >	call	Print
0009+  9006 21 C9 71    	ld	hl,bufStr
0010+  9009 3E 08       	ld	a,8
0011+  900B CD F9 7F    	call	EditString
0012+  900E DA 71 6D    	jp	c,ShowPartition.continue
0013+  9011             ;почистим буфер
0014+  9011 21 00 C4    	ld	hl,SectorBuffer
0015+  9014 54          	ld	d,h
0016+  9015 5D          	ld	e,l
0017+  9016 13          	inc	de
0018+  9017 36 00       	ld	(hl),0
0019+  9019 01 FF 03    	ld	bc,1023
0020+  901C ED B0       	ldir
0021+  901E             ;набиваем буфер данными
0022+  901E             
0023+  901E             ;содержимое файла
0024+  901E 11 10 C4    	ld	de,SectorBuffer+16
0025+  9021 21 B3 71    	ld	hl,strPartSign
0026+  9024 01 0A 00    	ld	bc,10
0027+  9027 ED B0       	ldir
0028+  9029 3E 30       	ld	a,"0"
0029+  902B 12          	ld	(de),a
0030+  902C 13          	inc	de
0031+  902D 21 00 C0    	ld	hl,Buffer	;SerialNumber
0032+  9030 3A A2 71    	ld	a,(devSelected)
0033+  9033 3D          	dec	a
0034+  9034 20 03       	jr	nz,.n3
0035+  9036 21 00 C2    	ld	hl,Buffer+512	;SLAVE Serial Number
0036+  9039             .n3	
0037+  9039 E5          	push	hl
0038+  903A             ;модель
0039+  903A 3E 1B       	ld	a,27
0040+  903C 06 28       	ld	b,40
0041+  903E CD 0D 71    	call	CopyVars
0042+  9041 E1          	pop	hl
0043+  9042             ;серийный номер
0044+  9042 3E 0A       	ld	a,10
0045+  9044 06 14       	ld	b,20
0046+  9046 CD 0D 71    	call	CopyVars
0047+  9049             
0048+  9049             ;копируем геометрию диска
0049+  9049 21 A3 71    	ld	hl,hddCylinders
0050+  904C 01 08 00    	ld	bc,8
0051+  904F ED B0       	ldir
0052+  9051             
0053+  9051 3A A1 71    	ld	a,(partCount)
0054+  9054 12          	ld	(de),a
0055+  9055 13          	inc	de
0056+  9056 21 00 00    	ld	hl,0
0057+  9059 01 20 00    	ld	bc,MBRFIELDSIZE
0058+  905C 09          .b1	add	hl,bc
0059+  905D 3D          	dec	a
0060+  905E 20 FC       	jr	nz,.b1
0061+  9060             ;	ld	(dFileSize),hl
0062+  9060 44          	ld	b,h
0063+  9061 4D          	ld	c,l
0064+  9062 21 00 9E    	ld	hl,MBRTable
0065+  9065 ED B0       	ldir
0066+  9067 21 10 C4    	ld	hl,SectorBuffer+16
0067+  906A EB          	ex	de,hl
0068+  906B A7          	and	a
0069+  906C ED 52       	sbc	hl,de
0070+  906E 22 F4 93    	ld	(dFileSize),hl
0071+  9071             ;спецификация файла
0072+  9071             
0073+  9071             ;поиск файла
0074+  9071 11 00 C4    	ld	de,SectorBuffer
0075+  9074 21 C9 71    	ld	hl,bufStr
0076+  9077 01 08 00    	ld	bc,8
0077+  907A ED B0       	ldir
0078+  907C EB          	ex	de,hl
0079+  907D 36 6D       	ld	(hl),"m"
0080+  907F 23          	inc	hl
0081+  9080 36 62       	ld	(hl),"b"
0082+  9082 23          	inc	hl
0083+  9083 36 72       	ld	(hl),"r"
0084+  9085             ;	ld	de,23773	;дескриптор файла
0085+  9085 21 00 C4    	ld	hl,SectorBuffer
0086+  9088 0E 13       	ld	c,0x13
0087+  908A CD 1D 7A    	call	_trdos
0088+  908D 3E 0B       	ld	a,11		;количество символов для поиска
0089+  908F 32 06 5D    	ld	(23814),a
0090+  9092 0E 0A       	ld	c,0x0a
0091+  9094 CD 1D 7A    	call	_trdos
0092+  9097             ;	jp	c,GeneralDosError
0093+  9097 0C          	inc	c
0094+  9098 28 17       	jr	z,.nofile
0095+  909A             	;файл существует, перезаписать файл?
0096+  909A 21 AF 94    	ld	hl,msgFileExist
0097+  909D             	PCHARS
0097+  909D CD F7 7A    >	call	Print
0098+  90A0 21 78 6E    	ld	hl,tabYesNo
0099+  90A3 CD A9 7F    	call	Prompt
0100+  90A6 DA 00 90    	jp	c,.reentername
0101+  90A9             	;удаление
0102+  90A9 0E 12       	ld	c,0x12
0103+  90AB CD 1D 7A    	call	_trdos
0104+  90AE DA 5C 7A    	jp	c,GeneralDosError
0105+  90B1             .nofile
0106+  90B1             	;создание нового файла
0107+  90B1             	
0108+  90B1             	;читаем сист.сектор в ОЗУ
0109+  90B1 21 00 C8    	ld	hl,SectorBuffer2
0110+  90B4 11 08 00    	ld	de,8
0111+  90B7 01 05 01    	ld	bc,0x0105
0112+  90BA CD 1D 7A    	call	_trdos
0113+  90BD DA 5C 7A    	jp	c,GeneralDosError
0114+  90C0             
0115+  90C0 3A F5 93    	ld	a,(dFileSize+1)
0116+  90C3 3C          	inc	a
0117+  90C4 32 0D C4    	ld	(SectorBuffer+0x0d),a	;sectors
0118+  90C7             
0119+  90C7 2A E5 C8    	ld	hl,(SectorBuffer2+0xe5)	;Количество свободных секторов
0120+  90CA 5F          	ld	e,a
0121+  90CB 16 00       	ld	d,0
0122+  90CD A7          	and	a
0123+  90CE ED 52       	sbc	hl,de	
0124+  90D0 22 E5 C8    	ld	(SectorBuffer2+0xe5),hl
0125+  90D3 21 AD 7A    	ld	hl,msgDOSNoFree
0126+  90D6 DA 5F 7A    	jp	c,DosError
0127+  90D9             
0128+  90D9 2A F4 93    	ld	hl,(dFileSize)
0129+  90DC 22 0B C4    	ld	(SectorBuffer+0x0b),hl	;size
0130+  90DF ED 5B E1 C8 	ld	de,(SectorBuffer2+0xe1)	;первые своб.сектор и трек
0131+  90E3 ED 53 0E C4 	ld	(SectorBuffer+0x0e),de
0132+  90E7             
0133+  90E7 0E 13       	ld	c,0x13			;set file descriptor
0134+  90E9 21 00 C4    	ld	hl,SectorBuffer
0135+  90EC CD 1D 7A    	call	_trdos
0136+  90EF             
0137+  90EF 3A E4 C8    	ld	a,(SectorBuffer2+0xE4)	;кол-во файлов на дискете
0138+  90F2 FE 80       	cp	128
0139+  90F4 21 92 7A    	ld	hl,msgDOSDirFull
0140+  90F7 D2 5F 7A    	jp	nc,DosError
0141+  90FA 0E 09       	ld	c,0x09
0142+  90FC CD 1D 7A    	call	_trdos
0143+  90FF DA 5C 7A    	jp	c,GeneralDosError
0144+  9102             
0145+  9102 3A E4 C8    	ld	a,(SectorBuffer2+0xE4)	;кол-во файлов на дискете
0146+  9105 3C          	inc	a
0147+  9106 32 E4 C8    	ld	(SectorBuffer2+0xE4),a
0148+  9109 ED 5B E1 C8 	ld	de,(SectorBuffer2+0xe1)
0149+  910D 3A 0D C4    	ld	a,(SectorBuffer+0x0d)
0150+  9110             ;	ld	a,(dFileSize+1)
0151+  9110             ;	inc	a
0152+  9110 83          	add	a,e
0153+  9111 FE 10       	cp	16
0154+  9113 38 03       	jr	c,.nocarry
0155+  9115 D6 10       	sub	16
0156+  9117 14          	inc	d
0157+  9118             .nocarry
0158+  9118 5F          	ld	e,a
0159+  9119 ED 53 E1 C8 	ld	(SectorBuffer2+0xe1),de
0160+  911D             
0161+  911D ED 5B 0E C4 	ld	de,(SectorBuffer+0x0e)	;первые сектор и трек файла
0162+  9121 21 10 C4    	ld	hl,SectorBuffer+16
0163+  9124 3A 0D C4    	ld	a,(SectorBuffer+0x0d)
0164+  9127             	;пишем файл
0165+  9127 47          	ld	b,a
0166+  9128 0E 06       	ld	c,6
0167+  912A CD 1D 7A    	call	_trdos
0168+  912D DA 5C 7A    	jp	c,GeneralDosError
0169+  9130             
0170+  9130 21 00 C8    	ld	hl,SectorBuffer2
0171+  9133 01 06 01    	ld	bc,0x0106
0172+  9136 11 08 00    	ld	de,8
0173+  9139 CD 1D 7A    	call	_trdos
0174+  913C DA 5C 7A    	jp	c,GeneralDosError
0175+  913F 21 8D 79    	ld	hl,msgOK
0176+  9142             	PCHARS
0176+  9142 CD F7 7A    >	call	Print
0177+  9145             	_ANYKEY
0177+  9145 21 7B 74    >	ld	hl,msgAnyKey
0177+  9148 CD F7 7A    >	call	Print
0177+  914B 21 00 00    >	ld	hl,0
0177+  914E CD A9 7F    >	call	Prompt
0178+  9151 C3 71 6D    	jp	ShowPartition.continue
0179+  9154             
0180+  9154             RestorePartition
0181+  9154 21 EC 94    	ld	hl,msgRestore
0182+  9157             	PCHARS
0182+  9157 CD F7 7A    >	call	Print
0183+  915A CD 39 6E    	call	dlgPending
0184+  915D DA 71 6D    	jp	c,ShowPartition.continue
0185+  9160             
0186+  9160 CD 31 93    	call	FindMBRFiles
0187+  9163 DA 5C 7A    	jp	c,GeneralDosError
0188+  9166 32 F6 93    	ld	(bFilesCount),a
0189+  9169 A7          	and	a
0190+  916A 20 15       	jr	nz,.rest
0191+  916C 21 29 94    	ld	hl,msgNoFiles
0192+  916F             	PCHARS
0192+  916F CD F7 7A    >	call	Print
0193+  9172             	_ANYKEY
0193+  9172 21 7B 74    >	ld	hl,msgAnyKey
0193+  9175 CD F7 7A    >	call	Print
0193+  9178 21 00 00    >	ld	hl,0
0193+  917B CD A9 7F    >	call	Prompt
0194+  917E C3 71 6D    	jp	ShowPartition.continue
0195+  9181 21 14 94    .rest	ld	hl,msgFounded
0196+  9184             	PCHARS
0196+  9184 CD F7 7A    >	call	Print
0197+  9187 CD 6E 93    	call	GetFirstMBRName
0198+  918A DA 71 6D    	jp	c,ShowPartition.continue
0199+  918D             	;ret	c		;error
0200+  918D 3A F6 93    	ld	a,(bFilesCount)
0201+  9190 47          	ld	b,a
0202+  9191 C5          .lp0	push	bc
0203+  9192 3A F6 93    	ld	a,(bFilesCount)
0204+  9195 3C          	inc	a
0205+  9196 90          	sub	b
0206+  9197 F5          	push	af
0207+  9198 6F          	ld	l,a
0208+  9199 01 FA 93    	ld	bc,msgNames.num
0209+  919C CD AC 80    	call	PRNUM
0210+  919F DD E5       	push	ix
0211+  91A1 E1          	pop	hl
0212+  91A2 11 03 94    	ld	de,msgNames.name
0213+  91A5 01 08 00    	ld	bc,8
0214+  91A8 ED B0       	ldir
0215+  91AA 13          	inc	de
0216+  91AB 0E 03       	ld	c,3
0217+  91AD ED B0       	ldir
0218+  91AF 21 F7 93    	ld	hl,msgNames
0219+  91B2             	PCHARS
0219+  91B2 CD F7 7A    >	call	Print
0220+  91B5 F1          	pop	af
0221+  91B6 E6 01       	and	1
0222+  91B8 20 06       	jr	nz,.lp1
0223+  91BA 21 9F 72    	ld	hl,msgCRLF
0224+  91BD             	PCHARS
0224+  91BD CD F7 7A    >	call	Print
0225+  91C0 CD 92 93    .lp1	call	GetNextMBRName
0226+  91C3 C1          	pop	bc
0227+  91C4 10 CB       	djnz	.lp0
0228+  91C6 3A F6 93    	ld	a,(bFilesCount)
0229+  91C9 E6 01       	and	1
0230+  91CB 28 06       	jr	z,.n1
0231+  91CD 21 9F 72    	ld	hl,msgCRLF
0232+  91D0             	PCHARS
0232+  91D0 CD F7 7A    >	call	Print
0233+  91D3 21 8E 94    .n1	ld	hl,msgNumber
0234+  91D6             	PCHARS
0234+  91D6 CD F7 7A    >	call	Print
0235+  91D9 21 C9 71    	ld	hl,bufStr
0236+  91DC E5          	push	hl
0237+  91DD 3E 03       	ld	a,3
0238+  91DF CD F9 7F    	call	EditString
0239+  91E2 E1          	pop	hl
0240+  91E3 DA 71 6D    	jp	c,ShowPartition.continue
0241+  91E6 CD 06 81    	call	MRNUM
0242+  91E9 38 0E       	jr	c,.inval
0243+  91EB 3A F6 93    	ld	a,(bFilesCount)
0244+  91EE 47          	ld	b,a	
0245+  91EF 79          	ld	a,c
0246+  91F0 A7          	and	a
0247+  91F1 37          	scf
0248+  91F2 28 05       	jr	z,.inval
0249+  91F4 B8          	cp	b
0250+  91F5 28 17       	jr	z,.ld1
0251+  91F7 38 15       	jr	c,.ld1
0252+  91F9 21 13 78    .inval	ld	hl,msgInvalidParameter
0253+  91FC             
0254+  91FC             	PCHARS
0254+  91FC CD F7 7A    >	call	Print
0255+  91FF             	_ANYKEY
0255+  91FF 21 7B 74    >	ld	hl,msgAnyKey
0255+  9202 CD F7 7A    >	call	Print
0255+  9205 21 00 00    >	ld	hl,0
0255+  9208 CD A9 7F    >	call	Prompt
0256+  920B C3 71 6D    	jp	ShowPartition.continue
0257+  920E             
0258+  920E CD C4 93    .ld1	call	GetMBRSpec
0259+  9211 DD 5E 0E    	ld	e,(ix+0x0e)	;sec
0260+  9214 DD 56 0F    	ld	d,(ix+0x0f)	;trk
0261+  9217 DD 7E 0D    	ld	a,(ix+0x0d)	;lenght
0262+  921A FE 03       	cp	3
0263+  921C 21 D6 94    	ld	hl,msgFileBig
0264+  921F D2 5F 7A    	jp	nc,DosError
0265+  9222 47          	ld	b,a		;чтение файла
0266+  9223 0E 05       	ld	c,5
0267+  9225 21 00 C4    	ld	hl,SectorBuffer
0268+  9228 CD 1D 7A    	call	_trdos
0269+  922B DA 5C 7A    	jp	c,GeneralDosError
0270+  922E 21 B3 71    	ld	hl,strPartSign
0271+  9231 11 00 C4    	ld	de,SectorBuffer
0272+  9234 06 0A       	ld	b,10
0273+  9236 CD 27 93    	call	Compare
0274+  9239 30 06       	jr	nc,.ok1
0275+  923B 21 6E 96    	ld	hl,msgNotBackup
0276+  923E C3 5F 7A    	jp	DosError
0277+  9241             .ok1
0278+  9241             ;Показываем информацию из файла
0279+  9241 21 0B C4    	ld	hl,SectorBuffer+11
0280+  9244 11 78 95    	ld	de,msgBackInfo.model
0281+  9247 01 28 00    	ld	bc,40
0282+  924A ED B0       	ldir
0283+  924C 21 33 C4    	ld	hl,SectorBuffer+51
0284+  924F 11 B9 95    	ld	de,msgBackInfo.sn
0285+  9252 01 14 00    	ld	bc,20
0286+  9255 ED B0       	ldir
0287+  9257 2A 47 C4    	ld	hl,(SectorBuffer+71)
0288+  925A 01 E2 95    	ld	bc,msgBackInfo.cyl
0289+  925D CD B3 80    	call	PRNUM0
0290+  9260 3A 49 C4    	ld	a,(SectorBuffer+73)
0291+  9263 6F          	ld	l,a
0292+  9264 01 F5 95    	ld	bc,msgBackInfo.head
0293+  9267 CD AC 80    	call	PRNUM
0294+  926A 3A 4A C4    	ld	a,(SectorBuffer+74)
0295+  926D 6F          	ld	l,a
0296+  926E 01 08 96    	ld	bc,msgBackInfo.sec
0297+  9271 CD AC 80    	call	PRNUM	
0298+  9274 3A 4F C4    	ld	a,(SectorBuffer+79)
0299+  9277 6F          	ld	l,a
0300+  9278 01 21 96    	ld	bc,msgBackInfo.recs
0301+  927B CD AC 80    	call	PRNUM
0302+  927E 21 4B 95    	ld	hl,msgBackInfo
0303+  9281             	PCHARS
0303+  9281 CD F7 7A    >	call	Print
0304+  9284 DD 21 50 C4 	ld	ix,SectorBuffer+80
0305+  9288 3A 4F C4    	ld	a,(SectorBuffer+79)
0306+  928B 4F          	ld	c,a
0307+  928C 06 00       	ld	b,0
0308+  928E CD 07 6F    .ss3	call	ShowPartInfo
0309+  9291 11 20 00    	ld	de,MBRFIELDSIZE
0310+  9294 DD 19       	add	ix,de
0311+  9296 0D          	dec	c
0312+  9297 20 F5       	jr	nz,.ss3
0313+  9299             
0314+  9299             
0315+  9299             ;Сравниваем параметры винта
0316+  9299 21 00 C0    	ld	hl,Buffer	;SerialNumber
0317+  929C 3A A2 71    	ld	a,(devSelected)
0318+  929F 3D          	dec	a
0319+  92A0 20 03       	jr	nz,.n3
0320+  92A2 21 00 C2    	ld	hl,Buffer+512	;SLAVE Serial Number
0321+  92A5 E5          .n3	push	hl
0322+  92A6             ;модель
0323+  92A6 3E 1B       	ld	a,27
0324+  92A8 06 28       	ld	b,40
0325+  92AA 11 C9 71    	ld	de,bufStr
0326+  92AD D5          	push	de
0327+  92AE CD 0D 71    	call	CopyVars
0328+  92B1 D1          	pop	de
0329+  92B2 21 0B C4    	ld	hl,SectorBuffer+11
0330+  92B5 06 28       	ld	b,40
0331+  92B7 CD 27 93    	call	Compare
0332+  92BA E1          	pop	hl
0333+  92BB DA 22 93    	jp	c,.different
0334+  92BE             ;серийный номер
0335+  92BE 3E 0A       	ld	a,10
0336+  92C0 06 14       	ld	b,20
0337+  92C2 11 C9 71    	ld	de,bufStr
0338+  92C5 D5          	push	de
0339+  92C6 CD 0D 71    	call	CopyVars
0340+  92C9 D1          	pop	de
0341+  92CA 06 14       	ld	b,20
0342+  92CC 21 33 C4    	ld	hl,SectorBuffer+51
0343+  92CF CD 27 93    	call	Compare
0344+  92D2 DA 22 93    	jp	c,.different
0345+  92D5             
0346+  92D5 21 3B 96    	ld	hl,msgBackLoad
0347+  92D8             	PCHARS
0347+  92D8 CD F7 7A    >	call	Print
0348+  92DB CD 44 6E    	call	dlgYesNo
0349+  92DE DA 71 6D    	jp	c,ShowPartition.continue
0350+  92E1             ;clear table
0351+  92E1 21 00 9E    	ld	hl,MBRTable
0352+  92E4 11 01 9E    	ld	de,MBRTable+1
0353+  92E7 36 00       	ld	(hl),0
0354+  92E9 01 DF 01    	ld	bc,MAXMBRFIELDS*MBRFIELDSIZE-1
0355+  92EC ED B0       	ldir
0356+  92EE             ;переносим данные в таблицу из файла
0357+  92EE 3A 4F C4    	ld	a,(SectorBuffer+79)	;количество записей в файле
0358+  92F1 32 A1 71    	ld	(partCount),a
0359+  92F4             
0360+  92F4 11 20 00    	ld	de,MBRFIELDSIZE
0361+  92F7 21 00 00    	ld	hl,0
0362+  92FA 19          .s1	add	hl,de
0363+  92FB 3D          	dec	a
0364+  92FC 20 FC       	jr	nz,.s1
0365+  92FE 44          	ld	b,h
0366+  92FF 4D          	ld	c,l	
0367+  9300 21 50 C4    	ld	hl,SectorBuffer+80
0368+  9303 11 00 9E    	ld	de,MBRTable
0369+  9306 ED B0       	ldir
0370+  9308 3E 01       	ld	a,1
0371+  930A 32 AD 71    	ld	(cntOperations),a
0372+  930D 21 8D 79    	ld	hl,msgOK
0373+  9310             .s3	PCHARS
0373+  9310 CD F7 7A    >	call	Print
0374+  9313             	_ANYKEY
0374+  9313 21 7B 74    >	ld	hl,msgAnyKey
0374+  9316 CD F7 7A    >	call	Print
0374+  9319 21 00 00    >	ld	hl,0
0374+  931C CD A9 7F    >	call	Prompt
0375+  931F C3 71 6D    	jp	ShowPartition.continue
0376+  9322             .different
0377+  9322 21 54 94    	ld	hl,msgDifferent
0378+  9325 18 E9       	jr	.s3
0379+  9327             ;----------------------------------------
0380+  9327             ;	Сравнение двух строк
0381+  9327             ;----------------------------------------
0382+  9327 1A          Compare	ld	a,(de)
0383+  9328 BE          	cp	(hl)
0384+  9329 37          	scf
0385+  932A C0          	ret	nz
0386+  932B 13          	inc	de
0387+  932C 23          	inc	hl
0388+  932D 10 F8       	djnz	Compare
0389+  932F A7          	and	a
0390+  9330 C9          	ret
0391+  9331             
0392+  9331             ;----------------------------------------
0393+  9331             ;	Процедуры для поиска файлов MBR
0394+  9331             ;----------------------------------------
0395+  9331             FindMBRFiles
0396+  9331             	;читаем каталог дискеты
0397+  9331 21 00 C4    	ld	hl,SectorBuffer	;используется буфер статуса жестких дисков и буфера секторов
0398+  9334 01 05 08    	ld	bc,8*256+5
0399+  9337 11 00 00    	ld	de,0
0400+  933A CD 1D 7A    	call	_trdos
0401+  933D D8          	ret	c
0402+  933E 01 00 80    	ld	bc,128*256	;128 элементов
0403+  9341 DD 21 00 C4 	ld	ix,SectorBuffer
0404+  9345 11 10 00    	ld	de,16
0405+  9348 DD 7E 00    .loop	ld	a,(ix)
0406+  934B A7          	and	a
0407+  934C 28 1D       	jr	z,.end
0408+  934E 3D          	dec	a		;файл удален?
0409+  934F 28 16       	jr	z,.next
0410+  9351 DD 7E 08    	ld	a,(ix+8)	;проверка расширения drv
0411+  9354 FE 6D       	cp	"m"
0412+  9356 20 0F       	jr	nz,.next
0413+  9358 DD 7E 09    	ld	a,(ix+9)
0414+  935B FE 62       	cp	"b"
0415+  935D 20 08       	jr	nz,.next
0416+  935F DD 7E 0A    	ld	a,(ix+10)
0417+  9362 FE 72       	cp	"r"
0418+  9364 20 01       	jr	nz,.next
0419+  9366 0C          	inc	c		;счетчик найденных файлов
0420+  9367 DD 19       .next	add	ix,de
0421+  9369 10 DD       	djnz	.loop
0422+  936B 79          .end	ld	a,c
0423+  936C A7          	and	a
0424+  936D C9          	ret
0425+  936E             GetFirstMBRName
0426+  936E DD 21 00 C4 	ld	ix,SectorBuffer
0427+  9372 DD 7E 00    	ld	a,(ix)
0428+  9375 A7          	and	a
0429+  9376 28 4A       	jr	z,GetNextMBRName.end
0430+  9378 3D          	dec	a		;файл удален?
0431+  9379 28 17       	jr	z,GetNextMBRName
0432+  937B DD 7E 08    	ld	a,(ix+8)	;проверка расширения drv
0433+  937E FE 6D       	cp	"m"
0434+  9380 20 10       	jr	nz,GetNextMBRName
0435+  9382 DD 7E 09    	ld	a,(ix+9)
0436+  9385 FE 62       	cp	"b"
0437+  9387 20 09       	jr	nz,GetNextMBRName
0438+  9389 DD 7E 0A    	ld	a,(ix+10)
0439+  938C FE 72       	cp	"r"
0440+  938E 20 02       	jr	nz,GetNextMBRName
0441+  9390 A7          	and	a
0442+  9391 C9          	ret
0443+  9392             ;на входе ix - тек.запись, на выходе - след.
0444+  9392             ;CY = 1 - конец каталога
0445+  9392             GetNextMBRName
0446+  9392 11 10 00    	ld	de,16
0447+  9395 01 00 CC    	ld	bc,SectorBuffer+2048	;адрес окончания каталога
0448+  9398             
0449+  9398 DD 19       .next	add	ix,de
0450+  939A DD E5       	push	ix
0451+  939C E1          	pop	hl
0452+  939D A7          	and	a
0453+  939E ED 42       	sbc	hl,bc		;достигнут конец каталога?
0454+  93A0 28 20       	jr	z,.end
0455+  93A2 DD 7E 00    	ld	a,(ix)
0456+  93A5 A7          	and	a
0457+  93A6 28 1A       	jr	z,.end
0458+  93A8 3D          	dec	a		;файл удален?
0459+  93A9 28 ED       	jr	z,.next
0460+  93AB DD 7E 08    	ld	a,(ix+8)	;проверка расширения drv
0461+  93AE FE 6D       	cp	"m"
0462+  93B0 20 E6       	jr	nz,.next
0463+  93B2 DD 7E 09    	ld	a,(ix+9)
0464+  93B5 FE 62       	cp	"b"
0465+  93B7 20 DF       	jr	nz,.next
0466+  93B9 DD 7E 0A    	ld	a,(ix+10)
0467+  93BC FE 72       	cp	"r"
0468+  93BE 20 D8       	jr	nz,.next
0469+  93C0 A7          	and	a
0470+  93C1 C9          	ret
0471+  93C2 37          .end	scf
0472+  93C3 C9          	ret
0473+  93C4             ;вернуть указатель на спецификацию файла драйвера, номер в А
0474+  93C4             GetMBRSpec
0475+  93C4 11 10 00    	ld	de,16
0476+  93C7 DD 21 00 C4 	ld	ix,SectorBuffer
0477+  93CB 4F          	ld	c,a
0478+  93CC 06 80       	ld	b,128		;кол-во файлов
0479+  93CE DD 7E 00    .loop	ld	a,(ix)
0480+  93D1 A7          	and	a
0481+  93D2 28 1E       	jr	z,.end
0482+  93D4 3D          	dec	a		;файл удален?
0483+  93D5 28 17       	jr	z,.skip
0484+  93D7 DD 7E 08    	ld	a,(ix+8)	;проверка расширения drv
0485+  93DA FE 6D       	cp	"m"
0486+  93DC 20 10       	jr	nz,.skip
0487+  93DE DD 7E 09    	ld	a,(ix+9)
0488+  93E1 FE 62       	cp	"b"
0489+  93E3 20 09       	jr	nz,.skip
0490+  93E5 DD 7E 0A    	ld	a,(ix+10)
0491+  93E8 FE 72       	cp	"r"
0492+  93EA 20 02       	jr	nz,.skip
0493+  93EC 0D          	dec	c
0494+  93ED C8          	ret	z
0495+  93EE             .skip
0496+  93EE DD 19       .next	add	ix,de
0497+  93F0 10 DC       	djnz	.loop
0498+  93F2 37          .end	scf
0499+  93F3 C9          	ret
0500+  93F4             ;--------------------------------------------------
0501+  93F4             dFileSize
0502+  93F4 00 00       	dw	0
0503+  93F6             bFilesCount
0504+  93F6 00          	db	0
0505+  93F7             
0506+  93F7             ;--------------------------------------------------
0507+  93F7             msgNames
0508+  93F7 10 06 5B    	db	COL,C_CMD,"["
0509+  93FA             .num	db	"000] ",COL,C_NORM,"- "
0509+  93FA 3030305D2010072D20
0510+  9403             .name	db	"FILENAME.ext    ",EN
0510+  9403 46494C454E414D452E6578742020202000
0511+  9414             
0512+  9414             msgFounded
0513+  9414             	db	CR,LF,"Available files:",CR,LF,EN
0513+  9414 0D0A417661696C61626C652066696C65733A0D0A00
0514+  9429             msgNoFiles
0515+  9429             	db	CR,LF,COL,C_WARN,"No *.MBR files found on this disk!",COL,C_NORM,CR,LF,EN
0515+  9429 0D0A10024E6F202A2E4D42522066696C657320666F756E64206F6E2074686973
0515+  9449 206469736B2110070D0A00
0516+  9454             msgDifferent
0517+  9454             	db	CR,LF,COL,C_WARN,"This file for a different HDD! Operation aborted!",COL,C_NORM,CR,LF,EN
0517+  9454 0D0A1002546869732066696C6520666F72206120646966666572656E74204844
0517+  9474 4421204F7065726174696F6E2061626F727465642110070D0A00
0518+  948E             msgNumber
0519+  948E             	db	CR,LF,"Enter number of file to load: ",EN
0519+  948E 0D0A456E746572206E756D626572206F662066696C6520746F206C6F61643A20
0519+  94AE 00
0520+  94AF             msgFileExist
0521+  94AF             	db	CR,LF,COL,C_WARN,"File exist! Owerwrite? (y/n): ",COL,C_NORM,CR,LF,EN
0521+  94AF 0D0A100246696C6520657869737421204F77657277726974653F2028792F6E29
0521+  94CF 3A2010070D0A00
0522+  94D6             msgFileBig
0523+  94D6             	db	CR,LF,COL,C_WARN,"File too big!",COL,C_NORM,CR,LF,EN
0523+  94D6 0D0A100246696C6520746F6F206269672110070D0A00
0524+  94EC             msgRestore
0525+  94EC             	db	"Restore Partition Table from File...",CR,LF,EN
0525+  94EC 526573746F726520506172746974696F6E205461626C652066726F6D2046696C
0525+  950C 652E2E2E0D0A00
0526+  9513             msgBackup
0527+  9513             	db	"Backup Partition Table to File...",CR,LF,EN
0527+  9513 4261636B757020506172746974696F6E205461626C6520746F2046696C652E2E
0527+  9533 2E0D0A00
0528+  9537             msgBackupEnter
0529+  9537             	db	CR,LF,"Enter file name: ",EN
0529+  9537 0D0A456E7465722066696C65206E616D653A2000
0530+  954B             msgBackInfo
0531+  954B             	db	CR,LF,"Information on selected file:"
0531+  954B 0D0A496E666F726D6174696F6E206F6E2073656C65637465642066696C653A
0532+  956A             	db	CR,LF,"  Model: ",COL,C_VAL,"["
0532+  956A 0D0A20204D6F64656C3A2010055B
0533+  9578 20          .model	ds	40,32
0534+  95A0             	db	"]",COL,C_NORM,CR,LF,"  Serial Number: ",COL,C_VAL,"["
0534+  95A0 5D10070D0A202053657269616C204E756D6265723A2010055B
0535+  95B9 20          .sn	ds	20,32
0536+  95CD 5D10070D0A  	db	"]",COL,C_NORM,CR,LF
0537+  95D2             	db	"  Cylinders: ",COL,C_VAL,"["
0537+  95D2 202043796C696E646572733A2010055B
0538+  95E2             .cyl	db	"00000]",COL,C_NORM," Heads: ",COL,C_VAL,"["
0538+  95E2 30303030305D10072048656164733A2010055B
0539+  95F5             .head	db	"000]",COL,C_NORM," Sectors: ",COL,C_VAL,"["
0539+  95F5 3030305D100720536563746F72733A2010055B
0540+  9608             .sec	db	"000]",COL,C_NORM,CR,LF,"  Partitions: ",COL,C_VAL,"["
0540+  9608 3030305D10070D0A2020506172746974696F6E733A2010055B
0541+  9621             .recs	db	"000]",COL,C_NORM,CR,LF
0541+  9621 3030305D10070D0A
0542+  9629             	db	"Partition list:",CR,LF,EN
0542+  9629 506172746974696F6E206C6973743A0D0A00
0543+  963B             msgBackLoad
0544+  963B             	db	CR,LF,COL,C_WARN,"Are you sure want to load this file? (y/n): ",COL,C_NORM
0544+  963B 0D0A100241726520796F7520737572652077616E7420746F206C6F6164207468
0544+  965B 69732066696C653F2028792F6E293A201007
0545+  966D 00          	db	EN
0546+  966E             msgNotBackup
0547+  966E             	db	CR,LF,COL,C_WARN,"This is not backup file!",COL,C_NORM,CR,LF,EN
0547+  966E 0D0A100254686973206973206E6F74206261636B75702066696C652110070D0A
0547+  968E 00
1397   968F             	include	"fdisk_delpart.asm"
0001+  968F             ;----------------------------------------------------
0002+  968F             ;	Удаление раздела
0003+  968F             ;----------------------------------------------------
0004+  968F             
0005+  968F             DeletePart
0006+  968F 21 E0 96    	ld	hl,msgDeletePart
0007+  9692             	PCHARS
0007+  9692 CD F7 7A    >	call	Print
0008+  9695 21 D5 77    	ld	hl,msgPromptNumber
0009+  9698             	PCHARS
0009+  9698 CD F7 7A    >	call	Print
0010+  969B 21 C9 71    	ld	hl,bufStr
0011+  969E E5          	push	hl
0012+  969F 3E 02       	ld	a,2
0013+  96A1 CD F9 7F    	call	EditString
0014+  96A4 E1          	pop 	hl
0015+  96A5 DA 71 6D    	jp	c,ShowPartition.continue
0016+  96A8 CD 06 81    	call	MRNUM
0017+  96AB 38 0D       	jr	c,.ct2
0018+  96AD 3A A1 71    	ld	a,(partCount)
0019+  96B0 47          	ld	b,a	
0020+  96B1 79          	ld	a,c
0021+  96B2 A7          	and	a
0022+  96B3 28 05       	jr	z,.ct2
0023+  96B5 B8          .ct1	cp	b
0024+  96B6 28 0B       	jr	z,.ct3
0025+  96B8 38 09       	jr	c,.ct3
0026+  96BA 21 13 78    .ct2	ld	hl,msgInvalidParameter
0027+  96BD             	PCHARS
0027+  96BD CD F7 7A    >	call	Print
0028+  96C0 C3 0B 6E    	jp	hddCMD
0029+  96C3 3D          .ct3	dec	a
0030+  96C4 CD ED 86    	call	DelRowFromMBR		;удаление раздела из таблицы
0031+  96C7 21 AD 71    	ld	hl,cntOperations
0032+  96CA 34          	inc	(hl)
0033+  96CB 21 8D 79    	ld	hl,msgOK
0034+  96CE             	PCHARS
0034+  96CE CD F7 7A    >	call	Print
0035+  96D1             	_ANYKEY
0035+  96D1 21 7B 74    >	ld	hl,msgAnyKey
0035+  96D4 CD F7 7A    >	call	Print
0035+  96D7 21 00 00    >	ld	hl,0
0035+  96DA CD A9 7F    >	call	Prompt
0036+  96DD C3 71 6D    	jp	ShowPartition.continue
0037+  96E0             
0038+  96E0             msgDeletePart
0039+  96E0             	db	"Delete partition...",CR,LF,EN
0039+  96E0 44656C65746520706172746974696F6E2E2E2E0D0A00
0040+  96F6             
1398   96F6             	include "fdisk_crpart.asm"
0001+  96F6             CreatePartition
0002+  96F6 21 40 9B    	ld	hl,msgCrPartition
0003+  96F9             	PCHARS
0003+  96F9 CD F7 7A    >	call	Print
0004+  96FC             
0005+  96FC 3A A1 71    	ld	a,(partCount)
0006+  96FF             ;Если диск пустой, то возможно создать Pri, Ext & MFS
0007+  96FF A7          	and	a
0008+  9700 0E 03       	ld	c,%00000011
0009+  9702 28 2E       	jr	z,.crmenupart
0010+  9704 01 00 03    	ld	bc,3*256
0011+  9707 DD 21 00 9E 	ld	ix,MBRTable
0012+  970B CD 9D 8C    .n1	call	NextPrimary
0013+  970E 38 02       	jr	c,.n2
0014+  9710 10 F9       	djnz	.n1
0015+  9712 78          .n2	ld	a,b
0016+  9713 A7          	and	a
0017+  9714 28 11       	jr	z,.n5		;а если уже есть 4 примари партиций, то и расширенную не создашь!
0018+  9716 0E 01       	ld	c,1		;есть возможность создавать Примари разделы
0019+  9718 DD 21 00 9E .n3	ld	ix,MBRTable
0020+  971C CD 34 8C    	call	GetExtended	;ищем Extended раздел в MBR
0021+  971F 38 04       	jr	c,.n4
0022+  9721 CB D1       	set	2,c		;имеется EXT раздел, можно создавать SEC разделы
0023+  9723 18 02       	jr	.n5
0024+  9725 CB C9       .n4	set	1,c		
0025+  9727 DD 21 00 9E .n5	ld	ix,MBRTable
0026+  972B CD 48 8C    	call	GetMFS		;Поиск раздела MFS
0027+  972E 38 02       	jr	c,.n6
0028+  9730 CB D9       	set	3,c		;Есть раздел 0x53 MFS, значит в нем можно создавать MOA LOC разделы
0029+  9732             .n6
0030+  9732             
0031+  9732             .crmenupart
0032+  9732 79          	ld	a,c
0033+  9733 A7          	and	a
0034+  9734 28 49       	jr	z,.notcr
0035+  9736 DD 21 88 99 	ld	ix,tabCreatePartCMD
0036+  973A 11 94 97    	ld	de,CreatePRIPart
0037+  973D 3E 70       	ld	a,"p"
0038+  973F CB 41       	bit	0,c
0039+  9741 21 68 9B    	ld	hl,msgCrPrimary		;Create Primary Partition
0040+  9744 C4 90 7F    	call	nz,AddCMD
0041+  9747 11 7F 6E    	ld	de,notImplemented
0042+  974A 3E 65       	ld	a,"e"
0043+  974C CB 49       	bit	1,c
0044+  974E 21 84 9B    	ld	hl,msgCrExtended	;Create Extended partition
0045+  9751 C4 90 7F    	call	nz,AddCMD
0046+  9754 11 7F 6E    	ld	de,notImplemented
0047+  9757 3E 73       	ld	a,"s"
0048+  9759 CB 51       	bit	2,c
0049+  975B 21 A0 9B    	ld	hl,msgCrSecondary	;create secondary partition
0050+  975E C4 90 7F    	call	nz,AddCMD
0051+  9761 11 7F 6E    	ld	de,notImplemented
0052+  9764 3E 6D       	ld	a,"m"
0053+  9766 CB 59       	bit	3,c
0054+  9768 21 BC 9B    	ld	hl,msgCrMOALocal	;create MOA Local partition
0055+  976B C4 90 7F    	call	nz,AddCMD	
0056+  976E 11 71 6D    	ld	de,ShowPartition.continue
0057+  9771 3E 71       	ld	a,"q"
0058+  9773 21 85 77    	ld	hl,msgQuit
0059+  9776 CD 90 7F    	call	AddCMD
0060+  9779 21 88 99    	ld	hl,tabCreatePartCMD
0061+  977C C3 A9 7F    	jp	Prompt
0062+  977F 21 0F 9B    .notcr	ld	hl,msgNotingCreate
0063+  9782             	PCHARS
0063+  9782 CD F7 7A    >	call	Print
0064+  9785             	_ANYKEY
0064+  9785 21 7B 74    >	ld	hl,msgAnyKey
0064+  9788 CD F7 7A    >	call	Print
0064+  978B 21 00 00    >	ld	hl,0
0064+  978E CD A9 7F    >	call	Prompt
0065+  9791 C3 71 6D    	jp	ShowPartition.continue
0066+  9794             
0067+  9794             CreatePRIPart
0068+  9794 CD F5 87    	call	CreateMBRUSforPRI
0069+  9797 21 0A 9A    	ld	hl,msgCrPrimaryTxt
0070+  979A             	PCHARS
0070+  979A CD F7 7A    >	call	Print
0071+  979D 3A AE 71    	ld	a,(cntMBRUS)
0072+  97A0 A7          	and	a
0073+  97A1 20 09       	jr	nz,.c1
0074+  97A3 21 DE 9B    	ld	hl,msgNoFreeSpace
0075+  97A6             	PCHARS
0075+  97A6 CD F7 7A    >	call	Print
0076+  97A9 C3 6D 99    	jp	.c2
0077+  97AC 21 8D 8E    .c1	ld	hl,msgListFS
0078+  97AF             	PCHARS
0078+  97AF CD F7 7A    >	call	Print
0079+  97B2 CD 36 82    	call	ShowFSTable
0080+  97B5 21 70 8E    	ld	hl,msgNewID	;Ввод id новой партиции
0081+  97B8             	PCHARS
0081+  97B8 CD F7 7A    >	call	Print
0082+  97BB 21 C9 71    	ld	hl,bufStr
0083+  97BE E5          	push	hl
0084+  97BF 3E 03       	ld	a,3
0085+  97C1 CD F9 7F    	call	EditString
0086+  97C4 E1          	pop	hl
0087+  97C5 DA 1F 98    	jp	c,.ct2
0088+  97C8 CD 06 81    	call	MRNUM
0089+  97CB 79          	ld	a,c
0090+  97CC 32 83 99    	ld	(bCrPartType),a
0091+  97CF A7          	and	a
0092+  97D0 CA 1F 98    	jp	z,.ct2
0093+  97D3 FE 05       	cp	5
0094+  97D5 28 04       	jr	z,.c4
0095+  97D7 FE 0F       	cp	15
0096+  97D9 20 18       	jr	nz,.c3
0097+  97DB             .c4	
0098+  97DB 0E 00       	ld	c,0
0099+  97DD DD 21 00 9E 	ld	ix,MBRTable
0100+  97E1 CD 34 8C    .c6	call	GetExtended
0101+  97E4 38 03       	jr	c,.c5
0102+  97E6 0C          	inc	c
0103+  97E7 18 F8       	jr	.c6
0104+  97E9 79          .c5	ld	a,c
0105+  97EA A7          	and	a
0106+  97EB 28 06       	jr	z,.c3
0107+  97ED 21 67 9A    	ld	hl,msgFoundExtended
0108+  97F0 C3 5F 7A    	jp	DosError
0109+  97F3 21 98 9A    .c3	ld	hl,msgSelMBRUS
0110+  97F6             	PCHARS
0110+  97F6 CD F7 7A    >	call	Print
0111+  97F9 CD 78 87    	call	ShowMBRUS
0112+  97FC 21 B9 99    	ld	hl,msgEnterFreeSpace
0113+  97FF             	PCHARS
0113+  97FF CD F7 7A    >	call	Print
0114+  9802 21 C9 71    	ld	hl,bufStr
0115+  9805 E5          	push	hl
0116+  9806 3E 03       	ld	a,3
0117+  9808 CD F9 7F    	call	EditString
0118+  980B E1          	pop	hl
0119+  980C DA 1F 98    	jp	c,.ct2
0120+  980F CD 06 81    	call	MRNUM
0121+  9812 3A AE 71    	ld	a,(cntMBRUS)
0122+  9815 47          	ld	b,a	
0123+  9816 79          	ld	a,c
0124+  9817 A7          	and	a
0125+  9818 28 05       	jr	z,.ct2
0126+  981A B8          	cp	b
0127+  981B 28 17       	jr	z,.ct3
0128+  981D 38 15       	jr	c,.ct3
0129+  981F 21 13 78    .ct2	ld	hl,msgInvalidParameter
0130+  9822             .err	PCHARS
0130+  9822 CD F7 7A    >	call	Print
0131+  9825             	_ANYKEY
0131+  9825 21 7B 74    >	ld	hl,msgAnyKey
0131+  9828 CD F7 7A    >	call	Print
0131+  982B 21 00 00    >	ld	hl,0
0131+  982E CD A9 7F    >	call	Prompt
0132+  9831 C3 71 6D    	jp	ShowPartition.continue
0133+  9834 32 82 99    .ct3	ld	(bCrSpace),a
0134+  9837 21 EA 99    	ld	hl,msgPartitionSize
0135+  983A             	PCHARS
0135+  983A CD F7 7A    >	call	Print
0136+  983D 21 C9 71    	ld	hl,bufStr
0137+  9840 E5          	push	hl
0138+  9841 3E 05       	ld	a,5
0139+  9843 CD F9 7F    	call	EditString
0140+  9846 E1          	pop	hl
0141+  9847 38 D6       	jr	c,.ct2
0142+  9849 CD 06 81    	call	MRNUM
0143+  984C 79          	ld	a,c
0144+  984D B0          	or	b
0145+  984E 28 CF       	jr	z,.ct2
0146+  9850             ;Переводим Мб в сектора
0147+  9850 AF          	xor	a
0148+  9851 32 84 99    	ld	(dwCrPartSize),a
0149+  9854             	dup	3
0150+  9854 CB 11       >	rl	c
0151+  9856 CB 10       >	rl	b
0152+  9858 CB 17       >	rl	a
0150+  985A CB 11       >	rl	c
0151+  985C CB 10       >	rl	b
0152+  985E CB 17       >	rl	a
0150+  9860 CB 11       >	rl	c
0151+  9862 CB 10       >	rl	b
0152+  9864 CB 17       >	rl	a
0154+  9866 32 87 99    	ld	(dwCrPartSize+3),a
0155+  9869 ED 43 85 99 	ld	(dwCrPartSize+1),bc
0156+  986D 3A 82 99    	ld	a,(bCrSpace)
0157+  9870 DD 21 E0 9F 	ld	ix,MBRUSTable
0158+  9874 11 08 00    	ld	de,MBRUSFIELDSIZE
0159+  9877 3D          .cr4	dec	a
0160+  9878 28 04       	jr	z,.cr3
0161+  987A DD 19       	add	ix,de
0162+  987C 18 F9       	jr	.cr4
0163+  987E             .cr3
0164+  987E DD E5       	push	ix
0165+  9880             ;Проверяем помещается ли введенный размер в заданную область?
0166+  9880 ED 5B 84 99 	ld	de,(dwCrPartSize)
0167+  9884 DD 6E 04    	ld	l,(ix+4)
0168+  9887 DD 66 05    	ld	h,(ix+5)
0169+  988A DD 4E 06    	ld	c,(ix+6)
0170+  988D DD 46 07    	ld	b,(ix+7)
0171+  9890 C5          	push	bc
0172+  9891 D9          	exx
0173+  9892 E1          	pop	hl
0174+  9893 ED 5B 86 99 	ld	de,(dwCrPartSize+2)
0175+  9897 CD 94 8B    	call	Compare32
0176+  989A 21 95 99    	ld	hl,msgSizeTooLarge
0177+  989D DA 22 98    	jp	c,.err
0178+  98A0             ;Создаем запись в таблице
0179+  98A0 DD 4E 00    	ld	c,(ix+0)
0180+  98A3 DD 46 01    	ld	b,(ix+1)
0181+  98A6 DD 6E 02    	ld	l,(ix+2)
0182+  98A9 DD 66 03    	ld	h,(ix+3)
0183+  98AC CD B6 8C    	call	LBAtoCHS
0184+  98AF 22 7E 99    	ld	(dCrCylinder),hl
0185+  98B2 79          	ld	a,c
0186+  98B3 32 80 99    	ld	(bCrHead),a
0187+  98B6 78          	ld	a,b
0188+  98B7 32 81 99    	ld	(bCrSector),a
0189+  98BA 3A A1 71    	ld	a,(partCount)
0190+  98BD 3C          	inc	a
0191+  98BE CD A9 8C    	call	GetMBRROWbyNum
0192+  98C1 97          	sub	a
0193+  98C2 DD 77 00    	ld	(ix+0),a
0194+  98C5 DD 77 01    	ld	(ix+1),a
0195+  98C8 DD 77 02    	ld	(ix+2),a
0196+  98CB DD 77 03    	ld	(ix+3),a
0197+  98CE 3D          	dec	a
0198+  98CF DD 77 04    	ld	(ix+4),a	;Number of partition, #ff - временный номер, после сортировки поменяется на верный
0199+  98D2 AF          	xor	a
0200+  98D3 DD 77 05    	ld	(ix+5),a	;active
0201+  98D6             ;	ld	a,(bCrHead)
0202+  98D6 DD 71 06    	ld	(ix+6),c	;head
0203+  98D9 78          	ld	a,b	;(bCrSector)
0204+  98DA E6 3F       	and	63
0205+  98DC 47          	ld	b,a
0206+  98DD 7C          	ld	a,h	;(dCrCylinder+1)
0207+  98DE E6 03       	and	3
0208+  98E0 0F          	rrca
0209+  98E1 0F          	rrca
0210+  98E2 B0          	or	b
0211+  98E3 DD 77 07    	ld	(ix+7),a	;Sector+H.Cylinder
0212+  98E6 7D          	ld	a,l	;(dCrCylinder)
0213+  98E7 DD 77 08    	ld	(ix+8),a	;L.Cylinder
0214+  98EA 3A 83 99    	ld	a,(bCrPartType)
0215+  98ED DD 77 09    	ld	(ix+9),a	;PartID
0216+  98F0 FD E1       	pop	iy
0217+  98F2             ;в iy у нас строка MBRUSTable
0218+  98F2             ;расчитываем адрес CHS конца раздела
0219+  98F2 2A 84 99    	ld	hl,(dwCrPartSize)
0220+  98F5 FD 4E 00    	ld	c,(iy+0)
0221+  98F8 FD 46 01    	ld	b,(iy+1)
0222+  98FB 09          	add	hl,bc
0223+  98FC E5          	push	hl
0224+  98FD 2A 86 99    	ld	hl,(dwCrPartSize+2)
0225+  9900 FD 4E 02    	ld	c,(iy+2)
0226+  9903 FD 46 03    	ld	b,(iy+3)
0227+  9906 ED 4A       	adc	hl,bc
0228+  9908 C1          	pop	bc
0229+  9909 A7          	and	a
0230+  990A 0B          	dec	bc
0231+  990B 30 01       	jr	nc,.decHLBC
0232+  990D 2B          	dec	hl
0233+  990E             .decHLBC
0234+  990E CD B6 8C    	call	LBAtoCHS
0235+  9911 DD 71 0A    	ld	(ix+10),c	;head
0236+  9914 78          	ld	a,b	;(bCrSector)
0237+  9915 E6 3F       	and	63
0238+  9917 47          	ld	b,a
0239+  9918 7C          	ld	a,h	;(dCrCylinder+1)
0240+  9919 E6 03       	and	3
0241+  991B 0F          	rrca
0242+  991C 0F          	rrca
0243+  991D B0          	or	b
0244+  991E DD 77 0B    	ld	(ix+11),a	;Sector+H.Cylinder
0245+  9921 7D          	ld	a,l	;(dCrCylinder)
0246+  9922 DD 77 0C    	ld	(ix+12),a	;L.Cylinder
0247+  9925             ;LBA	начало
0248+  9925 FD 7E 00    	ld	a,(iy+0)
0249+  9928 DD 77 0D    	ld	(ix+13),a
0250+  992B FD 7E 01    	ld	a,(iy+1)
0251+  992E DD 77 0E    	ld	(ix+14),a
0252+  9931 FD 7E 02    	ld	a,(iy+2)
0253+  9934 DD 77 0F    	ld	(ix+15),a
0254+  9937 FD 7E 03    	ld	a,(iy+3)
0255+  993A DD 77 10    	ld	(ix+16),a
0256+  993D 2A 84 99    	ld	hl,(dwCrPartSize)
0257+  9940 DD 75 11    	ld	(ix+17),l
0258+  9943 DD 74 12    	ld	(ix+18),h
0259+  9946 2A 86 99    	ld	hl,(dwCrPartSize+2)
0260+  9949 DD 75 13    	ld	(ix+19),l
0261+  994C DD 74 14    	ld	(ix+20),h
0262+  994F 11 15 00    	ld	de,21
0263+  9952 DD E5       	push	ix
0264+  9954 E1          	pop	hl
0265+  9955 19          	add	hl,de
0266+  9956 EB          	ex	de,hl
0267+  9957 21 D2 86    	ld	hl,txtNoLabel
0268+  995A 01 0B 00    	ld	bc,11
0269+  995D ED B0       	ldir
0270+  995F 21 A1 71    	ld	hl,partCount
0271+  9962 34          	inc	(hl)
0272+  9963 21 AD 71    	ld	hl,cntOperations
0273+  9966 34          	inc	(hl)
0274+  9967 21 8D 79    	ld	hl,msgOK
0275+  996A             	PCHARS
0275+  996A CD F7 7A    >	call	Print
0276+  996D             .c2	_ANYKEY
0276+  996D 21 7B 74    >	ld	hl,msgAnyKey
0276+  9970 CD F7 7A    >	call	Print
0276+  9973 21 00 00    >	ld	hl,0
0276+  9976 CD A9 7F    >	call	Prompt
0277+  9979 C3 71 6D    	jp	ShowPartition.continue
0278+  997C 00 00       dCrTemp	dw	0
0279+  997E             dCrCylinder
0280+  997E 00 00       	dw	0
0281+  9980 00          bCrHead	db	0
0282+  9981             bCrSector
0283+  9981 00          	db	0
0284+  9982             bCrSpace
0285+  9982 00          	db	0
0286+  9983             bCrPartType
0287+  9983 00          	db	0
0288+  9984             dwCrPartSize
0289+  9984 00 00 00 00 	dw	0,0
0290+  9988             tabCreatePartCMD
0291+  9988 00          	ds	3*4
0292+  9994 00          	db	0
0293+  9995             msgSizeTooLarge
0294+  9995             	db	CR,LF,COL,C_WARN,"The entered size too large!",COL,C_NORM,CR,LF,EN
0294+  9995 0D0A100254686520656E74657265642073697A6520746F6F206C617267652110
0294+  99B5 070D0A00
0295+  99B9             msgEnterFreeSpace
0296+  99B9             	db	CR,LF,"Enter number of free space for new partition: ",EN
0296+  99B9 0D0A456E746572206E756D626572206F66206672656520737061636520666F72
0296+  99D9 206E657720706172746974696F6E3A2000
0297+  99EA             msgPartitionSize
0298+  99EA             	db	CR,LF,"Enter size of partition, Mb: ",EN
0298+  99EA 0D0A456E7465722073697A65206F6620706172746974696F6E2C204D623A2000
0299+  9A0A             msgCrPrimaryTxt
0300+  9A0A             	db	"Create PRIMARY partition...",CR,LF,EN
0300+  9A0A 437265617465205052494D41525920706172746974696F6E2E2E2E0D0A00
0301+  9A28             msgCrSecondaryTxt
0302+  9A28             	db	"Create SECONDARY partition...",CR,LF,EN
0302+  9A28 437265617465205345434F4E4441525920706172746974696F6E2E2E2E0D0A00
0303+  9A48             msgCrExtendedTxt
0304+  9A48             	db	"Create EXTENDED partition...",CR,LF,EN
0304+  9A48 43726561746520455854454E44454420706172746974696F6E2E2E2E0D0A00
0305+  9A67             msgFoundExtended
0306+  9A67             	db	CR,LF,COL,C_WARN,"Extended partition must be the only one!",COL,C_NORM,CR,LF,EN
0306+  9A67 0D0A1002457874656E64656420706172746974696F6E206D7573742062652074
0306+  9A87 6865206F6E6C79206F6E652110070D0A00
0307+  9A98             msgSelMBRUS
0308+  9A98             	db	CR,LF,"Select free space on disk for new partition:",CR,LF,CR,LF
0308+  9A98 0D0A53656C6563742066726565207370616365206F6E206469736B20666F7220
0308+  9AB8 6E657720706172746974696F6E3A0D0A0D0A
0309+  9ACA             	db	"        Start    Size,sec Size",CR,LF
0309+  9ACA 202020202020202053746172742020202053697A652C7365632053697A650D0A
0310+  9AEA             	db	"        -------- -------- --------",CR,LF,EN
0310+  9AEA 20202020202020202D2D2D2D2D2D2D2D202D2D2D2D2D2D2D2D202D2D2D2D2D2D
0310+  9B0A 2D2D0D0A00
0311+  9B0F             msgNotingCreate
0312+  9B0F             	db	CR,LF,COL,C_WARN,"Can't create any partition on this disk!",COL,C_NORM,CR,LF,EN
0312+  9B0F 0D0A100243616E27742063726561746520616E7920706172746974696F6E206F
0312+  9B2F 6E2074686973206469736B2110070D0A00
0313+  9B40             msgCrPartition
0314+  9B40             	db	"Create partition...",CR,LF
0314+  9B40 43726561746520706172746974696F6E2E2E2E0D0A
0315+  9B55             	db	CR,LF,"Select command: ",EN
0315+  9B55 0D0A53656C65637420636F6D6D616E643A2000
0316+  9B68             msgCrPrimary
0317+  9B68             	db	COL,C_CMD,"[P] ",COL,C_NORM,"- "
0317+  9B68 10065B505D2010072D20
0318+  9B72             .txt	db	"Create PRI part. ",EN
0318+  9B72 4372656174652050524920706172742E2000
0319+  9B84             msgCrExtended
0320+  9B84             	db	COL,C_CMD,"[E] ",COL,C_NORM,"- "
0320+  9B84 10065B455D2010072D20
0321+  9B8E             .txt	db	"Create EXT part. ",EN
0321+  9B8E 4372656174652045585420706172742E2000
0322+  9BA0             msgCrSecondary
0323+  9BA0             	db	COL,C_CMD,"[S] ",COL,C_NORM,"- "
0323+  9BA0 10065B535D2010072D20
0324+  9BAA             .txt	db	"Create SEC part. ",EN
0324+  9BAA 4372656174652053454320706172742E2000
0325+  9BBC             msgCrMOALocal
0326+  9BBC             	db	COL,C_CMD,"[M] ",COL,C_NORM,"- "
0326+  9BBC 10065B4D5D2010072D20
0327+  9BC6             .txt	db	"Create MOA Local part. ",EN
0327+  9BC6 437265617465204D4F41204C6F63616C20706172742E2000
0328+  9BDE             msgNoFreeSpace
0329+  9BDE             	db	CR,LF,COL,C_WARN,"Not enought free space!",COL,C_NORM,CR,LF,EN
0329+  9BDE 0D0A10024E6F7420656E6F7567687420667265652073706163652110070D0A00
0330+  9BFE             
1399   9BFE             	include	"fdisk_format.asm"
0001+  9BFE             ;Форматирование разделов
0002+  9BFE             FormatPartition
0003+  9BFE 21 0B 9D    	ld	hl,msgFormatPartition
0004+  9C01             	PCHARS
0004+  9C01 CD F7 7A    >	call	Print
0005+  9C04 3A AD 71    	ld	a,(cntOperations)
0006+  9C07 A7          	and	a
0007+  9C08 28 15       	jr	z,.ct4
0008+  9C0A 21 95 79    	ld	hl,msgApplyBeforeThisOps
0009+  9C0D             	PCHARS
0009+  9C0D CD F7 7A    >	call	Print
0010+  9C10             	_ANYKEY
0010+  9C10 21 7B 74    >	ld	hl,msgAnyKey
0010+  9C13 CD F7 7A    >	call	Print
0010+  9C16 21 00 00    >	ld	hl,0
0010+  9C19 CD A9 7F    >	call	Prompt
0011+  9C1C C3 71 6D    	jp	ShowPartition.continue
0012+  9C1F 21 D5 77    .ct4	ld	hl,msgPromptNumber
0013+  9C22             	PCHARS
0013+  9C22 CD F7 7A    >	call	Print
0014+  9C25 21 C9 71    	ld	hl,bufStr
0015+  9C28 E5          	push	hl
0016+  9C29 3E 02       	ld	a,2
0017+  9C2B CD F9 7F    	call	EditString
0018+  9C2E E1          	pop 	hl
0019+  9C2F DA 71 6D    	jp	c,ShowPartition.continue
0020+  9C32 CD 06 81    	call	MRNUM
0021+  9C35 38 0D       	jr	c,.ct2
0022+  9C37 3A A1 71    	ld	a,(partCount)
0023+  9C3A 47          	ld	b,a	
0024+  9C3B 79          	ld	a,c
0025+  9C3C A7          	and	a
0026+  9C3D 28 05       	jr	z,.ct2
0027+  9C3F B8          .ct1	cp	b
0028+  9C40 28 0B       	jr	z,.ct3
0029+  9C42 38 09       	jr	c,.ct3
0030+  9C44 21 13 78    .ct2	ld	hl,msgInvalidParameter
0031+  9C47             	PCHARS
0031+  9C47 CD F7 7A    >	call	Print
0032+  9C4A C3 0B 6E    	jp	hddCMD
0033+  9C4D             .ct3
0034+  9C4D 79          	ld	a,c
0035+  9C4E CD A9 8C    	call	GetMBRROWbyNum
0036+  9C51 DD 7E 09    	ld	a,(ix+9)	;ID
0037+  9C54 47          	ld	b,a
0038+  9C55 F5          	push	af
0039+  9C56 11 99 9C    	ld	de,msgFormatFS.type
0040+  9C59 CD FA 81    	call	GetFSName
0041+  9C5C 21 8E 9C    	ld	hl,msgFormatFS
0042+  9C5F             	PCHARS
0042+  9C5F CD F7 7A    >	call	Print
0043+  9C62 F1          	pop	af
0044+  9C63 FE 05       	cp	5
0045+  9C65 28 0D       	jr	z,ExtPartFormat
0046+  9C67 FE 0F       	cp	15
0047+  9C69 28 09       	jr	z,ExtPartFormat
0048+  9C6B FE 53       	cp	0x53
0049+  9C6D 28 02       	jr	z,FormatMOA
0050+  9C6F 18 08       	jr	UnknownFS
0051+  9C71             FormatMOA
0052+  9C71             	;Форматирование локальных разделов MOA FS
0053+  9C71 C3 7F 6E    	jp	notImplemented
0054+  9C74             ExtPartFormat
0055+  9C74 21 AF 9C    	ld	hl,msgFormatExt
0056+  9C77 18 03       	jr	ErrFormat
0057+  9C79             UnknownFS
0058+  9C79 21 E0 9C    	ld	hl,msgNotSupported
0059+  9C7C             ErrFormat
0060+  9C7C             	PCHARS
0060+  9C7C CD F7 7A    >	call	Print
0061+  9C7F             	_ANYKEY
0061+  9C7F 21 7B 74    >	ld	hl,msgAnyKey
0061+  9C82 CD F7 7A    >	call	Print
0061+  9C85 21 00 00    >	ld	hl,0
0061+  9C88 CD A9 7F    >	call	Prompt
0062+  9C8B C3 71 6D    	jp	ShowPartition.continue
0063+  9C8E             msgFormatFS
0064+  9C8E             	db	CR,LF,"Type: ",COL,C_VAL,"["
0064+  9C8E 0D0A547970653A2010055B
0065+  9C99             .type	db	"0123456789Abcdef]",COL,C_NORM,CR,LF,EN
0065+  9C99 303132333435363738394162636465665D10070D0A00
0066+  9CAF             msgFormatExt
0067+  9CAF             	db	CR,LF,COL,C_WARN,"Extended partition can not be formatted!",COL,C_NORM,CR,LF,EN
0067+  9CAF 0D0A1002457874656E64656420706172746974696F6E2063616E206E6F742062
0067+  9CCF 6520666F726D61747465642110070D0A00
0068+  9CE0             msgNotSupported
0069+  9CE0             	db	CR,LF,COL,C_WARN,"This file system is not supported!",COL,C_NORM,CR,LF,EN
0069+  9CE0 0D0A1002546869732066696C652073797374656D206973206E6F742073757070
0069+  9D00 6F727465642110070D0A00
0070+  9D0B             msgFormatPartition
0071+  9D0B             	db	"Format partition...",CR,LF,EN
0071+  9D0B 466F726D617420706172746974696F6E2E2E2E0D0A00
0072+  9D21             
0073+  9D21             
1400   9D21             	include	"libs\math.asm"
0001+  9D21             ;=============================
0002+  9D21             ;	16-bit multiply
0003+  9D21             ;	Tim Paterson
0004+  9D21             ;=============================
0005+  9D21 21 00 00    MUL16	ld	hl,0
0006+  9D24             MUL_HLBC_DE
0007+  9D24 78          	ld	a,b
0008+  9D25 06 11       	ld	b,0x11
0009+  9D27 18 07       	jr	.l1
0010+  9D29 30 01       .l2	jr	nc,.l3
0011+  9D2B 19          	add	hl,de
0012+  9D2C CB 1C       .l3	rr	h
0013+  9D2E CB 1D       	rr	l
0014+  9D30 1F          .l1	rra
0015+  9D31 CB 19       	rr	c
0016+  9D33 10 F4       	djnz	.l2
0017+  9D35 47          	ld	b,a
0018+  9D36 C9          	ret
0019+  9D37             
0020+  9D37             ;=============================
0021+  9D37             ;	16-bit divide
0022+  9D37             ;	Tim Paterson
0023+  9D37             ;=============================
0024+  9D37             ;Делит HLBC на DE
0025+  9D37             ;на выходе HL - остаток, BC - частное
0026+  9D37 21 00 00    DIV16	ld	hl,0
0027+  9D3A             DIV_HLBC_DE
0028+  9D3A 78          	ld	a,b
0029+  9D3B 06 10       	ld	b,0x10
0030+  9D3D CB 11       	rl	c
0031+  9D3F 17          	rla
0032+  9D40 CB 15       .l1	rl	l
0033+  9D42 CB 14       	rl	h
0034+  9D44 38 0D       	jr	c,.l2
0035+  9D46 ED 52       	sbc	hl,de
0036+  9D48 30 01       	jr	nc,.l3
0037+  9D4A 19          	add	hl,de
0038+  9D4B 3F          .l3	ccf
0039+  9D4C CB 11       .l4	rl	c
0040+  9D4E 17          	rla
0041+  9D4F 10 EF       	djnz	.l1
0042+  9D51 47          	ld	b,a
0043+  9D52 C9          	ret
0044+  9D53 B7          .l2	or	a
0045+  9D54 ED 52       	sbc	hl,de
0046+  9D56 18 F4       	jr	.l4
0047+  9D58             
1401   9D58             
1402   9D58             JMP_Table
1403   9D58             	include	"fdisk_ovl.asm"
0001+  9D58             	phase	0xbf02
0002+  BF02             _ClearScreen
0003+  BF02 C3 CF 7A    	jp	ClearScr
0004+  BF05             _PrintChar
0005+  BF05 C3 F7 7A    	jp	Print
0006+  BF08             _ScrollUP
0007+  BF08 C3 93 7C    	jp	ScrollUP
0008+  BF0B             _CursorOn
0009+  BF0B C3 A6 7D    	jp	CursorOn
0010+  BF0E             _CursorOff
0011+  BF0E C3 B3 7D    	jp	CursorOff
0012+  BF11 C3 90 7F    _AddCMD	jp	AddCMD
0013+  BF14             _SelectCMD			;заглушка для будущей подпрограммы выбора пунктов меню
0014+  BF14 C9          	ret
0015+  BF15 00 00       	db	0,0
0016+  BF17 C3 A9 7F    _Prompt	jp	Prompt
0017+  BF1A             _EditString
0018+  BF1A C3 F9 7F    	jp	EditString
0019+  BF1D C3 AC 80    _PRNUM	jp	PRNUM
0020+  BF20 C3 B3 80    _PRNUM0	jp	PRNUM0
0021+  BF23 C9          _SetDEC	ret
0022+  BF24 00 00       	db	0,0
0023+  BF26 C9          _SetHEX	ret
0024+  BF27 00 00       	db	0,0
0025+  BF29 C3 06 81    _MRNUM	jp	MRNUM
0026+  BF2C             _ByteToHEX
0027+  BF2C C3 88 81    	jp	ByteToHEX
0028+  BF2F             _PRNUMSEC
0029+  BF2F C3 A2 81    	jp	PRNUMSEC
0030+  BF32             _PRNUMBYTES
0031+  BF32 C3 AC 81    	jp	PRNUMBYTES
0032+  BF35 C3 C3 7D    _OpenPG	jp	OpenPG
0033+  BF38             _ShowPartitions
0034+  BF38 C3 15 8C    	jp	ShowPartitions
0035+  BF3B             _GetLastPartition
0036+  BF3B C3 24 8C    	jp	GetLastPartition
0037+  BF3E             _GetExtended
0038+  BF3E C3 34 8C    	jp	GetExtended
0039+  BF41             _NextSecondary
0040+  BF41 C3 59 8C    	jp	NextSecondary
0041+  BF44             _CheckSecondary
0042+  BF44 C3 6F 8C    	jp	CheckSecondary
0043+  BF47             _CheckPrimary
0044+  BF47 C3 84 8C    	jp	CheckPrimary
0045+  BF4A             _NextPrimary
0046+  BF4A C3 9D 8C    	jp	NextPrimary
0047+  BF4D             _ShowMBRUS
0048+  BF4D C3 78 87    	jp	ShowMBRUS
0049+  BF50             	ent
1404   9DA6             JMP_TableEnd
1405   9DA6             MainEnd
1406   9DA6             
1407   9DA6 00          	align 256
1408   9E00             
1409   9E00             MBRTable=$	;hDrvSign+1024						;таблица MBR
1410   9E00             MBRUSTable=MBRTable+(MAXMBRFIELDS*MBRFIELDSIZE)	;таблица неиспользуемого пространства
1411   9E00             
1412   9E00             ;должна быть выровнена по 256
1413   9E00             Buffer=#c000							;Буфер для сектора статуса винтов 2*512
1414   9E00             ;(((MBRUSTable+(MAXMBRUS*MBRUSFIELDSIZE))/256)+1)*256			;Буфер для сектора статуса винтов 2*512
1415   9E00             SectorBuffer=Buffer+1024					;буфер для чтения/записи сектора
1416   9E00             SectorBuffer1=SectorBuffer+512					;буфер 2 для чтения/записи сектора
1417   9E00             SectorBuffer2=SectorBuffer1+512					;буфер 3 для чтения/записи сектора
1418   9E00             
1419   9E00             MainSize=MainEnd-FDISKSTART
1420   9E00             ; IF _TARGET=_ZX128 | _TARGET=_PROFI | _TARGET=_ATM
1421   9E00             ;  IFNDEF RELEASE
1422   9E00             ;//	savesna	"fdisk_main.sna",MainStart
1423   9E00             	savebin	"out\fdisk.bin",FDISKSTART,$-FDISKSTART
1424   9E00             ; ENDIF
1425   9E00             	export	_DRVORG
1426   9E00             	export	FDISKSTART
1427   9E00             	export	MainStart
1428   9E00             	export	MainSize
1429   9E00             
1430   9E00             ;Для генерации ридми-файла:
1431   9E00             hlpString
1432   9E00             	db	"                      FDISK by Hard/WCG",CR,LF
1432   9E00 20202020202020202020202020202020202020202020464449534B2062792048
1432   9E20 6172642F5743470D0A
1433   9E29             	db	"---------------------------------------------------------------",CR,LF
1433   9E29 2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
1433   9E49 2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0D
1433   9E69 0A
1434   9E6A             	db	"Version:  ",VERSION, CR,LF
1434   9E6A 56657273696F6E3A2020302E320D0A
1435   9E79             	db	"Build:    ",BUILD_COUNT_T,CR,LF
1435   9E79 4275696C643A202020203335370D0A
1436   9E88             	db	"Date:     ",BUILD_DATE_T, " ", BUILD_TIME_T,CR,LF
1436   9E88 446174653A202020202031312E31302E31332032333A32370D0A
1437   9EA2             	db	"Platform: ", _TARGET_T,CR,LF
1437   9EA2 506C6174666F726D3A205A582D537065637472756D3132384B0D0A
1438   9EBD             	db	"Autor:    Mikhaltchenkov Dmitry aka Hard/WitchCraft Group",CR,LF
1438   9EBD 4175746F723A202020204D696B68616C746368656E6B6F7620446D6974727920
1438   9EDD 616B6120486172642F576974636843726166742047726F75700D0A
1439   9EF8             	db	"E-Mail:   witchcraft2001@mail.ru",CR,LF
1439   9EF8 452D4D61696C3A2020207769746368637261667432303031406D61696C2E7275
1439   9F18 0D0A
1440   9F1A             	db	"---------------------------------------------------------------",CR,LF,CR,LF
1440   9F1A 2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
1440   9F3A 2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0D
1440   9F5A 0A0D0A
1441   9F5D             	SAVEBIN	"out\header.txt",hlpString,$-hlpString

Value    Label
------ - -----------------------------------------------------------
0x0006   C_CMD
0x0007   C_NORM
0x0002   C_WARN
0x0005   C_VAL
0x0004   C_PRI
0x0003   C_SEC
0x0001   C_EXT
0x0004   C_DMP
0x0001   _SPRINTER
0x0002   _ZX128
0x0003   _PROFI
0x0004   _ATM
0x000D   CR
0x000A   LF
0x0000   EN
0x0010   COL
0x0002   _TARGET
0xBE00   IMVector
0x000F   MAXMBRFIELDS
0x0020   MBRFIELDSIZE
0x0008   MBRUSFIELDSIZE
0x0008   MAXMBRUS
0x000C   MAXSHORTSNSHOW
0x0018   MAXSHORTMODELSHOW
0x0165 X BUILD_COUNT
0x000B X BUILD_DAY
0x000A X BUILD_MONTH
0x07DD X BUILD_YEAR
0x0001   _IM
0x6000   _ORG
0x6000   FDISKSTART
0x6000   hDrvSign
0x6000 X DRVSTART
0x0000 X Hddinit
0x0001 X Hddoff
0x0002 X Hddrds
0x0003 X Hddrdm
0x6000 X NemoIDE
0x6005   NemoIDE.str
0x6037   TBLHDDN
0x6048   HDDINIT
0x6077   HDDSETMASTER
0x6083   HDDSETSLAVE
0x6076   HDDOFF
0x60C4   HDDRDS
0x60EA   HDDWTS
0x60C6   HDDRDM
0x60EC   HDDWTM
0x6047   MS
0x00F0   P_1F7
0x00D0   P_1F6
0x00B0   P_1F5
0x0090   P_1F4
0x0070   P_1F3
0x0050   P_1F2
0x0030 X P_1F1
0x0010   P_1F0
0x00C8 X P_3F6
0x0011   P_HI
0x1011 X PRT_RW
0x6078   hddmaster_exist
0x6084   hddslave_exist
0x619C   ID_DEV
0x608C   INIT_91
0x607E   HDDSET1
0x60C0   INI_912
0x60B3   INI_911
0x6171   SETHREG
0x610B   W_DRQ
0x60D6   HDDRD2
0x6121   READSEC
0x60DC   HDDRD3
0x60FC   HDDWTM.w1
0x6141   WRITESEC
0x6117   W_BSY
0x610E   W_DRQ.drq
0x611A   W_BSY.bsy
0x6125   READSEC.rs1
0x6145   WRITESEC.ss1
0x6183   SETHRE1
0x61E7   NO_DEV
0x61BF   ID_DEV1
0x61D2   ID_DEV2
0x61EA X DRVEND
0x6005   hDrvVersion
0x6020   hDrvEntry
0x6000   _DRVORG
0x6400   font
0x6C00 X MainStart
0x9D58   JMP_Table
0x9DA6   JMP_TableEnd
0x7ACC   InitConsole
0x7DBC   curShow
0x7DC3   OpenPG
0x712D   IM2Init
0x6C1C   MainLoop
0x7209   msgHello
0x7AF7   Print
0x7DD0   LoadDriver
0x71AF   msgSign
0x6C2D   MainLoop.signchk
0x6CEC   wrong
0x7E68   DrvLoaded
0x71BD   strDrvFileName
0x6C42   MainLoop.ne1
0x7EBE   msgDrvLoad.name
0x72B4   msgDriver.fn
0x72D7   msgDriver.str
0x7ACF   ClearScr
0x6C58   MainNoDrvLoad
0x72A2   msgDriver
0x7308   msgFindDrives
0x71AD   cntOperations
0x7152   IM1SET
0xC000   Buffer
0x71AB   statDrv
0x7149   IM2SET
0x6FDF   ShowStat
0x6C9C   MainNoDrvLoad.l1
0x6C94   MainNoDrvLoad.l4
0x7451   msgHDDNotFound
0x6CF2   wr1
0x6CE0   MainNoDrvLoad.l3
0x746F   msgSelected
0x7330   msgMaster
0x6CBE   MainNoDrvLoad.l2
0x7338   msgSlave
0x71A2   devSelected
0x733F   msgDevice
0x749C   msgAnyKeyQuit
0x7FA9   Prompt
0x6E57   dlgAppQuit
0x6D20   selHDD
0x741A   msgSelectDrive
0x6D0A   tblMasterSlave
0x72F8   msgSignFail
0x747B   msgAnyKey
0x6D04   jpMain
0x6D1B   hddMaster
0x6D1E   hddSlave
0x6D14   tblLarge
0x6D54   ShowPartition
0x6D2A   selHDD.s1
0x785F   msgLarge
0x6D62   ShowPartition.s1
0x8534   CreateMBRTable
0x707D   GetHDDPar
0x6D71   ShowPartition.continue
0x6D80   ShowPartition.n1
0x74E1   msgHDDShortInfo
0x71A1   partCount
0x6D9D   ShowPartition.s2
0x751B   msgMBRNotFound
0x6DAD   ShowPartition.s0
0x7535   msgMBRHead
0x9E00   MBRTable
0x8C15   ShowPartitions
0x75F4   msgPartCount.cnt
0x80AC   PRNUM
0x71A7   hddTotalSector
0x7611   msgPartCount.total
0x8188   ByteToHEX
0x8929   CreateMBRUS
0x7628   msgPartCount.unused
0x75E9   msgPartCount
0x6E0B   hddCMD
0x7938   msgPending.cnt
0x7921   msgPending
0x7683   msgMBRCommands
0x6E17   tabMBRCmd
0x6E4E   partQuit
0x6E94   DSector
0x8D3C   ChangeTypeFS
0x8EBF   SetBootable
0x8FFA   BackupPartitions
0x968F   DeletePart
0x6E7F   notImplemented
0x9154   RestorePartition
0x96F6   CreatePartition
0x9BFE   FormatPartition
0x6E39   dlgPending
0x7941   msgPendingOps
0x6E44   dlgYesNo
0x6E78   tabYesNo
0x6E4A   dlgPendYes
0x6E4C   dlgPendNo
0x6E5A X dlgAppQuit.exit
0x79DB   msgNotImplemented
0x77F5   msgDumpSector
0x7796   msgPromptNumber0
0x71C9   bufStr
0x7FF9   EditString
0x8106   MRNUM
0x6EC6   DSector.inval
0x6EC1   DSector.ds1
0x8344   dumpSector
0x6ECF   DSector.ds2
0x7813   msgInvalidParameter
0x77F3   msgDumpSectorCR
0x6EDA X DSector.dmaster
0x6EE2   DSector.ds4
0x6EE0   DSector.ds3
0x6F07   ShowPartInfo
0x75AC   msgMBRRow.num
0x6F37   ShowPartInfo.s1
0x6F33   ShowPartInfo.ext1
0x75AA   msgMBRRow
0x6F49   ShowPartInfo.s2
0x6FDC   ShowPartInfo.err
0x75BF   msgMBRRow.id
0x75C2   msgMBRRow.type
0x81FA   GetFSName
0x6F78   ShowPartInfo.e1
0x75D3   msgMBRRow.start
0x75DC   msgMBRRow.size
0x75B3   msgMBRRow.label
0x6FF4   ShowStat.bMaster
0x6FEB   ShowStat.n1
0x6FFD   ShowStat.n2
0x700A   ShowStat.drvNotFound
0x7012   ShowStat.drvIsHDD
0x7347   msgNotHDD
0x731F   msgNotFound
0x7076   ShowStat.n4
0x732C   msgFound
0x7024   ShowStat.n3
0x73AA   msgHDDInfo.sn
0x710D   CopyVars
0x73CE   msgHDDInfo.fw
0x7369   msgHDDInfo.model
0x7123   GetWord
0x73EB   msgHDDInfo.cyl
0x80B3   PRNUM0
0x73FE   msgHDDInfo.head
0x7411   msgHDDInfo.sec
0x735D   msgHDDInfo
0x729F   msgCRLF
0x7089   GetHDDPar.n3
0x71A3   hddCylinders
0x71A5   hddHeads
0x71A6   hddSectors
0x70BD   GetHDDPar.n4
0x70D2   GetHDDPar.skip1
0x7509   msgHDDShortInfo.sn
0x70CF   GetHDDPar.skip2
0x70D6   GetHDDPar.end1
0x70F0   GetHDDPar.copy
0x70E3   GetHDDPar.cp1
0x70F5   GetHDDPar.next
0x74E4   msgHDDShortInfo.model
0x7113   CopyVars.cv1
0x7115   CopyVars.cv
0x7129   GetWord.g1
0x7136   L1
0x715B   IMER
0x718C   IMER.skip
0x7DBD   curIterate
0x7DBE   curState
0x7189   IMER.s1
0x7B5A   PCH
0x71AE   cntMBRUS
0x71B3   strPartSign
0x744F   msgPrompt
0x74D0 X msgReadMBR
0x7785   msgQuit
0x77D5   msgPromptNumber
0x782E   msgMBRTableIsNull
0x798D   msgOK
0x7995   msgApplyBeforeThisOps
0x7A1D   _trdos
0x7A4A   _trdos.err2
0x7A42   _trdos.err1
0x7A5C   GeneralDosError
0x7A71   msgDosError
0x7A5F   DosError
0x7A92   msgDOSDirFull
0x7AAD   msgDOSNoFree
0x7DBF   COORDS
0x7AE9 X PAUSE1
0x7AEB X PAUSE
0x7AF1   WAIT1
0x7B21   Print.C1
0x7B1E   Print.pskip
0x7B3B   Print.C13
0x7B53   Print.C16
0x7B13   Print.skipSym
0x7B5A   PrintSym
0x7B1B X Print.nextcrd
0x7B7C   PrintSym.xor1
0x7B30   Print.inv
0x7BDD   PrintSym.xor2
0x7B49   Print.noscroll
0x7C93   ScrollUP
0x7B4D   Print.prtNullX
0x7DC1   PrtAtr
0x7C79   COORD
0x7B62 X PrintSym.setatr
0x7DC2   ShiftSymb
0x7BDC   PrintSym.lp2
0x7B7D X PrintSym.lp1
0x7C3D X DOWND
0x7C4C X ADRZ
0x7C5C X ADRATR
0x7C6F X DOWN8
0x7C81   LF1
0x7C9B   ScrollUP.SCR1
0x7CBF   CopyRow
0x7CAB   ScrollUP.SCR2
0x7CB1   ScrollUP.SCR3
0x7CB4   ScrollUP.SCR4
0x7CC6   CopyRow.SCR5
0x7DA6   CursorOn
0x7DB3   CursorOff
0x5B5C   CurrentPage
0x7ED0   FindDrv
0x7E67   DrvCnt
0x7E94   msgDrvFounded
0x7F0C   GetFirstDrvName
0x7DE7   LoadDriver.lp0
0x7E7E   msgDrvNames.num
0x7E85   msgDrvNames.name
0x7E7B   msgDrvNames
0x7F30   GetNextDrvName
0x7E0D   LoadDriver.lp1
0x7E69   msgDrvSelect
0x7E33   LoadDriver.inval
0x7E3B   LoadDriver.ld1
0x7F62   GetDrvSpec
0x7EA9   msgDrvLoad
0x7EE6   FindDrv.loop
0x7F09   FindDrv.end
0x7F05   FindDrv.next
0x7F60   GetNextDrvName.end
0x7F36   GetNextDrvName.next
0x7F6A   GetDrvSpec.loop
0x7F8E   GetDrvSpec.end
0x7F89   GetDrvSpec.next
0x7F90   AddCMD
0x7FCD   Prompt.keys
0x7FBD   Prompt.key
0x7FC2   Prompt.nokey
0x7FF2   Prompt.anykey
0x7FD5   Prompt.keys1
0x7FE1   Prompt.found
0x80A6   EditString.edMax
0x80A7   EditString.edBuf
0x80AB   EditString.edCur
0x80A9   EditString.edCRDS
0x801A   EditString.k2
0x803B X EditString.key
0x8040   EditString.nokey
0x809D   EditString.break
0x807C   EditString.del
0x8092   EditString.enter
0x806B   EditString.k1
0x808E   EditString.k3
0x80B6   PRNUM1
0x8105   HEXDEC_PRNUM
0x8104   NUMFILL_PRNUM
0x80CA   PRN1
0x80CC   PRN2
0x80D1   PRN6
0x80D9   PRN4
0x80EA   PRN3
0x80F0   PRN7
0x80FA   PRN5
0x8109   MRNUM.lp1
0x8130   MRNUM.end
0x812D   MRNUM.next
0x8133   MRNUM.err
0x8139   MRNUM.conv
0x813D   CONVM1
0x8152   CONVM2
0x817F   CONVB
0x8159   CONVM21
0x8161   CONVM3
0x816F   M_0_9
0x8173   M_A_F
0x816B X M_a_f
0x8175   CONVST
0x8181   CONVM4
0x8196   ByteToHEX.bt3
0x819E   ByteToHEX.bt1
0x81A0   ByteToHEX.bt2
0x81A2   PRNUMSEC
0x81AC   PRNUMBYTES
0x81F7   msgMBtxt
0x81C4   PRNUMBYTES.p3
0x81B4   PRNUMBYTES.p2
0x81D0   PRNUMBYTES.p6
0x81E6   PRNUMBYTES.p4
0x81D5   PRNUMBYTES.p7
0x81E7   PRNUMBYTES.p1
0x81E3   PRNUMBYTES.p5
0x82A0   tabFS
0x81FD   GetFSName.g1
0x8224   GetFSName.notfound
0x820C   GetFSName.found
0x8204   GetFSName.g2
0x820F   GetFSName.f1
0x821B   GetFSName.f2
0x821D   GetFSName.f3
0x8295   strUnknownFS
0x8230   GetFSName.n1
0x8236   ShowFSTable
0x8239   ShowFSTable.loop
0x8271   ShowFSTable.lp1
0x827A   ShowFSTable.lp2
0x8282   ShowFSTable.sf1
0x8290   ShowFSTable.lp3
0x8293 X strTabs
0x8344   dmpSector
0x843E   dSectorNumHigh
0x8440   dSectorNumLow
0xC400   SectorBuffer
0x835E   dmpShowFirstPage
0x8362   dmpShowPage
0x8499   msgSectorNum.num
0x8487   msgSectorNum
0x83A1   ShowDump
0x84AA   msgDumpCmd
0x8525   tblDumpCmd
0x839C   dmpShowSecPage
0x8405   ShowDump.sdrows
0x83BE   ShowDump.loop1
0x8444   msgDumpRow.offset
0x844B   msgDumpRow.dump
0x83D9   ShowDump.loop
0x83E4   ShowDump.lp1
0x8474   msgDumpRow.txt
0x83EF   ShowDump.lp2
0x83F6   ShowDump.lp3
0x8442   msgDumpRow
0x840E   dmpNextSector
0x8421   dmpPrevSector
0x86EC   chMBRTable
0x86E8   cLBAhigh
0x86EA   cLBAlow
0x857C   CreateMBRTable.lp1
0x860B   CheckTableEntry
0x8589   CreateMBRTable.exit
0x858D   CreateMBRTable.searchext
0x8606   CreateMBRTable.exit2
0x859B   CreateMBRTable.extend1
0x85FF   CreateMBRTable.noext1
0x85B1   CreateMBRTable.e1
0x85F0   CreateMBRTable.lp2
0x85FD   CreateMBRTable.endext
0x8615   CheckTableEntry.n1
0x862B   CheckTableEntry.n2
0x8627   CheckTableEntry.n3
0x86DD   txtExtended
0x86C6   CheckTableEntry.n4
0x8670   CheckTableEntry.n5
0x86D2   txtNoLabel
0xC600   SectorBuffer1
0x86C5   CheckTableEntry.n6
0x86ED   DelRowFromMBR
0x8703   DelRowFromMBR.skip1
0x86FF   DelRowFromMBR.n1
0x871E   DelRowFromMBR.null
0x8715   DelRowFromMBR.n2
0x8723 X CalcUnused
0x8737   CalcUnused.cu1
0x8734   CalcUnused.cu3
0x8732   CalcUnused.cu2
0x8778   ShowMBRUS
0x9FE0   MBRUSTable
0x8788   ShowMBRUS.n1
0x8792   ShowMBRUSRow
0x8CE7   msgMBRUSRow.num
0x8CF0   msgMBRUSRow.start
0x8CF9   msgMBRUSRow.len
0x8D02   msgMBRUSRow.lenbytes
0x8CE4   msgMBRUSRow
0x87F5   CreateMBRUSforPRI
0x8CDE   tMBRUS
0x8B27   CreateMBRUS.hddclear
0x8813 X CreateMBRUSforPRI.cr00
0x8844   CreateMBRUSforPRI.cr01
0x8838   CreateMBRUSforPRI.cr02
0x8B5A   addMBRUSItem
0x8848   CreateMBRUSforPRI.cr0
0x8C9D   NextPrimary
0x88CD   CreateMBRUSforPRI.nextcheck
0x88BD   CreateMBRUSforPRI.cr1
0x88B7   CreateMBRUSforPRI.incorrect1
0x88AB X CreateMBRUSforPRI.cr5
0x88B1   CreateMBRUSforPRI.cr52
0x8BB4   addMBRUS
0x88C6   CreateMBRUSforPRI.cr2
0x8D0D   msgIncorrect
0x8AEC   CreateMBRUS.countunused
0x8947 X CreateMBRUS.cr00
0x8978   CreateMBRUS.cr011
0x896C   CreateMBRUS.cr02
0x897C   CreateMBRUS.cr0
0x8A01   CreateMBRUS.nextcheck
0x89F1   CreateMBRUS.cr1
0x89EB   CreateMBRUS.incorrect1
0x89DF X CreateMBRUS.cr5
0x89E5   CreateMBRUS.cr52
0x89FA   CreateMBRUS.cr2
0x8C34   GetExtended
0x8A92   CreateMBRUS.nextcheck1
0x8C59   NextSecondary
0x8A0E   CreateMBRUS.cr01
0x8A82   CreateMBRUS.cr6
0x8A7C   CreateMBRUS.incorrect2
0x8A70 X CreateMBRUS.cr51
0x8A76   CreateMBRUS.cr53
0x8A8B   CreateMBRUS.cr7
0x8C24   GetLastPartition
0x8CE0   tUnused
0x8B1E   CreateMBRUS.l2
0x8AFF   CreateMBRUS.l1
0x8BA0   CheckAdequacy
0x8B94   Compare32
0x8C18   ShowPartitions.s3
0x8C2E   GetLastPartition.n1
0x8C37   GetExtended.n1
0x8C84   CheckPrimary
0x8C48   GetMFS
0x8C4B   GetMFS.n1
0x8C5C   NextSecondary.n1
0x8C6F   CheckSecondary
0x8C6D X NextSecondary.n2
0x8C99   cpend
0x8CA0   NextPrimary.n1
0x8CA9   GetMBRROWbyNum
0x8CB0   GetMBRROWbyNum.g1
0x8CB6   LBAtoCHS
0x9D21   MUL16
0x9D3A   DIV_HLBC_DE
0x9D37   DIV16
0x8D08 X msgMBRUSRow.mb
0x8EA9   msgChangeTypeFS
0x8D64   ChangeTypeFS.ct2
0x8D5F X ChangeTypeFS.ct1
0x8D6D   ChangeTypeFS.ct3
0x8DD3   selPartition
0x8D77   ChangeTypeFS.ct5
0x8D7E   ChangeTypeFS.ct4
0x8DC1   ChangeTypeFS.ct6
0x8E8D   msgListFS
0x8E70   msgNewID
0x8DCA   ChangeTypeFS.notsetext
0x8DD4   msgExtNoModify
0x8E03   msgNoExt
0x8FD9   msgSetBootable
0x8ED4   SetBootable.sb0
0x8EF7   SetBootable.sb2
0x8EF2 X SetBootable.sb1
0x8F00   SetBootable.sb3
0x8F07   SetBootable.sb5
0x8F0E   SetBootable.sb4
0x8F4F   SetBootable.extnoboot
0x8F46   SetBootable.bootable
0x8F34   SetBootable.sb6
0x8F58   msgBootable
0x8F8D   msgNoBootable
0x9513   msgBackup
0x9000   BackupPartitions.reentername
0x9537   msgBackupEnter
0x9039   BackupPartitions.n3
0x905C   BackupPartitions.b1
0x93F4   dFileSize
0x90B1   BackupPartitions.nofile
0x94AF   msgFileExist
0xC800   SectorBuffer2
0x9118   BackupPartitions.nocarry
0x94EC   msgRestore
0x9331   FindMBRFiles
0x93F6   bFilesCount
0x9181   RestorePartition.rest
0x9429   msgNoFiles
0x9414   msgFounded
0x936E   GetFirstMBRName
0x9191   RestorePartition.lp0
0x93FA   msgNames.num
0x9403   msgNames.name
0x93F7   msgNames
0x91C0   RestorePartition.lp1
0x9392   GetNextMBRName
0x91D3   RestorePartition.n1
0x948E   msgNumber
0x91F9   RestorePartition.inval
0x920E   RestorePartition.ld1
0x93C4   GetMBRSpec
0x94D6   msgFileBig
0x9327   Compare
0x9241   RestorePartition.ok1
0x966E   msgNotBackup
0x9578   msgBackInfo.model
0x95B9   msgBackInfo.sn
0x95E2   msgBackInfo.cyl
0x95F5   msgBackInfo.head
0x9608   msgBackInfo.sec
0x9621   msgBackInfo.recs
0x954B   msgBackInfo
0x928E   RestorePartition.ss3
0x92A5   RestorePartition.n3
0x9322   RestorePartition.different
0x963B   msgBackLoad
0x92FA   RestorePartition.s1
0x9310   RestorePartition.s3
0x9454   msgDifferent
0x9348   FindMBRFiles.loop
0x936B   FindMBRFiles.end
0x9367   FindMBRFiles.next
0x93C2   GetNextMBRName.end
0x9398   GetNextMBRName.next
0x93CE   GetMBRSpec.loop
0x93F2   GetMBRSpec.end
0x93EE   GetMBRSpec.skip
0x93EE X GetMBRSpec.next
0x96E0   msgDeletePart
0x96BA   DeletePart.ct2
0x96B5 X DeletePart.ct1
0x96C3   DeletePart.ct3
0x9B40   msgCrPartition
0x9732   CreatePartition.crmenupart
0x970B   CreatePartition.n1
0x9712   CreatePartition.n2
0x9727   CreatePartition.n5
0x9718 X CreatePartition.n3
0x9725   CreatePartition.n4
0x9732   CreatePartition.n6
0x977F   CreatePartition.notcr
0x9988   tabCreatePartCMD
0x9794   CreatePRIPart
0x9B68   msgCrPrimary
0x9B84   msgCrExtended
0x9BA0   msgCrSecondary
0x9BBC   msgCrMOALocal
0x9B0F   msgNotingCreate
0x9A0A   msgCrPrimaryTxt
0x97AC   CreatePRIPart.c1
0x9BDE   msgNoFreeSpace
0x996D   CreatePRIPart.c2
0x981F   CreatePRIPart.ct2
0x9983   bCrPartType
0x97DB   CreatePRIPart.c4
0x97F3   CreatePRIPart.c3
0x97E1   CreatePRIPart.c6
0x97E9   CreatePRIPart.c5
0x9A67   msgFoundExtended
0x9A98   msgSelMBRUS
0x99B9   msgEnterFreeSpace
0x9834   CreatePRIPart.ct3
0x9822   CreatePRIPart.err
0x9982   bCrSpace
0x99EA   msgPartitionSize
0x9984   dwCrPartSize
0x9877   CreatePRIPart.cr4
0x987E   CreatePRIPart.cr3
0x9995   msgSizeTooLarge
0x997E   dCrCylinder
0x9980   bCrHead
0x9981   bCrSector
0x990E   CreatePRIPart.decHLBC
0x997C X dCrTemp
0x9A28 X msgCrSecondaryTxt
0x9A48 X msgCrExtendedTxt
0x9B72 X msgCrPrimary.txt
0x9B8E X msgCrExtended.txt
0x9BAA X msgCrSecondary.txt
0x9BC6 X msgCrMOALocal.txt
0x9D0B   msgFormatPartition
0x9C1F   FormatPartition.ct4
0x9C44   FormatPartition.ct2
0x9C3F X FormatPartition.ct1
0x9C4D   FormatPartition.ct3
0x9C99   msgFormatFS.type
0x9C8E   msgFormatFS
0x9C74   ExtPartFormat
0x9C71   FormatMOA
0x9C79   UnknownFS
0x9CAF   msgFormatExt
0x9C7C   ErrFormat
0x9CE0   msgNotSupported
0x9D24 X MUL_HLBC_DE
0x9D30   MUL_HLBC_DE.l1
0x9D29   MUL_HLBC_DE.l2
0x9D2C   MUL_HLBC_DE.l3
0x9D40   DIV_HLBC_DE.l1
0x9D53   DIV_HLBC_DE.l2
0x9D4B   DIV_HLBC_DE.l3
0x9D4C   DIV_HLBC_DE.l4
0xBF02 X _ClearScreen
0xBF05 X _PrintChar
0xBF08 X _ScrollUP
0xBF0B X _CursorOn
0xBF0E X _CursorOff
0xBF11 X _AddCMD
0xBF14 X _SelectCMD
0xBF17 X _Prompt
0xBF1A X _EditString
0xBF1D X _PRNUM
0xBF20 X _PRNUM0
0xBF23 X _SetDEC
0xBF26 X _SetHEX
0xBF29 X _MRNUM
0xBF2C X _ByteToHEX
0xBF2F X _PRNUMSEC
0xBF32 X _PRNUMBYTES
0xBF35 X _OpenPG
0xBF38 X _ShowPartitions
0xBF3B X _GetLastPartition
0xBF3E X _GetExtended
0xBF41 X _NextSecondary
0xBF44 X _CheckSecondary
0xBF47 X _CheckPrimary
0xBF4A X _NextPrimary
0xBF4D X _ShowMBRUS
0x9DA6   MainEnd
0x3DA6 X MainSize
0x9E00   hlpString
